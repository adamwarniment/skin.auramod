<?xml version="1.0" encoding="utf-8"?>
<includes>
  <include name="Object_Info">
    <param name="hdsd_flag" default="false" />
    <param name="rottentomatoes" default="true" />
    <param name="imdbvotes" default="Skin.HasSetting(Ratings.IMDBVotes)" />
    <param name="usermeter" default="true" />
    <param name="imdb" default="true" />
    <param name="tmdb" default="true" />
    <param name="metacritic" default="true" />
    <param name="oscars" default="true" />
    <param name="genre" default="true" />
    <param name="top250" default="true" />
    <param name="titleright" default="0" />
    <definition>
      <control type="grouplist">
        <top>-10</top>
        <posx>10</posx>
        <visible>Container.Content(movies) | Container.Content(sets) | Container.Content(episodes) | Container.Content(tvshows) | Container.Content(videos) | Container.Content(seaons) | Window.IsVisible(script-script.extendedinfo-VideoList.xml) | $EXP[Exp_IsPluginAdvancedLauncher]</visible>
        <visible>!Container($PARAM[id]).ListItem.IsParentFolder</visible>
        <orientation>vertical</orientation>
        <usecontrolcoords>true</usecontrolcoords>
        <itemgap>0</itemgap>
        <control type="image" id="55443">
          <visible>!Skin.HasSetting(DisableNetflixView) + [Control.IsVisible(55) | Control.IsVisible(56) | Control.IsVisible(509)]</visible>
          <left>0</left>
          <right>$PARAM[titleright]</right>
          <top>-5</top>
          <bottom>10</bottom>
          <height>155</height>
          <width>400</width>
          <aligny>top</aligny>
          <texture background="true">$VAR[Image_ClearLogo]</texture>
        </control>
        <control type="label">
          <visible>String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.ClearLogo))</visible>
          <left>0</left>
          <right>$PARAM[titleright]</right>
          <label>$INFO[ListItem.Label]</label>
          <top>-100</top>
          <textcolor>red</textcolor>
          <font>netflix_heading</font>
          <width min="200" max="700">auto</width>
          <scroll>true</scroll>
        </control>
        <control type="label">
          <visible>Skin.HasSetting(DisableNetflixView) | Window.IsVisible(DialogVideoInfo.xml)</visible>
          <left>0</left>
          <right>$PARAM[titleright]</right>
          <label>$INFO[ListItem.Label]</label>
          <height>80</height>
          <align>top</align>
          <textcolor>main_fg_100</textcolor>
          <font>font_showcase_title</font>
        </control>
        <control type="grouplist">
          <top>20</top>
          <height>40</height>
          <orientation>horizontal</orientation>
          <usecontrolcoords>true</usecontrolcoords>
          <itemgap>0</itemgap>
          <left>0</left>
          <right>$PARAM[titleright]</right>
          <control type="image">
            <left>0</left>
            <top>10</top>
            <width>37</width>
            <height>24</height>
            <texture colordiffuse="main_fg_100">$VAR[Image_HDSD]</texture>
            <visible>Container.Content(movies) | Container.Content(episodes)</visible>
            <visible>$PARAM[hdsd_flag]</visible>
            <visible>![Skin.HasSetting(DisableInfoRatings) + !Window.IsVisible(DialogVideoInfo.xml)]</visible>
          </control>
          <control type="label">
            <label>|</label>
            <width>auto</width>
            <height>40</height>
            <aligny>top</aligny>
            <textcolor>$VAR[ColorHighlight]</textcolor>
            <font>font_small</font>
            <visible>Container.Content(movies) | Container.Content(episodes)</visible>
            <visible>$PARAM[hdsd_flag]</visible>
            <visible>![Skin.HasSetting(DisableInfoRatings) + !Window.IsVisible(DialogVideoInfo.xml)]</visible>
          </control>
          <control type="label">
            <width>auto</width>
            <label>$VAR[Label_ShowCase_InfoLine]</label>
            <height>40</height>
            <aligny>top</aligny>
            <textcolor>$VAR[ColorHighlight]</textcolor>
            <font>font_small</font>
          </control>
          <control type="label">
            <width>auto</width>
            <label>$VAR[Label_Info_NextAired_Status, | [COLOR=main_fg_100],[/COLOR]]$VAR[Label_Info_NextAired_Date, [COLOR=main_fg_100],[/COLOR]]</label>
            <height>40</height>
            <aligny>top</aligny>
            <textcolor>$VAR[ColorHighlight]</textcolor>
            <font>font_small</font>
            <visible>Container.Content(tvshows)</visible>
            <visible>!Control.IsVisible(500)</visible>
          </control>
        </control>
        <control type="group">
          <height>80</height>
          <left>0</left>
          <right>0</right>
          <control type="group">
            <visible>[Skin.HasSetting(DisableInfoRatings) + !Window.IsVisible(DialogVideoInfo.xml)] + [Container.Content(movies) | Container.Content(episodes)]</visible>
            <include content="Object_Flags">
              <param name="container" value="" />
              <param name="directory" value="color" />
              <param name="align" value="left" />
              <param name="ratings" value="true" />
            </include>
          </control>
          <control type="group">
            <visible>![Skin.HasSetting(DisableInfoRatings) + !Window.IsVisible(DialogVideoInfo.xml)] | [!Container.Content(movies) + !Container.Content(episodes)]</visible>
            <control type="group">
              <top>-17</top>
              <left>-16</left>
              <include>Object_StarRating</include>
              <visible>String.IsEmpty(ListItem.UserRating)</visible>
              <visible>!Skin.HasSetting(DisableStarRating)</visible>
            </control>
            <control type="group">
              <top>-17</top>
              <left>-16</left>
              <include content="Object_StarRating">
                <param name="rating_prop" value="ListItem.UserRating" />
              </include>
              <visible>!String.IsEmpty(ListItem.UserRating)</visible>
              <visible>!Skin.HasSetting(DisableStarRating)</visible>
            </control>
            <control type="group">
              <visible>Skin.HasSetting(DisableNetflixView)</visible>
              <top>24</top>
              <left>256</left>
              <width>$PARAM[width]</width>
              <animation effect="slide" end="-256" condition="Skin.HasSetting(DisableStarRating)">Conditional</animation>
              <include content="Object_Ratings" condition="Window.IsVisible(MyVideoNav.xml) | Window.IsVisible(Home.xml) | Window.IsVisible(script-globalsearch.xml)">
                <param name="directory" value="color" />
                <param name="align" value="left" />
                <param name="width" value="$PARAM[width]" />
                <param name="rottentomatoes" value="$PARAM[rottentomatoes]" />
                <param name="imdbvotes" value="$PARAM[imdbvotes]" />
                <param name="usermeter" value="$PARAM[usermeter]" />
                <param name="imdb" value="$PARAM[imdb]" />
                <param name="tmdb" value="$PARAM[tmdb]" />
                <param name="metacritic" value="$PARAM[metacritic]" />
                <param name="oscars" value="$PARAM[oscars]" />
                <param name="top250" value="$PARAM[top250]" />
              </include>
            </control>
          </control>
        </control>
        <control type="label">
          <visible>Skin.HasSetting(DisableNetflixView)</visible>
          <left>0</left>
          <right>0</right>
          <label>[CAPITALIZE]$VAR[Label_Genre][/CAPITALIZE]</label>
          <height>60</height>
          <aligny>top</aligny>
          <textcolor>main_fg_100</textcolor>
          <font>font_small</font>
          <visible>$PARAM[genre]</visible>
        </control>
        <control type="textbox">
          <visible>Skin.HasSetting(DisableNetflixView)</visible>
          <label fallback="19055">$VAR[Label_Plot]</label>
          <height>$PARAM[plot_height]</height>
          <aligny>top</aligny>
          <textcolor>main_fg_70</textcolor>
          <font>font_plotbox</font>
        </control>
        <control type="textbox">
          <visible>!Skin.HasSetting(DisableNetflixView)</visible>
          <label fallback="19055">$VAR[Label_Plot]</label>
          <width>850</width>
          <height>$PARAM[plot_height]</height>
          <aligny>top</aligny>
          <textcolor>main_fg_70</textcolor>
          <font>font_plotbox</font>
        </control>
      </control>
      <control type="grouplist">
        <visible>![Container.Content(movies) | Container.Content(sets) | Container.Content(episodes) | Container.Content(tvshows) | Container.Content(videos) | Container.Content(seaons) | Window.IsVisible(script-script.extendedinfo-VideoList.xml) | $EXP[Exp_IsPluginAdvancedLauncher]]</visible>
        <visible>!Container($PARAM[id]).ListItem.IsParentFolder</visible>
        <bottom>$PARAM[bottom]</bottom>
        <top>-10</top>
        <orientation>vertical</orientation>
        <usecontrolcoords>true</usecontrolcoords>
        <itemgap>0</itemgap>
        <control type="label">
          <left>0</left>
          <right>0</right>
          <label>$VAR[Label_MainTitle]</label>
          <height>80</height>
          <aligny>top</aligny>
          <textcolor>main_fg_100</textcolor>
          <font>font_showcase_title</font>
        </control>
        <control type="label">
          <left>0</left>
          <right>0</right>
          <label>$VAR[Label_SubTitle]</label>
          <height>40</height>
          <aligny>top</aligny>
          <textcolor>$VAR[ColorHighlight]</textcolor>
          <font>font_small</font>
        </control>
        <control type="group">
          <height>80</height>
          <visible>!Skin.HasSetting(DisableStarRating)</visible>
          <control type="group">
            <top>-17</top>
            <left>-16</left>
            <include content="Object_StarRating_Music">
              <param name="align" value="left" />
              <param name="visible" value="String.IsEmpty(ListItem.UserRating)" />
            </include>
            <include content="Object_StarRating">
              <param name="align" value="left" />
              <param name="visible" value="!String.IsEmpty(ListItem.UserRating)" />
              <param name="rating_prop" value="ListItem.UserRating" />
            </include>
          </control>
        </control>
        <control type="textbox">
          <label fallback="19055">$VAR[Label_Plot]</label>
          <height>$PARAM[plot_height]</height>
          <aligny>top</aligny>
          <textcolor>main_fg_70</textcolor>
          <font>font_plotbox</font>
        </control>
      </control>
    </definition>
  </include>


  <include name="Object_Seasons_Info">
    <control type="group">
      <control type="label">
        <visible>String.IsEmpty(Container(504).ListItem.Art(clearlogo))</visible>
        <top>25</top>
        <left>40</left>
        <label>$VAR[video_heading]</label>
        <textcolor>grey</textcolor>
        <shadowcolor>black</shadowcolor>
        <font>netflix_heading_small</font>
        <width min="200" max="300">auto</width>
        <height min="50" max="150">auto</height>
        <align>left</align>
        <wrapmultiline>true</wrapmultiline>
      </control>
      <control type="image" id="56751">
        <left>40</left>
        <top>-20</top>
        <height>200.8</height>
        <width>416</width>
        <aligny>top</aligny>
        <align>left</align>
        <texture background="true">$VAR[NetflixHome_ClearLogo]</texture>
      </control>
      <control type="group">
        <top>180</top>
        <left>30</left>
        <include>netflix_infoline</include>
      </control>
    </control>
  </include>



  <include name="Object_Episodes_Info">
    <control type="group">
<!--
      <control type="image" id="56777">
        <top>-40</top>
        <left>0</left>
        <width>100%</width>
        <height>100%</height>
        <texture bakground="true">$VAR[Spotlight_Fanart]</texture>
      </control>
      <control type="image">
        <top>-40</top>
        <left>0</left>
        <width>100%</width>
        <height>100%</height>
        <texture background="true" colordiffuse="FF000000" flipy="true">common/background_diffuse.png</texture>
      </control>
-->
      <control type="label">
        <visible>String.IsEmpty(Control.GetLabel(5675))</visible>
        <top>25</top>
        <left>40</left>
        <label>$VAR[video_heading]</label>
        <textcolor>grey</textcolor>
        <shadowcolor>black</shadowcolor>
        <font>netflix_heading_small</font>
        <width min="200" max="300">auto</width>
        <height min="50" max="150">auto</height>
        <align>left</align>
        <wrapmultiline>true</wrapmultiline>
      </control>
      <control type="image" id="5675">
        <left>40</left>
        <top>-20</top>
        <height>200.8</height>
        <width>416</width>
        <aligny>top</aligny>
        <align>left</align>
        <texture background="true">$VAR[NetflixHome_ClearLogo]</texture>
      </control>
      <control type="group">
        <top>180</top>
        <left>30</left>
        <include>netflix_infoline</include>
      </control>
      <!--
      <control type="group">
        <top>155</top>
        <left>40</left>
        <include content="Object_StarRating" condition="![Skin.HasSetting(DisableInfoRatings) + !Window.IsVisible(DialogVideoInfo.xml)] | [!Container.Content(movies) + !Container.Content(episodes)]">
          <param name="height" value="45" />
          <param name="width" value="45" />
        </include>
      </control>
      <control type="grouplist">
        <orientation>horizontal</orientation>
        <usecontrolcoords>true</usecontrolcoords>
        <itemgap>20</itemgap>
        <top>180</top>
        <left>210</left>
        <width>800</width>
        <control type="label">
          <width>auto</width>
          <height>40</height>
          <label>$INFO[ListItem.Year]</label>
          <textcolor>white</textcolor>
          <font>font_tiny_bold</font>
        </control>
        <control type="label">
          <width>auto</width>
          <height>40</height>
          <label>$INFO[ListItem.MPAA]</label>
          <textcolor>white</textcolor>
          <font>font_tiny_bold</font>
        </control>
      </control>
-->
      <control type="button">
        <top>260</top>
        <left>50</left>
        <texturenofocus border="10" colordiffuse="FFFFFFFF">common/selectbox.png</texturenofocus>
        <texturefocus border="10" colordiffuse="FFFFFFFF">common/selectbox.png</texturefocus>
        <width>330</width>
        <height>60</height>
        <textoffsetx>15</textoffsetx>
        <align>left</align>
        <label>Season $INFO[ListItem.Season]</label>
        <textcolor>white</textcolor>
        <shadowcolor>black</shadowcolor>
        <font>font_tiny_bold</font>
        <visible>!Control.IsVisible(504)</visible>
      </control>
    </control>
  </include>

  <include name="Object_Home_Netflix_Mixed">
    <control type="group">
      <!-- Start alt layout -->
      <visible>![String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,season)]</visible>
      <visible>Control.HasFocus(300) | Control.HasFocus(302) | Control.HasFocus(30222) | ControlGroup(330).HasFocus</visible>
      <include>Object_Home_Netflix_Alt</include>
    </control>
    <!--end alt layout-->
    <control type="group">
      <!-- start layout 2 -->
      <visible>String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,season)</visible>
      <visible>Control.HasFocus(300) | Control.HasFocus(302) | Control.HasFocus(30222) | ControlGroup(330).HasFocus</visible>
      <include>Object_Home_Netflix</include>
    </control>
    <!-- End layout 2-->
  </include>

  <include name="Spotlight_Tvshows_Widget">
    <control type="group">
      <control type="list" id="1505">
        <visible>[Control.HasFocus(300) | Control.HasFocus(3022) | Control.HasFocus(30221) | Control.HasFocus(30222) | Control.HasFocus(1505) | ControlGroup(505).HasFocus] + String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true) + String.IsEqual(Container(300).ListItem.Property(widgetSpotlighttype),TVShows)</visible>
        <visible>!String.IsEqual(Container(300).ListItem.Property(widget),Weather) + !String.IsEqual(Container(300).ListItem.Property(widget),Settings)</visible>
        <defaultcontrol>4000</defaultcontrol>
        <orientation>horizontal</orientation>
        <preloaditems>1</preloaditems>
        <ondown condition="!Skin.HasSetting(DisableNetflixCatWidget)">30222</ondown>
        <ondown condition="Skin.HasSetting(DisableNetflixCatWidget)">330</ondown>
        <onleft>300</onleft>
        <onup condition="">505</onup>
        <onfocus condition="!String.IsEmpty(Window(Home).Property(ShowSpotlightInfo))">Action(Info)</onfocus>
        <onfocus condition="!String.IsEmpty(Window(Home).Property(ShowSpotlightInfo))">ClearProperty(ShowSpotlightInfo,Home)</onfocus>
        <onfocus condition="!String.IsEmpty(Window(Home).Property(SpotlightPlay))">Action(Select)</onfocus>
        <onfocus condition="!String.IsEmpty(Window(Home).Property(SpotlightPlay))">ClearProperty(SpotlightPlay,Home)</onfocus>
        <onfocus condition="!Skin.HasSetting(DisableSpotlightAutoplay) + !Player.HasVideo">AlarmClock(trailer_delay,PlayMedia($INFO[Container(1505).ListItem.Trailer],false,1),00:04,silent)</onfocus>
        <onfocus condition="!Player.HasVideo + String.IsEmpty(Window(home).Property(trailer_trailerwillplaying))">SetProperty(trailer_trailerwillplaying,true,home)</onfocus>
        <onfocus condition="!String.IsEmpty(Window(Home).Property(ShowSpotlightInfo)) + !String.IsEqual(ListItem.DBTYPE,movie) + String.IsEmpty(Container.ListItem.DBID)">ActivateWindow(Videos,$ESCINFO[Container.ListItem.FileNameAndPath],return)</onfocus>
        <!--show buttons-->
        <onfocus>SetFocus(505)</onfocus>
        <itemlayout width="1980" height="1080"></itemlayout>
        <focusedlayout width="1980" height="1080">
          <control type="group">
            <left>10</left>
            <right>-20</right>
            <animation effect="fade" start="0" end="100" delay="200" time="1000" pulse="false">Visible</animation>
            <animation effect="fade" start="100" end="0" delay="200" time="2000" pulse="false" condition="Player.HasVideo">Conditional</animation>
            <include>Global_Background</include>
          </control>
          <control type="group">
            <animation effect="slide" end="-40,50" time="10" condition="Skin.HasSetting(DisableMenuHor)">Conditional</animation>
            <animation effect="slide" end="-20,10" time="10" condition=" !Skin.HasSetting(DisableAuraHomeLayout) + !Skin.HasSetting(DisableMenuVertIcon)">Conditional</animation>
            <control type="image" id="59445">
              <top>40</top>
              <left>150</left>
              <height min="60" max="218">auto</height>
              <width>510</width>
              <aligny>top</aligny>
              <align>left</align>
              <fadetime>350</fadetime>
              <aspectratio align="left" aligny="center">keep</aspectratio>
              <texture background="true">$VAR[Widget_ClearLogo]</texture>
            </control>
            <control type="textbox">
              <top>130</top>
              <left>140</left>
              <visible>String.IsEmpty(Container(1505).ListItem.Art(clearlogo))</visible>
              <label>$VAR[video_heading]</label>
              <textcolor>grey</textcolor>
              <shadowcolor>black</shadowcolor>
              <font>spotlight_heading</font>
              <width min="200" max="500">auto</width>
              <height min="30" max="115">auto</height>
              <align>center</align>
              <wrapmultiline>true</wrapmultiline>
              <scroll>true</scroll>
            </control>
            <!-- Tagline -->
            <!--
            <control type="label" id="78631">
              <top>260</top>
              <left>150</left>
              <height>30</height>
              <label fallback="19055">[B]$VAR[Label_Netflix_Tagline][/B]</label>
              <width>500</width>
              <textcolor>white</textcolor>
              <shadowcolor>dimgrey</shadowcolor>
              <font>font_small</font>
            </control>
            -->
              <!-- Episode Label  -->
	      <control type="group">
              <top>260</top>
              <control type="label">
              <left>160</left>
                <height min="55" max="90">auto</height>
                <visible>String.IsEqual(ListItem.DBType,episode)</visible>
                <label fallback="19055">$VAR[home_simple_episode]</label>
                <width>750</width>
                <textcolor>white</textcolor>
                <shadowcolor>black</shadowcolor>
                <wrapmultiline>true</wrapmultiline>
                <font>font_medium_bold</font>
              </control>
              <!-- Aired -->
              <control type="label">
		<top>100</top>
                <left>160</left>
                <visible>String.IsEqual(ListItem.DBType,episode)</visible>
                <label fallback="19055">[I]Aired $INFO[ListItem.Premiered(DDD MMM yyyy)] on $INFO[ListItem.Studio][/I]</label>
		<height>30</height>
                <width>750</width>
                <textcolor>main_fg_100</textcolor>
                <shadowcolor>black</shadowcolor>
                <font>font_small</font>
              </control>
              </control>
            <control type="textbox">
              <left>150</left>
              <top>260</top>
              <height min="50" max="95">auto</height>
              <label fallback="19055">$VAR[Label_Plot]</label>
              <align>left</align>
              <width>500</width>
              <textcolor>dimgrey</textcolor>
              <shadowcolor>black</shadowcolor>
              <font>widget_trakt_title</font>
              <autoscroll>0</autoscroll>
             <visible>!String.IsEqual(ListItem.DBType,episode)</visible>
            </control>
            <control type="label">
              <height>5</height>
            </control>
          </control>
        </focusedlayout>
        <content target="videos" sortby="year" sortorder="descending" limit="5">$VAR[tvshowspotlightpath]</content>
      </control>
    </control>
  </include>

  <!-- Spotlight buttons @cartmandos -->
  <include name="Spotlight_Tvshows_buttons">
    <control type="grouplist" id="505">
      <defaultcontrol>4000</defaultcontrol>
      <orientation>horizontal</orientation>
      <ondown condition="Player.HasVideo">PlayerControl(Stop)</ondown>
      <ondown condition="Player.HasVideo">ClearProperty(TrailerPlaying)</ondown>
      <ondown condition="Player.HasVideo + !String.IsEmpty(Window(home).Property(trailer_trailerwillplaying))">ClearProperty(trailer_trailerwillplaying)</ondown>
      <ondown condition="System.HasAlarm(trailer_delay)">CancelAlarm(trailer_delay,true)</ondown>
      <onright condition="Player.HasVideo">PlayerControl(Stop)</onright>
      <onright condition="Player.HasVideo">ClearProperty(TrailerPlaying)</onright>
      <onright condition="Player.HasVideo + !String.IsEmpty(Window(home).Property(trailer_trailerwillplaying))">ClearProperty(trailer_trailerwillplaying)</onright>
      <onright condition="System.HasAlarm(trailer_delay)">CancelAlarm(trailer_delay,true)</onright>
      <onleft condition="Player.HasVideo">PlayerControl(Stop)</onleft>
      <onleft condition="Player.HasVideo">ClearProperty(TrailerPlaying)</onleft>
      <onleft condition="Player.HasVideo + !String.IsEmpty(Window(home).Property(trailer_trailerwillplaying))">ClearProperty(trailer_trailerwillplaying)</onleft>
      <onleft condition="System.HasAlarm(trailer_delay)">CancelAlarm(trailer_delay,true)</onleft>
      <onback>300</onback>
      <onback condition="Player.HasVideo">PlayerControl(Stop)</onback>
      <onback condition="Player.HasVideo">ClearProperty(TrailerPlaying)</onback>
      <onback condition="Player.HasVideo + !String.IsEmpty(Window(home).Property(trailer_trailerwillplaying))">ClearProperty(trailer_trailerwillplaying)</onback>
      <onback condition="System.HasAlarm(trailer_delay)">CancelAlarm(trailer_delay,true)</onback>
      <onup condition="Player.HasVideo">PlayerControl(Stop)</onup>
      <onup condition="Player.HasVideo">ClearProperty(TrailerPlaying)</onup>
      <onup condition="Player.HasVideo + !String.IsEmpty(Window(home).Property(trailer_trailerwillplaying))">ClearProperty(trailer_trailerwillplaying)</onup>
      <onup condition="System.HasAlarm(trailer_delay)">CancelAlarm(trailer_delay,true)</onup>
      <onup condition="Skin.HasSetting(DisableMenuHor)">300</onup>
      <ondown condition="!Skin.HasSetting(DisableNetflixCatWidget)">30222</ondown>
      <ondown condition="Skin.HasSetting(DisableNetflixCatWidget)">330</ondown>
      <onright>Control.Move(1505,1)</onright>
      <onleft>300</onleft>
      <width>600</width>
      <height>80</height>
      <itemgap>1</itemgap>
      <visible>[Control.HasFocus(3022) | Control.HasFocus(300) | Control.HasFocus(30221) | Control.HasFocus(30222) | Control.HasFocus(1505) | ControlGroup(505).HasFocus] + String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true) + String.IsEqual(Container(300).ListItem.Property(widgetspotlighttype),TVShows) + Integer.IsGreater(Container(1505).NumItems,0)</visible>
      <visible>!String.IsEqual(Container(300).ListItem.Property(widget),Weather) + !String.IsEqual(Container(300).ListItem.Property(widget),Settings)</visible>
      <animation effect="slide" end="-40,50" time="10" condition="Skin.HasSetting(DisableMenuHor)">Conditional</animation>
      <control type="radiobutton" id="5051">
        <!-- play -->
        <visible>Integer.IsGreater(Container(1505).NumItems,0)</visible>
        <description>Play</description>
        <width>250</width>
        <height>80</height>
        <label>[CAPITALIZE][B]Play[/B][/CAPITALIZE]</label>
        <align>center</align>
        <textcolor>grey</textcolor>
        <focusedcolor>black</focusedcolor>
        <texturefocus colordiffuse="d9ffffff" border="5">common/rounded-shadow8.png</texturefocus>
        <texturenofocus colordiffuse="darkgrey" border="5">common/rounded-shadow8.png</texturenofocus>
        <textureradioonfocus colordiffuse="black">netflix/play.png</textureradioonfocus>
        <textureradioofffocus colordiffuse="black">netflix/play.png</textureradioofffocus>
        <textureradioonnofocus colordiffuse="white">netflix/play.png</textureradioonnofocus>
        <textureradiooffnofocus colordiffuse="white">netflix/play.png</textureradiooffnofocus>
        <radioposx>45</radioposx>
        <radiowidth>25</radiowidth>
        <radioheight>35</radioheight>
        <font>Reg28</font>
        <!--                    <onclick>PlayMedia($ESCINFO[Container(1505).ListItem.FileNameAndPath])</onclick> -->
        <onclick>SetProperty(SpotlightPlay,1,Home)</onclick>
        <onclick>SetFocus(1505)</onclick>
      </control>
      <control type="button" id="5052">
        <!-- more info -->
        <visible>Integer.IsGreater(Container(1505).NumItems,0)</visible>
        <description>Info</description>
        <width>280</width>
        <height>80</height>
        <align>center</align>
        <label>[B]More Info[/B]</label>
        <textcolor>white</textcolor>
        <focusedcolor>black</focusedcolor>
        <texturefocus colordiffuse="d9ffffff" border="5">common/rounded-shadow8.png</texturefocus>
        <texturenofocus colordiffuse="darkgrey" border="5">common/rounded-shadow8.png</texturenofocus>
        <font>Reg28</font>
        <onclick>SetProperty(ShowSpotlightInfo,1,Home)</onclick>
        <onclick>close</onclick>
        <onclick>SetFocus(1505)</onclick>
      </control>
    </control>
  </include>
  <include name="Spotlight_Movies_Widget">
    <control type="group">
      <control type="list" id="1506">
        <visible>[Control.HasFocus(300) | Control.HasFocus(3022) | Control.HasFocus(30221) | Control.HasFocus(30222) | Control.HasFocus(1506) | ControlGroup(506).HasFocus] + String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true) + String.IsEqual(Container(300).ListItem.Property(widgetSpotlighttype),Movies)</visible>
        <visible>!String.IsEqual(Container(300).ListItem.Property(widget),Weather) + !String.IsEqual(Container(300).ListItem.Property(widget),Settings)</visible>
        <defaultcontrol>4000</defaultcontrol>
        <orientation>horizontal</orientation>
        <preloaditems>1</preloaditems>
        <ondown condition="!Skin.HasSetting(DisableNetflixCatWidget)">30222</ondown>
        <ondown condition="Skin.HasSetting(DisableNetflixCatWidget)">330</ondown>
        <onleft>300</onleft>
        <onup>505</onup>
        <onfocus condition="!String.IsEmpty(Window(Home).Property(ShowSpotlightInfo))">Action(Info)</onfocus>
        <onfocus condition="!String.IsEmpty(Window(Home).Property(ShowSpotlightInfo))">ClearProperty(ShowSpotlightInfo,Home)</onfocus>
        <onfocus condition="!String.IsEmpty(Window(Home).Property(SpotlightPlay))">Action(Select)</onfocus>
        <onfocus condition="!String.IsEmpty(Window(Home).Property(SpotlightPlay))">ClearProperty(SpotlightPlay,Home)</onfocus>
        <onfocus condition="!Skin.HasSetting(DisableSpotlightAutoplay) + !Player.HasVideo">AlarmClock(trailer_delay,PlayMedia($INFO[Container(1506).ListItem.Trailer],false,1),00:04,silent)</onfocus>
        <onfocus condition="!Player.HasVideo + String.IsEmpty(Window(home).Property(trailer_trailerwillplaying))">SetProperty(trailer_trailerwillplaying,true,home)</onfocus>
<!--        <onfocus condition="!String.IsEmpty(Window(Home).Property(ShowSpotlightInfo)) + !String.IsEqual(ListItem.DBTYPE,movie) + String.IsEmpty(Container.ListItem.DBID)">ActivateWindow(Videos,$ESCINFO[Container.ListItem.FileNameAndPath],return)</onfocus> -->
        <!--show buttons-->
        <onfocus>SetFocus(506)</onfocus>
        <itemlayout width="1980" height="1080"></itemlayout>
        <focusedlayout width="1980" height="1080">
          <control type="group">
            <left>10</left>
            <right>-20</right>
            <animation effect="fade" start="0" end="100" delay="200" time="1000" pulse="false">Visible</animation>
            <animation effect="fade" start="100" end="0" delay="200" time="2000" pulse="false" condition="Player.HasVideo">Conditional</animation>
            <include>Global_Background</include>
          </control>
          <control type="group">
            <animation effect="slide" end="-40,50" time="10" condition="Skin.HasSetting(DisableMenuHor)">Conditional</animation>
            <animation effect="slide" end="-20,10" time="10" condition=" !Skin.HasSetting(DisableAuraHomeLayout) + !Skin.HasSetting(DisableMenuVertIcon)">Conditional</animation>
            <control type="image" id="59445">
              <top>40</top>
              <left>150</left>
              <height min="60" max="218">auto</height>
              <width>510</width>
              <aligny>top</aligny>
              <align>left</align>
              <fadetime>350</fadetime>
              <aspectratio align="left" aligny="center">keep</aspectratio>
              <texture background="true">$VAR[Widget_ClearLogo]</texture>
            </control>
            <control type="textbox">
              <top>130</top>
              <left>110</left>
              <visible>String.IsEmpty(Container(1506).ListItem.Art(clearlogo))</visible>
              <label>$VAR[video_heading]</label>
              <textcolor>grey</textcolor>
              <shadowcolor>black</shadowcolor>
              <font>spotlight_heading</font>
              <width min="200" max="500">auto</width>
              <height min="30" max="115">auto</height>
              <align>center</align>
              <wrapmultiline>true</wrapmultiline>
              <scroll>true</scroll>
            </control>
            <!-- Tagline -->
            <!--
            <control type="label" id="78631">
              <top>260</top>
              <left>150</left>
              <height>30</height>
              <label fallback="19055">[B]$VAR[Label_Netflix_Tagline][/B]</label>
              <width>500</width>
              <textcolor>white</textcolor>
              <shadowcolor>dimgrey</shadowcolor>
              <font>font_small</font>
            </control>
-->
            <control type="textbox">
              <left>150</left>
              <top>260</top>
              <height min="50" max="95">auto</height>
              <label fallback="19055">$VAR[Label_Plot]</label>
              <align>left</align>
              <width>500</width>
              <textcolor>dimgrey</textcolor>
              <shadowcolor>black</shadowcolor>
              <font>widget_trakt_title</font>
              <autoscroll>0</autoscroll>
            </control>
            <control type="label">
              <height>5</height>
            </control>
          </control>
        </focusedlayout>
        <content target="videos" sortby="year" sortorder="descending" limit="5">$VAR[moviespotlightpath]</content>
      </control>
    </control>
  </include>

  <!-- TV Next Aired Spotlight --> 
  <include name="Spotlight_TVNextAired_AuraWidget">
    <control type="group" id="51507">
      <width>1920</width>
      <height>190</height>
      <onup condition="Window.IsVisible(Custom_Hub_Media.xml)">54</onup>
      <ondown condition="Window.IsVisible(Custom_Hub_Media.xml)">5412</ondown>
      <control type="button" id="41507">
        <onfocus condition="String.Contains(System.Date,Monday)">SetFocus(10)</onfocus>
        <onfocus condition="String.Contains(System.Date,Tuesday)">SetFocus(11)</onfocus>
        <onfocus condition="String.Contains(System.Date,Wednesday)">SetFocus(12)</onfocus>
        <onfocus condition="String.Contains(System.Date,Thursday)">SetFocus(13)</onfocus>
        <onfocus condition="String.Contains(System.Date,Friday)">SetFocus(14)</onfocus>
        <onfocus condition="String.Contains(System.Date,Saturday)">SetFocus(15)</onfocus>
        <onfocus condition="String.Contains(System.Date,Sunday)">SetFocus(16)</onfocus>
      </control>
<!--
      <control type="group" id="31507">
        <control type="image">
          <width>1750</width>
          <height>190</height>
          <texture colordiffuse="50000000" background="true">diffuse/landscape.png</texture>
        </control>
      </control>
-->
      <control type="grouplist" id="1507">
        <orientation>horizontal</orientation>
        <width>1620</width>
        <height>360</height>
	<left>60</left>
        <onup>54</onup>
	<onup condition="Window.IsVisible(Custom_Hub_Media.xml)">54</onup>
        <include content="NextAiredUpcomingWidget">
          <param name="id" value="10" />
          <param name="day" value="Monday" />
          <param name="dayshort" value="Mon" />
        </include>
        <include content="NextAiredUpcomingWidget">
          <param name="id" value="11" />
          <param name="day" value="Tuesday" />
          <param name="dayshort" value="Tue" />
        </include>
        <include content="NextAiredUpcomingWidget">
          <param name="id" value="12" />
          <param name="day" value="Wednesday" />
          <param name="dayshort" value="Wed" />
        </include>
        <include content="NextAiredUpcomingWidget">
          <param name="id" value="13" />
          <param name="day" value="Thursday" />
          <param name="dayshort" value="Thu" />
        </include>
        <include content="NextAiredUpcomingWidget">
          <param name="id" value="14" />
          <param name="day" value="Friday" />
          <param name="dayshort" value="Fri" />
        </include>
        <include content="NextAiredUpcomingWidget">
          <param name="id" value="15" />
          <param name="day" value="Saturday" />
          <param name="dayshort" value="Sat" />
        </include>
        <include content="NextAiredUpcomingWidget">
          <param name="id" value="16" />
          <param name="day" value="Sunday" />
          <param name="dayshort" value="Sun" />
        </include>
      </control>
    </control>
  </include>

  <include name="Spotlight_TV_AuraWidget">
    <control type="group" id="21505">
      <visible>String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true) + String.IsEqual(Container(300).ListItem.Property(widgetSpotlighttype),TVShows)</visible>
      <visible>Container(1505).IsUpdating + !Integer.IsGreater(Container(1505).NumItems,0)</visible>
      <control type="group">
        <top>40</top>
        <left>90</left>
        <control type="image">
          <width>1750</width>
          <height>570</height>
          <bordersize>1</bordersize>
          <texture colordiffuse="PixelLines" border="20">common/outline.png</texture>
        </control>
      </control>
      <control type="group">
        <height>40</height>
        <top>250</top>
        <left>-400</left>
        <include content="Defs_BusySpinner">
          <param name="label" value="$LOCALIZE[31138]..." />
        </include>
      </control>
    </control>
    <control type="list" id="1505">
      <animation effect="slide" end="-30,-20" time="0" condition="Skin.HasSetting(DisableMenuHor)">Conditional</animation>
      <scrolltime tween="sine" easing="out">500</scrolltime>
      <visible>String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true) + String.IsEqual(Container(300).ListItem.Property(widgetSpotlighttype),TVShows)</visible>
      <visible>!String.IsEqual(Container(300).ListItem.Property(widget),Weather) + !String.IsEqual(Container(300).ListItem.Property(widget),Settings)</visible>
      <defaultcontrol>4000</defaultcontrol>
      <orientation>horizontal</orientation>
      <preloaditems>1</preloaditems>
      <ondown condition="!Skin.HasSetting(DisableNetflixCatWidget)">30222</ondown>
      <ondown condition="Skin.HasSetting(DisableNetflixCatWidget)">330</ondown>
      <onleft>300</onleft>
      <height>570</height>
      <top>40</top>
      <left>90</left>
      <onclick condition="!Skin.HasSetting(EnableShowInfo) + [String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,movie)]">Action(Info)</onclick>
      <itemlayout width="1750" height="570"></itemlayout>
      <focusedlayout width="1750" height="570">
        <control type="group">
          <control type="image">
            <right>0</right>
            <width>1013.33</width>
            <height>570</height>
            <texture background="true">$VAR[Spotlight_Fanart]</texture>
            <aspectratio>keep</aspectratio>
          </control>
          <control type="image">
            <width>100%</width>
            <height>100%</height>
            <texture background="true" colordiffuse="60000000">diffuse/landscape.png</texture>
          </control>
          <control type="group">
            <control type="image">
              <top>30</top>
              <left>40</left>
              <height min="60" max="218">auto</height>
              <width>510</width>
              <aligny>top</aligny>
              <align>left</align>
              <aspectratio align="left" aligny="center">keep</aspectratio>
              <texture background="true">$VAR[Widget_ClearLogo]</texture>
            </control>
            <control type="label">
              <top>60</top>
              <left>40</left>
              <visible>String.IsEmpty(Container(1505).ListItem.Art(clearlogo))</visible>
              <label>$VAR[video_heading]</label>
              <textcolor>grey</textcolor>
              <shadowcolor>black</shadowcolor>
              <font>spotlight_widget_heading</font>
              <width min="200" max="650">auto</width>
              <height>40</height>
              <align>center</align>
              <scroll>true</scroll>
            </control>
            <control type="group">
              <animation effect="slide" end="0,-120" time="0" condition="String.IsEmpty(Container(1506).ListItem.Art(clearlogo))">Conditional</animation>
              <control type="group">
                <top>240</top>
                <width>200</width>
                <left>30</left>
		<visible>!Skin.HasSetting(DisableStarRating)</visible>
                <include content="Object_StarRating" condition="![Skin.HasSetting(DisableInfoRatings)]">
                  <param name="height" value="50" />
                  <param name="width" value="50" />
                </include>
              </control>
              <!-- Year -->
              <control type="label">
                <left>220</left>
                <width>60</width>
                <label>$INFO[ListItem.Year]</label>
                <textcolor>white</textcolor>
                <align>center</align>
                <font>font_tiny_bold</font>
                <visible>!String.IsEmpty(ListItem.Year) + !String.IsEqual(ListItem.DBType,episode)</visible>
              </control>
              <!-- MPAA -->
              <control type="group">
                <left>290</left>
                <width>100</width>
                <control type="image">
                  <top>270</top>
                  <height>30</height>
                  <height>100%</height>
                  <width>100%</width>
                  <texture colordiffuse="dimgrey">flags/flag_box_rating_classic.png</texture>
                </control>
                <control type="label">
                  <left>30</left>
                  <height>100%</height>
                  <width>90%</width>
                  <font>widget_trakt_title2</font>
                  <textcolor>grey</textcolor>
                  <scroll>false</scroll>
                  <label>$INFO[ListItem.MPAA]</label>
                <visible>!String.IsEmpty(ListItem.MPAA)</visible>
                </control>
              </control>
              <!-- Season Count -->
              <control type="label">
                <width>115</width>
                <left>400</left>
                <textcolor>white</textcolor>
                <align>center</align>
                <font>widget_trakt_title2</font>
                <textcolor>grey</textcolor>
                <label>$VAR[total_seasons]</label>
                <visible>String.IsEqual(ListItem.DBType,tvshow) + !String.IsEmpty(ListItem.Property(TotalSeasons))</visible>
              </control>
              <!-- Plot -->
              <control type="textbox">
                <left>30</left>
                <top>330</top>
                <height min="50" max="130">auto</height>
                <label fallback="19055">$VAR[Label_Plot]</label>
                <align>left</align>
                <width>650</width>
                <textcolor>dimgrey</textcolor>
                <shadowcolor>black</shadowcolor>
                <font>widget_live_title</font>
                <autoscroll>0</autoscroll>
              </control>
              <!--Info Spinner -->
              <control type="image">
                <top>520</top>
                <height>46</height>
                <width>46</width>
                <left>40</left>
                <animation effect="fade" time="150">Visible</animation>
                <animation effect="fade" time="0" end="60" condition="true">Conditional</animation>
                <align>left</align>
                <aligny>center</aligny>
                <texture>$VAR[DetailsSpinImage,netflix/spinner/,.png]</texture>
                <colordiffuse>red</colordiffuse>
              </control>
              <control type="textbox">
                <top>520</top>
                <left>100</left>
                <animation effect="fade" time="150">Visible</animation>
                <height>40</height>
                <width>600</width>
                <label>$VAR[NetflixDetailsSpin]</label>
                <textcolor>dimgrey</textcolor>
                <align>left</align>
                <aligny>center</aligny>
                <font>font_tiny</font>
                <autoscroll>false</autoscroll>
              </control>
            </control>
            <control type="image">
              <bordersize>1</bordersize>
              <texture colordiffuse="PixelLines" border="20">common/outline.png</texture>
            </control>
            <control type="group">
              <visible>Control.HasFocus(1505)</visible>
              <control type="image">
                <texture colordiffuse="dimgrey" border="20">common/selectbox.png</texture>
              </control>
            </control>
          </control>
        </control>
      </focusedlayout>
      <content target="videos" limit="5">$VAR[tvshowspotlightpath]</content>
    </control>
  </include>
  <include name="Spotlight_Movies_AuraWidget">
    <control type="group" id="21506">
      <visible>String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true) + String.IsEqual(Container(300).ListItem.Property(widgetSpotlighttype),Movies)</visible>
      <visible>Container(1506).IsUpdating + !Integer.IsGreater(Container(1506).NumItems,0)</visible>
      <control type="group">
        <top>40</top>
        <left>90</left>
        <control type="image">
          <width>1750</width>
          <height>570</height>
          <bordersize>1</bordersize>
          <texture colordiffuse="PixelLines" border="20">common/outline.png</texture>
        </control>
      </control>
      <control type="group">
        <height>40</height>
        <top>250</top>
        <left>-400</left>
        <include content="Defs_BusySpinner">
          <param name="label" value="$LOCALIZE[31138]..." />
        </include>
      </control>
    </control>
    <control type="list" id="1506">
      <animation effect="slide" end="-30,-20" time="0" condition="Skin.HasSetting(DisableMenuHor)">Conditional</animation>
      <scrolltime tween="sine" easing="out">500</scrolltime>
      <visible>String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true) + String.IsEqual(Container(300).ListItem.Property(widgetSpotlighttype),Movies)</visible>
      <visible>!String.IsEqual(Container(300).ListItem.Property(widget),Weather) + !String.IsEqual(Container(300).ListItem.Property(widget),Settings)</visible>
      <visible>Integer.IsGreater(Container(1506).NumItems,0) | Container(1506).IsUpdating</visible>
      <defaultcontrol>4000</defaultcontrol>
      <orientation>horizontal</orientation>
      <preloaditems>1</preloaditems>
      <ondown condition="!Skin.HasSetting(DisableNetflixCatWidget)">30222</ondown>
      <ondown condition="Skin.HasSetting(DisableNetflixCatWidget)">330</ondown>
      <ondown>30222</ondown>
      <onleft>300</onleft>
      <height>570</height>
      <top>40</top>
      <left>90</left>
      <onclick condition="!Skin.HasSetting(EnableShowInfo) + [String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,movie)]">Action(Info)</onclick>
      <itemlayout width="1750" height="570"></itemlayout>
      <focusedlayout width="1750" height="570">
        <control type="group">
          <control type="image">
            <right>0</right>
            <width>1013.33</width>
            <height>570</height>
            <texture background="true">$VAR[Spotlight_Fanart]</texture>
            <aspectratio>keep</aspectratio>
          </control>
          <control type="image">
            <width>100%</width>
            <height>100%</height>
            <texture background="true" colordiffuse="60000000">diffuse/landscape.png</texture>
          </control>
          <control type="group">
            <control type="image">
              <top>30</top>
              <left>40</left>
              <height min="60" max="218">auto</height>
              <width>510</width>
              <aligny>top</aligny>
              <align>left</align>
              <aspectratio align="left" aligny="center">keep</aspectratio>
              <texture background="true">$VAR[Widget_ClearLogo]</texture>
            </control>
            <control type="label">
              <top>60</top>
              <left>40</left>
              <visible>String.IsEmpty(Container(1506).ListItem.Art(clearlogo))</visible>
              <label>$VAR[video_heading]</label>
              <textcolor>grey</textcolor>
              <shadowcolor>black</shadowcolor>
              <font>spotlight_widget_heading</font>
              <width min="200" max="650">auto</width>
              <height>40</height>
              <align>center</align>
              <scroll>true</scroll>
            </control>
            <control type="group">
              <animation effect="slide" end="0,-120" time="0" condition="String.IsEmpty(Container(1506).ListItem.Art(clearlogo))">Conditional</animation>
	      <top>-10</top>
              <control type="group">
                <top>240</top>
                <width>200</width>
                <left>30</left>
                <include content="Object_StarRating" condition="![Skin.HasSetting(DisableInfoRatings)]">
                  <param name="height" value="50" />
                  <param name="width" value="50" />
                </include>
              </control>
              <!-- Year -->
              <control type="label">
                <left>220</left>
                <width>60</width>
                <label>$INFO[ListItem.Year]</label>
                <textcolor>white</textcolor>
                <align>center</align>
                <font>font_tiny_bold</font>
                <visible>!String.IsEmpty(ListItem.Year) + !String.IsEqual(ListItem.DBType,episode)</visible>
              </control>
              <!-- MPAA -->
              <control type="group">
                <left>290</left>
                <width>100</width>
                <visible>!String.IsEmpty(ListItem.MPAA)</visible>
                <control type="image">
                  <top>270</top>
                  <height>30</height>
                  <height>100%</height>
                  <width>100%</width>
                  <texture colordiffuse="dimgrey">flags/flag_box_rating_classic.png</texture>
                </control>
                <control type="label">
                  <left>30</left>
                  <height>100%</height>
                  <width>90%</width>
                  <font>widget_trakt_title2</font>
                  <textcolor>grey</textcolor>
                  <scroll>false</scroll>
                  <label>$INFO[ListItem.MPAA]</label>
                </control>
              </control>
              <!-- Season Count -->
              <control type="label">
                <width>115</width>
                <left>400</left>
                <textcolor>white</textcolor>
                <align>center</align>
                <font>widget_trakt_title2</font>
                <textcolor>grey</textcolor>
                <label>$VAR[total_seasons]</label>
                <visible>String.IsEqual(ListItem.DBType,tvshow) + !String.IsEmpty(ListItem.Property(TotalSeasons))</visible>
              </control>
              <!-- Plot -->
              <control type="textbox">
                <left>30</left>
                <top>330</top>
                <height min="50" max="130">auto</height>
                <label fallback="19055">$VAR[Label_Plot]</label>
                <align>left</align>
                <width>650</width>
                <textcolor>dimgrey</textcolor>
                <shadowcolor>black</shadowcolor>
                <font>widget_live_title</font>
                <autoscroll>0</autoscroll>
              </control>
              <!--Info Spinner -->
              <control type="image">
                <top>500</top>
                <height>46</height>
                <width>46</width>
                <left>40</left>
                <animation effect="fade" time="150">Visible</animation>
                <animation effect="fade" time="0" end="60" condition="true">Conditional</animation>
                <align>left</align>
                <aligny>center</aligny>
                <texture>$VAR[DetailsSpinImage,netflix/spinner/,.png]</texture>
                <colordiffuse>red</colordiffuse>
              </control>
              <control type="textbox">
                <top>500</top>
                <left>100</left>
                <animation effect="fade" time="150">Visible</animation>
                <height>40</height>
                <width>600</width>
                <label>$VAR[NetflixDetailsSpin]</label>
                <textcolor>dimgrey</textcolor>
                <align>left</align>
                <aligny>center</aligny>
                <font>font_tiny</font>
                <autoscroll>false</autoscroll>
              </control>
            </control>
            <control type="image">
              <bordersize>1</bordersize>
              <texture colordiffuse="PixelLines" border="20">common/outline.png</texture>
            </control>
            <control type="group">
              <visible>Control.HasFocus(1506)</visible>
              <control type="image">
                <texture colordiffuse="dimgrey" border="20">common/selectbox.png</texture>
              </control>
            </control>
          </control>
        </control>
      </focusedlayout>
      <content target="videos" limit="5">$VAR[moviespotlightpath]</content>
    </control>
  </include>
  <!-- Spotlight buttons @cartmandos -->
  <include name="Spotlight_Movies_buttons">
    <control type="grouplist" id="506">
      <defaultcontrol>4000</defaultcontrol>
      <orientation>horizontal</orientation>
      <ondown condition="Player.HasVideo">PlayerControl(Stop)</ondown>
      <ondown condition="Player.HasVideo">ClearProperty(TrailerPlaying)</ondown>
      <ondown condition="Player.HasVideo + !String.IsEmpty(Window(home).Property(trailer_trailerwillplaying))">ClearProperty(trailer_trailerwillplaying)</ondown>
      <ondown condition="System.HasAlarm(trailer_delay)">CancelAlarm(trailer_delay,true)</ondown>
      <onright condition="Player.HasVideo">PlayerControl(Stop)</onright>
      <onright condition="Player.HasVideo">ClearProperty(TrailerPlaying)</onright>
      <onright condition="Player.HasVideo + !String.IsEmpty(Window(home).Property(trailer_trailerwillplaying))">ClearProperty(trailer_trailerwillplaying)</onright>
      <onright condition="System.HasAlarm(trailer_delay)">CancelAlarm(trailer_delay,true)</onright>
      <onleft condition="Player.HasVideo">PlayerControl(Stop)</onleft>
      <onleft condition="Player.HasVideo">ClearProperty(TrailerPlaying)</onleft>
      <onleft condition="Player.HasVideo + !String.IsEmpty(Window(home).Property(trailer_trailerwillplaying))">ClearProperty(trailer_trailerwillplaying)</onleft>
      <onleft condition="System.HasAlarm(trailer_delay)">CancelAlarm(trailer_delay,true)</onleft>
      <onback>300</onback>
      <onback condition="Player.HasVideo">PlayerControl(Stop)</onback>
      <onback condition="Player.HasVideo">ClearProperty(TrailerPlaying)</onback>
      <onback condition="Player.HasVideo + !String.IsEmpty(Window(home).Property(trailer_trailerwillplaying))">ClearProperty(trailer_trailerwillplaying)</onback>
      <onback condition="System.HasAlarm(trailer_delay)">CancelAlarm(trailer_delay,true)</onback>
      <onup condition="Player.HasVideo">PlayerControl(Stop)</onup>
      <onup condition="Player.HasVideo">ClearProperty(TrailerPlaying)</onup>
      <onup condition="Player.HasVideo + !String.IsEmpty(Window(home).Property(trailer_trailerwillplaying))">ClearProperty(trailer_trailerwillplaying)</onup>
      <onup condition="System.HasAlarm(trailer_delay)">CancelAlarm(trailer_delay,true)</onup>
      <onup condition="Skin.HasSetting(DisableMenuHor)">300</onup>
      <ondown condition="!Skin.HasSetting(DisableNetflixCatWidget)">30222</ondown>
      <ondown condition="Skin.HasSetting(DisableNetflixCatWidget)">330</ondown>
      <onright>Control.Move(1506,1)</onright>
      <onleft>300</onleft>
      <width>600</width>
      <height>80</height>
      <itemgap>0</itemgap>
      <visible>[Control.HasFocus(3022) | Control.HasFocus(30221) | Control.HasFocus(300) | Control.HasFocus(30222) | Control.HasFocus(1506) | ControlGroup(506).HasFocus] + String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true) + String.IsEqual(Container(300).ListItem.Property(widgetSpotlighttype),Movies) + Integer.IsGreater(Container(1506).NumItems,0)</visible>
      <visible>!String.IsEqual(Container(300).ListItem.Property(widget),Weather) + !String.IsEqual(Container(300).ListItem.Property(widget),Settings)</visible>
      <animation effect="slide" end="-40,50" time="10" condition="Skin.HasSetting(DisableMenuHor)">Conditional</animation>
      <control type="radiobutton" id="5061">
        <!-- play -->
        <visible>Integer.IsGreater(Container(1506).NumItems,0)</visible>
        <description>Play</description>
        <width>240</width>
        <height>80</height>
        <label>[CAPITALIZE][B]Play[/B][/CAPITALIZE]</label>
        <align>center</align>
        <textcolor>grey</textcolor>
        <focusedcolor>black</focusedcolor>
        <texturefocus colordiffuse="d9ffffff" border="5">common/rounded-shadow8.png</texturefocus>
        <texturenofocus colordiffuse="darkgrey" border="5">common/rounded-shadow8.png</texturenofocus>
        <textureradioonfocus colordiffuse="black">netflix/play.png</textureradioonfocus>
        <textureradioofffocus colordiffuse="black">netflix/play.png</textureradioofffocus>
        <textureradioonnofocus colordiffuse="white">netflix/play.png</textureradioonnofocus>
        <textureradiooffnofocus colordiffuse="white">netflix/play.png</textureradiooffnofocus>
        <radioposx>45</radioposx>
        <radiowidth>25</radiowidth>
        <radioheight>35</radioheight>
        <font>Reg28</font>
        <!--                    <onclick condition="!String.IsEmpty(ListItem.DBID)">PlayMedia($ESCINFO[Container(1506).ListItem.FileNameAndPath])</onclick> -->
        <onclick>SetProperty(SpotlightPlay,1,Home)</onclick>
        <onclick>SetFocus(1506)</onclick>
      </control>
      <control type="button" id="5062">
        <!-- more info -->
        <visible>Integer.IsGreater(Container(1506).NumItems,0)</visible>
        <description>Info</description>
        <width>280</width>
        <height>80</height>
        <align>center</align>
        <label>[B]More Info[/B]</label>
        <textcolor>white</textcolor>
        <focusedcolor>black</focusedcolor>
        <texturefocus colordiffuse="d9ffffff" border="5">common/rounded-shadow8.png</texturefocus>
        <texturenofocus colordiffuse="darkgrey" border="5">common/rounded-shadow8.png</texturenofocus>
        <font>Reg28</font>
	<onclick condition="System.HasAlarm(trailer_delay)">CancelAlarm(trailer_delay,true)</onclick>
        <onclick>SetProperty(ShowSpotlightInfo,1,Home)</onclick>
        <onclick>SetFocus(1506)</onclick>
      </control>
    </control>
  </include>
  <include name="Object_Home_Netflix_Alt">
    <visible>Control.HasFocus(300) | Control.HasFocus(302) | Control.HasFocus(30222) | ControlGroup(330).HasFocus</visible>
    <visible>!String.IsEqual(Container(300).ListItem.Property(widget),Weather) + !String.IsEqual(Container(300).ListItem.Property(widget),Settings)</visible>
    <control type="group">
      <control type="group">
        <visible>Skin.HasSetting(DisableNetflixHomeAlt) | Skin.HasSetting(DisableNetflixHomeMixed)</visible>
        <visible>!Window.IsVisible(DialogVideoInfo.xml)</visible>
        <control type="group">
          <left>10</left>
          <right>0</right>
          <fadetime>2000</fadetime>
          <include>Global_Background</include>
        </control>
        <control type="group">
          <top>-30</top>
          <visible>Player.HasVideo</visible>
          <include>Global_Background</include>
        </control>
      </control>
      <control type="group">
        <left>10</left>
        <visible>Skin.HasSetting(DisableNetflixSubmenuBG) + Control.HasFocus(300)</visible>
        <include>Global_Background</include>
      </control>
      <control type="group">
        <left>10</left>
        <right>0</right>
        <visible>Skin.HasSetting(DisableNetflixSubmenuBG) + Control.HasFocus(302)</visible>
        <include>Global_Background</include>
      </control>
      <control type="group">
        <left>10</left>
        <right>0</right>
        <visible>Skin.HasSetting(DisableNetflixSubmenuBG) + Control.HasFocus(3001)</visible>
        <include>Global_Background</include>
      </control>
    </control>
    <control type="group">
      <animation effect="slide" end="-90,0" condition="!Skin.HasSetting(DisableNetflixLargeWidget) + !Skin.HasSetting(DisableNetflixLowSpotlight) + !Control.HasFocus(300) + Skin.HasSetting(DisableNetflixHomeSidemenuHide)">Conditional</animation>
      <animation effect="slide" end="-90,0" condition="Skin.HasSetting(DisableNetflixSmallWidget) + !Skin.HasSetting(DisableNetflixLowSpotlight) + !Control.HasFocus(300) + Skin.HasSetting(DisableNetflixHomeSidemenuHide)">Conditional</animation>
      <animation effect="slide" end="-90,100" condition="!Skin.HasSetting(DisableNetflixLargeWidget) + Skin.HasSetting(DisableNetflixLowSpotlight) + !Control.HasFocus(300) + Skin.HasSetting(DisableNetflixHomeSidemenuHide)">Conditional</animation>
      <animation effect="slide" end="-90,50" condition="Skin.HasSetting(DisableNetflixSmallWidget) + Skin.HasSetting(DisableNetflixLowSpotlight) + !Control.HasFocus(300) + Skin.HasSetting(DisableNetflixHomeSidemenuHide)">Conditional</animation>
      <animation effect="slide" end="0,100" condition="!Skin.HasSetting(DisableNetflixLargeWidget) + Skin.HasSetting(DisableNetflixLowSpotlight) + !Control.HasFocus(300) + !Skin.HasSetting(DisableNetflixHomeSidemenuHide)">Conditional</animation>
      <animation effect="slide" end="0,50" condition="Skin.HasSetting(DisableNetflixSmallWidget) + Skin.HasSetting(DisableNetflixLowSpotlight) + !Control.HasFocus(300) + !Skin.HasSetting(DisableNetflixHomeSidemenuHide)">Conditional</animation>
      <top>30</top>
      <left>160</left>
      <!-- Clearlogo -->
      <control type="group">
        <control type="image" id="55445">
          <height min="60" max="251">auto</height>
          <width>520</width>
          <aligny>top</aligny>
          <texture background="true">$VAR[NetflixHome_ClearLogo]</texture>
          <visible>!Control.HasFocus(300) + !Control.HasFocus(30222)</visible>
        </control>
        <!-- Fall back Title -->
        <control type="label">
          <top>220</top>
          <visible>[String.IsEqual(ListItem.DBType,episode) | String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,tvshow) | !String.IsEmpty(ListItem.ChannelName)]</visible>
          <visible>!Control.HasFocus(300) + !Control.HasFocus(302) + !Control.HasFocus(30222) + Skin.HasSetting(DisableNetflixLowSpotlight) + String.IsEmpty(Control.GetLabel(55445))</visible>
          <label>$VAR[video_heading]</label>
          <textcolor>grey</textcolor>
          <shadowcolor>black</shadowcolor>
          <font>netflix_heading</font>
          <width min="200" max="1200">auto</width>
	  <height>30</height>
          <align>left</align>
          <align>center</align>
          <scroll>true</scroll>
        </control>
        <control type="label">
          <top>220</top>
	  <visible>[String.IsEqual(ListItem.DBType,episode) | String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,tvshow) | !String.IsEmpty(ListItem.ChannelName)]</visible>
          <visible>!Control.HasFocus(300) + !Control.HasFocus(302) + !Control.HasFocus(30222) + !Skin.HasSetting(DisableNetflixLowSpotlight) + String.IsEmpty(Control.GetLabel(55445))</visible>
          <label>$VAR[video_heading]</label>
          <textcolor>grey</textcolor>
          <shadowcolor>black</shadowcolor>
          <font>netflix_heading</font>
          <width>500</width>
	  <height>30</height>
          <align>left</align>
          <autoscroll>true</autoscroll>
          <scroll>true</scroll>
        </control>
        <control type="textbox">
          <top>234</top>
	  <visible>![String.IsEqual(ListItem.DBType,episode) | String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,tvshow) | !String.IsEmpty(ListItem.ChannelName)]</visible>
          <visible>!Control.HasFocus(300) + !Control.HasFocus(302) + !Control.HasFocus(30222) + String.IsEmpty(Control.GetLabel(55445))</visible>
          <label>$VAR[video_heading]</label>
          <textcolor>grey</textcolor>
          <shadowcolor>black</shadowcolor>
          <font>spotlight_heading_small</font>
          <width min="200" max="1200">auto</width>
          <height min="30" max="90">auto</height>
          <align>left</align>
          <wrapmultiline>true</wrapmultiline>
          <autoscroll>true</autoscroll>
          <scroll>true</scroll>
        </control>
      <!-- Addon Infoline -->
      </control>
      <control type="label">
         <top>350</top>
         <height>30</height>
         <font>font_medium</font>
         <textcolor>red</textcolor>
         <label>$INFO[ListItem.Artist]</label>
         <visible>String.Contains(ListItem.FileNameAndPath,plugin.video.youtube)</visible>
      </control>
      <!-- Tagline, Plot, Infoline -->
      <control type="grouplist">
        <top>271</top>
        <height>550</height>
        <orientation>vertical</orientation>
        <!-- Episode Label  -->
        <control type="label">
          <left>60</left>
          <height min="55" max="90">auto</height>
          <visible>String.IsEqual(ListItem.DBType,episode) + !Skin.HasSetting(EnableFullEpInfo)</visible>
          <label fallback="19055">$VAR[home_simple_episode]</label>
          <width>750</width>
          <textcolor>white</textcolor>
          <shadowcolor>black</shadowcolor>
          <wrapmultiline>true</wrapmultiline>
          <font>font_medium_bold</font>
        </control>
        <!-- Aired -->
        <control type="label">
          <left>60</left>
          <height>45</height>
          <visible>String.IsEqual(ListItem.DBType,episode) + !Skin.HasSetting(EnableFullEpInfo)</visible>
          <label fallback="19055">[I]Aired $INFO[ListItem.Premiered(DDD MMM yyyy)] on $INFO[ListItem.Studio][/I]</label>
          <width>750</width>
          <textcolor>main_fg_100</textcolor>
          <shadowcolor>black</shadowcolor>
          <font>font_small</font>
        </control>
        <control type="label">
          <height>20</height>
          <visible>String.IsEqual(ListItem.DBType,episode) + !Skin.HasSetting(EnableFullEpInfo) + !Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
        </control>
        <control type="progress">
          <visible>String.IsEqual(ListItem.DBType,episode) + !Skin.HasSetting(EnableFullEpInfo) + !Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
          <top>40</top>
          <left>60</left>
          <left>260</left>
          <description>progress bar</description>
          <width>290</width>
          <height>9</height>
          <align>center</align>
          <aligny>top</aligny>
          <texturebg colordiffuse="grey" border="2">colors/color_white.png</texturebg>
          <lefttexture></lefttexture>
          <midtexture colordiffuse="red" border="2">colors/color_white.png</midtexture>
          <righttexture></righttexture>
          <info>ListItem.PercentPlayed</info>
        </control>
        <!-- Plot Low spotlight -->
        <control type="textbox">
          <height min="50" max="122">auto</height>
          <visible>!Control.HasFocus(300) + !Control.HasFocus(302) + !Control.HasFocus(30222) + !Control.HasFocus(3001) + [String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,tvshow) | [String.IsEqual(ListItem.DBType,episode) + Skin.HasSetting(EnableFullEpInfo)]]</visible>
          <visible>Skin.HasSetting(DisableNetflixLowSpotlight)</visible>
          <label fallback="19055">$VAR[Label_OverlayPlot]</label>
          <width>1000</width>
          <textcolor>dimgrey</textcolor>
          <shadowcolor>black</shadowcolor>
          <font>widget_trakt_title</font>
          <autoscroll>0</autoscroll>
        </control>
        <!-- Plot  -->
        <control type="textbox">
          <height min="50" max="122">auto</height>
          <visible>!Control.HasFocus(300) + !Control.HasFocus(302) + !Control.HasFocus(30222) + !Control.HasFocus(3001) + [String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,tvshow) | [String.IsEqual(ListItem.DBType,episode) + Skin.HasSetting(EnableFullEpInfo)]]</visible>
          <visible>!Skin.HasSetting(DisableNetflixLowSpotlight)</visible>
          <label fallback="19055">$VAR[Label_OverlayPlot]</label>
          <align>left</align>
          <width>500</width>
          <textcolor>dimgrey</textcolor>
          <shadowcolor>black</shadowcolor>
          <font>widget_trakt_title</font>
          <autoscroll>0</autoscroll>
        </control>
        <control type="label">
          <height>5</height>
        </control>
        <!-- Info Spinner  -->
        <control type="group">
          <visible>!Skin.HasSetting(DisableNetflixLowSpotlight) + [[String.IsEqual(ListItem.DBType,episode) + Skin.HasSetting(EnableFullEpInfo)] | String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,tvshow) | !String.IsEmpty(ListItem.ChannelName)] + [!Control.HasFocus(300) + !Control.HasFocus(302) + !Control.HasFocus(30222) + !Control.HasFocus(3001)]</visible>
          <height>30</height>
          <control type="image">
            <width>70</width>
            <left>-10</left>
            <aspectratio>keep</aspectratio>
            <texture colordiffuse="FFFF0000">netflix/fact.png</texture>
          </control>
          <control type="label">
            <width>400</width>
            <left>70</left>
            <right>0</right>
            <label>$VAR[NetflixDetailsSpin]</label>
            <textcolor>dimgrey</textcolor>
            <font>font_tiny</font>
            <scroll>true</scroll>
          </control>
        </control>
        <!-- Info Spinner  Low Spotlight -->
        <control type="group">
          <visible>Skin.HasSetting(DisableNetflixLowSpotlight) + [[String.IsEqual(ListItem.DBType,episode) + Skin.HasSetting(EnableFullEpInfo)] | String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,season) | String.IsEqual(ListItem.DBType,tvshow) | !String.IsEmpty(ListItem.ChannelName)] + [!Control.HasFocus(300) + !Control.HasFocus(302) + !Control.HasFocus(30222) + !Control.HasFocus(3001)]</visible>
          <height>30</height>
          <control type="image">
            <width>70</width>
            <left>-10</left>
            <aspectratio>keep</aspectratio>
            <texture colordiffuse="FFFF0000">netflix/fact.png</texture>
          </control>
          <control type="label">
            <width>700</width>
            <left>70</left>
            <right>0</right>
            <label>$VAR[NetflixDetailsSpin]</label>
            <textcolor>dimgrey</textcolor>
            <font>font_tiny</font>
            <scroll>true</scroll>
          </control>
        </control>
      </control>
    </control>
  </include>

  <include name="Object_Home_Netflix">
    <visible>Control.HasFocus(300) | Control.HasFocus(302) | Control.HasFocus(30222) | ControlGroup(330).HasFocus | Window.IsActive(4010) | Window.IsActive(4020) | Window.IsActive(2111) | Window.IsActive(2112) | Window.IsActive(2113)| Window.IsActive(2114) | Window.IsActive(2115)| Window.IsActive(2116) | Window.IsActive(2117)</visible>
    <control type="group">
      <animation effect="slide" end="60,0" condition="!Skin.HasSetting(DisableNetflixHomeSidemenu)">Conditional</animation>
      <animation effect="slide" end="60,0" condition="Skin.HasSetting(DisableNetflixHomeSidemenu)">Conditional</animation>
      <animation effect="slide" end="-40,0" condition="Window.IsVisible(3810) | Window.IsVisible(3820)">Conditional</animation>
      <visible>!String.IsEqual(Container(300).ListItem.Property(widget),Weather) + !String.IsEqual(Container(300).ListItem.Property(widget),Settings)</visible>
      <control type="group">
        <left>-60</left>
        <visible>Skin.HasSetting(DisableNetflixSubmenuBG) + [Control.HasFocus(300) | Control.HasFocus(302) | Control.HasFocus(30222)]</visible>
        <include>Global_Background</include>
      </control>
      <control type="group">
        <control type="image">
          <animation effect="slide" end="50,-10" condition="Skin.HasSetting(DisableNetflixHomeSidemenu)">Conditional</animation>
          <animation effect="slide" end="20,0" condition="Skin.HasSetting(DisableNetflixHomeSidemenuHide)">Conditional</animation>
          <visible>!Player.HasVideo + [String.IsEqual(ListItem.DBType,episode) | String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,season) | !String.IsEmpty(ListItem.ChannelName)]</visible>
          <fadetime>2500</fadetime>
          <width>1400</width>
          <height>800</height>
          <left>500</left>
          <top>0</top>
          <texture background="true" diffuse="Right Corner.png">$VAR[Spotlight_Fanart]</texture>
          <aspectratio scalediffuse="true" aligny="top">scale</aspectratio>
        </control>
        <control type="image">
          <animation effect="slide" end="50,-10" condition="Skin.HasSetting(DisableNetflixHomeSidemenu)">Conditional</animation>
          <animation effect="slide" end="20,0" condition="Skin.HasSetting(DisableNetflixHomeSidemenuHide)">Conditional</animation>
	  <visible>[Window.IsVisible(Custom_Hub_TVNetflix.xml) | Window.IsVisible(Custom_Hub_MovieNetflix.xml)] + [Container($PARAM[id]).IsUpdating + !Integer.IsGreater(Container($PARAM[id]).NumItems,0)]</visible>
          <fadetime>500</fadetime>
          <width>1400</width>
          <height>600</height>
          <left>500</left>
          <top>0</top>
          <texture background="true" diffuse="Right Corner.png">$VAR[Image_MainMenu_fanart]</texture>
          <aspectratio scalediffuse="true" aligny="top">scale</aspectratio>
        </control>
        <control type="image">
          <animation effect="slide" end="50,-10" condition="Skin.HasSetting(DisableNetflixHomeSidemenu)">Conditional</animation>
          <visible>!Player.HasVideo + !Control.HasFocus(302) + !Control.HasFocus(30222) + !Control.HasFocus(300) + !Control.HasFocus(3001) + ![String.IsEqual(ListItem.DBType,episode) | String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,season) | !String.IsEmpty(ListItem.ChannelName)]</visible>
          <fadetime>100</fadetime>
          <width>1400</width>
          <height>800</height>
          <left>500</left>
          <top>0</top>
          <bottom>5</bottom>
          <texture background="true" diffuse="Right Corner.png">$VAR[Spotlight_Fanart]</texture>
          <aspectratio scalediffuse="false" aligny="top">keep</aspectratio>
        </control>
        <control type="image">
          <animation effect="slide" end="50,-10" condition="Skin.HasSetting(DisableNetflixHomeSidemenu)">Conditional</animation>
          <visible>!Player.HasVideo + !Window.IsActive(4010) + !Window.IsActive(4020) + !Skin.HasSetting(DisableNetflixSubmenuBG) + [Control.HasFocus(300) | Control.HasFocus(3001) | Control.HasFocus(302) | Control.HasFocus(30222)]</visible>
          <fadetime>100</fadetime>
          <width>1400</width>
          <height>787</height>
          <left>500</left>
          <top>0</top>
          <bottom>5</bottom>
          <texture background="true" diffuse="Right Corner.png">$VAR[Image_MainMenu_fanart]</texture>
          <aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
        </control>
      </control>
      <control type="group">
        <visible>!Control.HasFocus(660) + !Control.HasFocus(300) + !Control.HasFocus(302) + !Control.HasFocus(30222) + !Control.HasFocus(3001)</visible>
        <animation effect="slide" end="20,0" time="0" condition="String.IsEmpty(ListItem.Studio)">Conditional</animation>
        <animation effect="slide" end="0,-30" condition="Skin.HasSetting(DisableNetflixSmallWidget)">Conditional</animation>
        <animation effect="slide" end="400,-10" time="500" condition="Window.IsActive(4010)">Conditional</animation>
        <animation effect="slide" end="400,-10" time="500" condition="Window.IsActive(4020)">Conditional</animation>
        <animation effect="slide" end="440,0" time="500" condition="Window.IsActive(3810) | Window.IsActive(3820)">Conditional</animation>
        <animation effect="slide" end="400,0" time="500" condition="Window.IsActive(2111) | Window.IsActive(2112) | Window.IsActive(2113)| Window.IsActive(2114) | Window.IsActive(2115)| Window.IsActive(2116) | Window.IsActive(2117)">Conditional</animation>
        <top>590</top>
        <height>184</height>
        <right>480</right>
        <include content="Object_Ratings">
          <param name="directory" value="monochrome" />
          <param name="align" value="right" />
          <param name="width" value="700" />
          <param name="rottentomatoes" value="true" />
          <param name="imdbvotes" value="false" />
          <param name="usermeter" value="false" />
          <param name="imdb" value="true" />
          <param name="tmdb" value="true" />
          <param name="metacritic" value="true" />
          <param name="oscars" value="true" />
          <param name="top250" value="false" />
          <param name="plot" value="false" />
          <param name="studio" value="true" />
        </include>
      </control>
      <control type="group">
        <visible>!Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) + !Window.IsVisible(script-script.extendedinfo-DialogInfo.xml)</visible>
        <!-- Start Video Window -->
        <control type="group">
          <animation effect="slide" start="0" end="100,0" time="0" condition="Integer.IsEqual(VideoPlayer.VideoAspect,2.4) | Integer.IsEqual(VideoPlayer.VideoAspect,2.35) | Integer.IsEqual(VideoPlayer.VideoAspect,2.55) | Integer.IsEqual(VideoPlayer.VideoAspect,2.76)" reversible="true">Conditional</animation>
          <animation effect="slide" start="0" end="200,0" time="0" condition="Integer.IsEqual(VideoPlayer.VideoAspect,1.33)">Conditional</animation>
          <animation effect="slide" start="0" end="95,0" time="0" condition="Integer.IsEqual(VideoPlayer.VideoAspect,1.78)">Conditional</animation>
          <animation effect="slide" start="0" end="285,0" time="0" condition="Integer.IsEqual(VideoPlayer.VideoAspect,0.00)">Conditional</animation>
          <visible>Player.HasVideo</visible>
          <left>250</left>
          <width>1600</width>
          <height>640</height>
          <top>10</top>
          <bottom>5</bottom>
          <control type="videowindow">
            <width>100%</width>
            <height>100%</height>
          </control>
          <control type="image">
            <animation effect="slide" start="0" end="100,0" time="0" condition="Player.HasVideo + Integer.IsEqual(VideoPlayer.VideoAspect,1.78)">Conditional</animation>
            <animation effect="slide" start="0" end="225,0" time="0" condition="Player.HasVideo + Integer.IsEqual(VideoPlayer.VideoAspect,0.00)">Conditional</animation>
            <animation effect="slide" start="0" end="30,0" time="0" condition="Player.HasVideo + Integer.IsEqual(VideoPlayer.VideoAspect,2.4) | Integer.IsEqual(VideoPlayer.VideoAspect,2.35) | Integer.IsEqual(VideoPlayer.VideoAspect,2.55) | Integer.IsEqual(VideoPlayer.VideoAspect,2.76)">Conditional</animation>
            <texture colordiffuse="ff000000" border="40">netflix/netflix_corner.png</texture>
          </control>
        </control>
        <!-- End  Video Window -->
        <control type="grouplist" id="9000">
          <animation effect="slide" end="-50,0" condition="!Control.HasFocus(300) + Skin.HasSetting(DisableNetflixHomeSidemenuHide)">Conditional</animation>
          <pagecontrol>9560</pagecontrol>
          <itemgap>0</itemgap>
          <usecontrolcoords>true</usecontrolcoords>
          <orientation>vertical</orientation>
          <control type="group">
            <height min="100" max="600">auto</height>
            <left>view_pad</left>
            <right>view_pad</right>
            <control type="grouplist">
              <itemgap>0</itemgap>
              <usecontrolcoords>true</usecontrolcoords>
              <orientation>vertical</orientation>
              <!-- Add Clearlogo / Label -->
              <control type="group">
                <height min="60" max="218">auto</height>
                <control type="image" id="55446">
                  <left>0</left>
                  <right>$PARAM[titleright]</right>
                  <height>218</height>
                  <width>563</width>
                  <aligny>top</aligny>
                  <texture background="true">$VAR[NetflixHome_ClearLogo]</texture>
	          <animation effect="fade" start="0" end="100" time="500">Visible</animation>
                  <visible>!Control.HasFocus(300) + !Control.HasFocus(302) + !Control.HasFocus(30222) + !Control.HasFocus(660)</visible>
                </control>
                <control type="label">
                  <visible>String.IsEmpty(Control.GetLabel(55446)) + !Control.HasFocus(300) + !Control.HasFocus(302) + !Control.HasFocus(30222) + !Control.HasFocus(660)</visible>
		  <visible>[String.IsEqual(ListItem.DBType,episode) | String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,season) | !String.IsEmpty(ListItem.ChannelName)]</visible>
                  <top>25</top>
                  <label>$VAR[video_heading]</label>
                  <textcolor>grey</textcolor>
                  <shadowcolor>black</shadowcolor>
                  <font>netflix_heading</font>
                  <width min="200" max="600">auto</width>
                  <height min="50" max="200">auto</height>
                  <align>left</align>
                  <wrapmultiline>true</wrapmultiline>
                </control>
                <control type="label">
                  <visible>String.IsEmpty(Control.GetLabel(55446)) + !Control.HasFocus(300) + !Control.HasFocus(302) + !Control.HasFocus(30222) + !Control.HasFocus(660)</visible>
                  <visible>![String.IsEqual(ListItem.DBType,episode) | String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,season) | !String.IsEmpty(ListItem.ChannelName)]</visible>
                  <top>25</top>
                  <label>$VAR[video_heading]</label>
                  <textcolor>grey</textcolor>
                  <shadowcolor>black</shadowcolor>
                  <font>spotlight_heading_small</font>
                  <width min="200" max="600">auto</width>
                  <height min="50" max="200">auto</height>
                  <align>left</align>
                  <wrapmultiline>true</wrapmultiline>
                </control>
              </control>
              <!-- Add Star Rating + Video info to spotlight -->
              <include>netflix_infoline</include>
              <!-- Episode Label  -->
              <control type="label">
                <top>30</top>
                <left>0</left>
                <height min="55" max="90">auto</height>
                <visible>String.IsEqual(ListItem.DBType,episode) + !Skin.HasSetting(EnableFullEpInfo)</visible>
                <label fallback="19055">$VAR[home_simple_episode]</label>
                <width>750</width>
                <textcolor>white</textcolor>
                <shadowcolor>black</shadowcolor>
                <wrapmultiline>true</wrapmultiline>
                <font>font_medium_bold</font>
              </control>
              <!-- Aired -->
              <control type="label">
                <left>0</left>
                <height>60</height>
                <visible>String.IsEqual(ListItem.DBType,episode) + !Skin.HasSetting(EnableFullEpInfo)</visible>
                <label fallback="19055">[I]Aired $INFO[ListItem.Premiered(DDD MMM yyyy)] on $INFO[ListItem.Studio][/I]</label>
                <width>750</width>
                <textcolor>main_fg_100</textcolor>
                <shadowcolor>black</shadowcolor>
                <font>font_small</font>
              </control>
              <control type="label">
                <height>20</height>
                <visible>String.IsEqual(ListItem.DBType,episode) + !Skin.HasSetting(EnableFullEpInfo) + !Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
              </control>
              <control type="progress">
                <visible>String.IsEqual(ListItem.DBType,episode) + !Skin.HasSetting(EnableFullEpInfo) + !Integer.IsEqual(ListItem.PercentPlayed,0)</visible>
                <top>30</top>
                <left>0</left>
                <left>260</left>
                <description>progress bar</description>
                <width>290</width>
                <height>9</height>
                <align>center</align>
                <aligny>top</aligny>
                <texturebg colordiffuse="grey" border="2">colors/color_white.png</texturebg>
                <lefttexture></lefttexture>
                <midtexture colordiffuse="red" border="2">colors/color_white.png</midtexture>
                <righttexture></righttexture>
                <info>ListItem.PercentPlayed</info>
              </control>
              <control type="group">
                <height min="20" max="185">auto</height>
                <control type="textbox">
                  <visible>!Control.HasFocus(300) + !Control.HasFocus(302) + !Control.HasFocus(30222) + !Control.HasFocus(3001) + !Control.HasFocus(660)</visible>
                  <visible>!Skin.HasSetting(DisableNetflixView) + ![String.IsEqual(ListItem.DBType,episode) + !Skin.HasSetting(EnableFullEpInfo)]</visible>
                  <label fallback="19055">$VAR[Label_OverlayPlot]</label>
                  <width>640</width>
                  <aligny>top</aligny>
                  <textcolor>dimgrey</textcolor>
                  <font>widget_trakt_title</font>
                  <autoscroll>0</autoscroll>
                </control>
              </control>
              <control type="group">
                <top>30</top>
                <height>62</height>
                <control type="group">
                  <visible>[String.IsEqual(ListItem.DBType,episode) | Container.Content(livetv) | String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,season) | !String.IsEmpty(ListItem.ChannelName)]</visible>
                  <visible>!Skin.HasSetting(DisableNetflixView) + ![String.IsEqual(ListItem.DBType,episode) + !Skin.HasSetting(EnableFullEpInfo)]</visible>
                  <width>600</width>
                  <left>10</left>
                  <right>0</right>
                  <include>Details_Spinner</include>
                  <textcolor>dimgrey</textcolor>
                  <font>font_tiny</font>
                </control>
              </control>
            </control>
          </control>
        </control>
      </control>
    </control>
  </include>
  <include name="addon_view_infospotlight">
    <param name="id" default="" />
    <definition>
      <control type="group">
        <control type="group">
          <top>500</top>
          <right>-180</right>
          <width>$PARAM[width]</width>
          <height>184</height>
          <animation effect="slide" end="80,0" time="0" condition="String.IsEmpty(ListItem.Studio)">Conditional</animation>
          <include content="Object_Ratings" condition="Window.IsVisible(MyVideoNav.xml) | Window.IsVisible(Home.xml) | Window.IsVisible(script-globalsearch.xml)">
            <param name="directory" value="monochrome" />
            <param name="align" value="right" />
            <param name="width" value="700" />
            <param name="rottentomatoes" value="$PARAM[rottentomatoes]" />
            <param name="imdbvotes" value="false" />
            <param name="usermeter" value="$PARAM[usermeter]" />
            <param name="imdb" value="$PARAM[imdb]" />
            <param name="tmdb" value="$PARAM[tmdb]" />
            <param name="metacritic" value="$PARAM[metacritic]" />
            <param name="oscars" value="$PARAM[oscars]" />
            <param name="top250" value="$PARAM[top250]" />
            <param name="plot" value="false" />
            <param name="studio" value="true" />
          </include>
        </control>
        <control type="grouplist">
          <left>10</left>
          <top>-40</top>
          <orientation>vertical</orientation>
          <usecontrolcoords>true</usecontrolcoords>
          <itemgap>0</itemgap>
          <control type="image">
            <height>218</height>
            <width>563</width>
            <texture background="true">$INFO[Container(5055).ListItem.Art(clearlogo)]</texture>
          </control>
          <control type="label">
            <visible>[String.IsEqual(Container(5055).ListItem.DBType,episode) | String.IsEqual(Container(5055).ListItem.DBType,movie) | String.IsEqual(Container(5055).ListItem.DBType,tvshow) | String.IsEqual(Container(5055).ListItem.DBType,season) | !String.IsEmpty(Container(5055).ListItem.ChannelName)] + String.IsEmpty(Container(5055).ListItem.Art(clearlogo))</visible>
            <top>-210</top>
            <label>$VAR[video_heading5055]</label>
            <textcolor>grey</textcolor>
            <shadowcolor>black</shadowcolor>
            <font>netflix_heading</font>
            <width min="200" max="600">auto</width>
            <height min="50" max="150">auto</height>
            <align>left</align>
            <wrapmultiline>true</wrapmultiline>
            <autoscroll>true</autoscroll>
            <scroll>true</scroll>
          </control>
          <control type="label">
            <visible>![String.IsEqual(Container(5055).ListItem.DBType,movie) | String.IsEqual(Container(5055).ListItem.DBType,episode) |  String.IsEqual(Container(5055).ListItem.DBType,tvshow) | String.IsEqual(Container(5055).ListItem.DBType,season) | !String.IsEmpty(Container(5055).ListItem.ChannelName)] + String.IsEmpty(Container(5055).ListItem.Art(clearlogo))</visible>
            <top>-210</top>
            <label>$VAR[video_heading5055]</label>
            <textcolor>grey</textcolor>
            <shadowcolor>black</shadowcolor>
            <font>spotlight_heading_small</font>
            <width min="200" max="600">auto</width>
            <height min="50" max="150">auto</height>
            <align>left</align>
            <wrapmultiline>true</wrapmultiline>
            <autoscroll>true</autoscroll>
            <scroll>true</scroll>
          </control>
	<control type="group">
	<height>20</height>
	<visible>String.IsEmpty(Container(5055).ListItem.Art(clearlogo))</visible>
	</control>
          <control type="grouplist">
            <height>60</height>
            <orientation>horizontal</orientation>
            <usecontrolcoords>true</usecontrolcoords>
            <itemgap>0</itemgap>
            <left>0</left>
            <right>$PARAM[titleright]</right>
            <control type="group">
              <width>200</width>
              <left>-5</left>
              <top>-20</top>
              <visible>!String.IsEmpty(Container(5055).ListItem.Rating) + !Skin.HasSetting(DisableStarRating)</visible>
              <include content="Object_StarRating" condition="![Skin.HasSetting(DisableInfoRatings)]">
                <param name="height" value="50" />
                <param name="width" value="50" />
              </include>
            </control>
            <control type="group">
              <width>500</width>
              <control type="grouplist">
                <orientation>horizontal</orientation>
                <itemgap>10</itemgap>
                <!-- Year -->
                <control type="label">
                  <width>60</width>
                  <label>$INFO[Container(5055).ListItem.Year]</label>
                  <textcolor>white</textcolor>
                  <align>center</align>
                  <font>font_tiny_bold</font>
                </control>
                <!-- MPAA -->
                <control type="group">
                  <width>100</width>
                  <height>30</height>
                  <visible>!String.IsEmpty(Container(5055).ListItem.MPAA)</visible>
                  <control type="image">
                    <bottom>-18</bottom>
                    <animation effect="fade" time="0" end="75" condition="true">Conditional</animation>
                    <align>bottom</align>
                    <height>100%</height>
                    <width>100%</width>
                    <texture colordiffuse="dimgrey">flags/flag_box_rating_classic.png</texture>
                  </control>
                  <control type="label" id="6115">
                    <top>15</top>
                    <left>30</left>
                    <height>100%</height>
                    <width>90%</width>
                    <font>widget_trakt_title2</font>
                    <textcolor>grey</textcolor>
                    <scroll>false</scroll>
                    <label>$INFO[Container(5055).ListItem.MPAA]</label>
                  </control>
                </control>
                <!-- Duration -->
                <control type="group">
                  <width>90</width>
                  <height>30</height>
                  <visible>!String.IsEmpty(Container(5055).ListItem.Duration)</visible>
                  <control type="image">
                    <bottom>-18</bottom>
                    <animation effect="fade" time="0" end="75" condition="true">Conditional</animation>
                    <align>bottom</align>
                    <height>100%</height>
                    <width>100%</width>
                    <texture colordiffuse="dimgrey">flags/flag_box.png</texture>
                  </control>
                  <control type="label" id="6115">
                    <top>15</top>
                    <left>10</left>
                    <height>100%</height>
                    <width>90%</width>
                    <font>widget_trakt_title2</font>
                    <textcolor>grey</textcolor>
                    <scroll>false</scroll>
                    <label>$INFO[Container(5055).ListItem.Duration(h),,h] $INFO[Container(5055).ListItem.Duration(mm),,m]</label>
                  </control>
                </control>
                <!-- Season Count -->
                <control type="label">
                  <width>115</width>
                  <textcolor>white</textcolor>
                  <align>center</align>
                  <font>widget_trakt_title2</font>
                  <textcolor>grey</textcolor>
                  <label>$VAR[total_seasons_view505]</label>
                  <visible>!String.IsEmpty(Container(5055).ListItem.Property(TotalSeasons))</visible>
                </control>
                <!-- Aired -->
                <control type="label">
                  <width>195</width>
                  <label>Aired: $INFO[Container(5055).ListItem.Premiered(dd MMM yyyy)]</label>
                  <textcolor>$VAR[ColorHighlight2]</textcolor>
                  <font>font_tiny_bold</font>
                  <visible>String.IsEqual(Container(5055).ListItem.DBType,episode)</visible>
                </control>
              </control>
            </control>
          </control>
	  <control type="label">
	    <width>680</width>
	    <height>30</height>
	    <font>font_small</font>
	    <textcolor>grey</textcolor>
	    <label>[I]Continue watching $INFO[Container(5055).ListItem.Season, S,: ]$INFO[Container(5055).ListItem.Episode,E, ][/I]</label>
            <visible>String.IsEqual(Container(5055).ListItem.DBType,episode)</visible>
	  </control>
          <control type="textbox">
            <label>$INFO[Container(5055).ListItem.Plot]</label>
            <width>620</width>
            <height min="20" max="175">auto</height>
            <aligny>top</aligny>
            <autoscroll>0</autoscroll>
            <textcolor>dimgrey</textcolor>
            <font>font_small</font>
	    <visible>!String.Contains(ListItem.Path,plugin.video.youtube)</visible>
          </control>
          <control type="textbox">
            <label>[B]Channel:[/B] $INFO[Container(5055).ListItem.Plot]</label>
            <width>620</width>
            <height min="20" max="175">auto</height>
            <aligny>top</aligny>
            <autoscroll>0</autoscroll>
            <textcolor>dimgrey</textcolor>
            <font>font_small</font>
	    <visible>String.Contains(ListItem.Path,plugin.video.youtube)</visible>
          </control>
          <control type="grouplist">
            <top>30</top>
            <height>62</height>
            <width>800</width>
            <itemgap>25</itemgap>
            <orientation>horizontal</orientation>
            <usecontrolcoords>true</usecontrolcoords>
            <control type="group">
              <top>5</top>
              <height>46</height>
              <width>46</width>
              <control type="image">
                <!--
              <animation effect="fade" time="150">Visible</animation>
              <animation effect="fade" time="0" end="60" condition="true">Conditional</animation>
-->
                <align>left</align>
                <aligny>center</aligny>
                <texture>$VAR[DetailsSpinImage,netflix/spinner/,.png]</texture>
                <colordiffuse>red</colordiffuse>
              </control>
            </control>
            <control type="textbox" id="841">
              <!--
            <animation effect="fade" time="150">Visible</animation>
-->
              <height>75</height>
              <width>550</width>
              <label>$VAR[NetflixDetailsSpin]</label>
              <textcolor>dimgrey</textcolor>
              <align>left</align>
              <aligny>center</aligny>
              <font>font_tiny</font>
              <autoscroll>false</autoscroll>
            </control>
          </control>
        </control>
      </control>
    </definition>
  </include>
  <include name="Object_Info_Netflix">
    <param name="hdsd_flag" default="false" />
    <param name="rottentomatoes" default="true" />
    <param name="imdbvotes" default="Skin.HasSetting(Ratings.IMDBVotes)" />
    <param name="usermeter" default="true" />
    <param name="imdb" default="true" />
    <param name="tmdb" default="true" />
    <param name="metacritic" default="true" />
    <param name="oscars" default="true" />
    <param name="genre" default="true" />
    <param name="top250" default="true" />
    <param name="titleright" default="0" />
    <definition>
      <!-- End Netflix view Fanart with corner diffuse -->
      <control type="group">
        <!-- trailer window -->
        <control type="group">
          <visible>!Window.IsVisible(DialogVideoInfo.xml)</visible>
          <animation effect="slide" start="0" end="100,0" time="0" condition="Integer.IsEqual(VideoPlayer.VideoAspect,2.4) | Integer.IsEqual(VideoPlayer.VideoAspect,2.35) | Integer.IsEqual(VideoPlayer.VideoAspect,2.55) | Integer.IsEqual(VideoPlayer.VideoAspect,2.76)" reversible="true">Conditional</animation>
          <animation effect="slide" start="0" end="200,0" time="0" condition="Integer.IsEqual(VideoPlayer.VideoAspect,1.33)">Conditional</animation>
          <animation effect="slide" start="0" end="95,0" time="0" condition="Integer.IsEqual(VideoPlayer.VideoAspect,1.78)">Conditional</animation>
          <animation effect="slide" start="0" end="285,0" time="0" condition="Integer.IsEqual(VideoPlayer.VideoAspect,0.00)">Conditional</animation>
          <visible>Player.HasVideo</visible>
          <left>210</left>
          <width>1600</width>
          <height>640</height>
          <top>-115</top>
          <bottom>5</bottom>
          <control type="videowindow">
            <width>100%</width>
            <height>100%</height>
          </control>
          <control type="image">
            <animation effect="slide" start="0" end="100,0" time="0" condition="Integer.IsEqual(VideoPlayer.VideoAspect,1.78)">Conditional</animation>
            <animation effect="slide" start="0" end="225,0" time="0" condition="Integer.IsEqual(VideoPlayer.VideoAspect,0.00)">Conditional</animation>
            <animation effect="slide" start="0" end="30,0" time="0" condition="Integer.IsEqual(VideoPlayer.VideoAspect,2.4) | Integer.IsEqual(VideoPlayer.VideoAspect,2.35) | Integer.IsEqual(VideoPlayer.VideoAspect,2.55) | Integer.IsEqual(VideoPlayer.VideoAspect,2.76)">Conditional</animation>
            <texture colordiffuse="ff000000" border="40">netflix/netflix_corner.png</texture>
          </control>
        </control>
      </control>
      <!-- Add Netflix view Fanart with corner diffuse -->
      <control type="group">
        <control type="image">
          <visible>!Skin.HasSetting(DisableNetflixView) + !Player.HasVideo + [Control.IsVisible(55) | Control.IsVisible(56) | Control.IsVisible(509)]</visible>
          <fadetime>350</fadetime>
          <width>1413.33</width>
          <height>795</height>
          <right>0</right>
          <top>-45</top>
          <bottom>5</bottom>
          <texture background="true" diffuse="Right Corner.png">$VAR[Spotlight_Fanart]</texture>
          <aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
        </control>
        <control type="group">
          <visible>!Skin.HasSetting(DisableNetflixView) + !Window.IsVisible(DialogVideoInfo.xml)</visible>
          <top>550</top>
          <right>50</right>
          <width>$PARAM[width]</width>
          <height>184</height>
          <include content="Object_Ratings" condition="Window.IsVisible(MyVideoNav.xml) | Window.IsVisible(Home.xml) | Window.IsVisible(script-globalsearch.xml)">
            <param name="directory" value="monochrome" />
            <param name="align" value="right" />
            <param name="width" value="700" />
            <param name="rottentomatoes" value="$PARAM[rottentomatoes]" />
            <param name="imdbvotes" value="$PARAM[imdbvotes]" />
            <param name="usermeter" value="$PARAM[usermeter]" />
            <param name="imdb" value="$PARAM[imdb]" />
            <param name="tmdb" value="$PARAM[tmdb]" />
            <param name="metacritic" value="$PARAM[metacritic]" />
            <param name="oscars" value="$PARAM[oscars]" />
            <param name="top250" value="$PARAM[top250]" />
            <param name="plot" value="false" />
            <param name="studio" value="true" />
          </include>
        </control>
      </control>
      <!-- End Netflix view Fanart with corner diffuse -->
      <control type="grouplist">
        <top>-45</top>
        <posx>10</posx>
        <visible>Container.Content(movies) | Container.Content(sets) | Container.Content(episodes) | Container.Content(tvshows) | Container.Content(videos) | Container.Content(seasons) | Window.IsVisible(script-script.extendedinfo-VideoList.xml) | $EXP[Exp_IsPluginAdvancedLauncher] | Window.IsVisible(DialogVideoInfo.xml)</visible>
        <visible>!Container($PARAM[id]).ListItem.IsParentFolder</visible>
        <orientation>vertical</orientation>
        <usecontrolcoords>true</usecontrolcoords>
        <itemgap>0</itemgap>
        <control type="image" id="554450">
          <visible>!Skin.HasSetting(DisableNetflixView) + [Control.IsVisible(55) | Control.IsVisible(56) | Control.IsVisible(509) | Window.IsVisible(DialogVideoInfo.xml)]</visible>
          <left>0</left>
          <right>$PARAM[titleright]</right>
          <top>0</top>
          <bottom>10</bottom>
          <height>218</height>
          <width>563</width>
          <aligny>top</aligny>
          <align>left</align>
          <texture background="true">$VAR[NetflixHome_ClearLogo]</texture>
        </control>
        <!--
        <control type="label">
          <visible>String.IsEmpty(ListItem.Art(clearlogo)) + String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.ClearLogo))</visible>
          <top>-210</top>
          <label>$VAR[video_heading]</label>
          <label>Watched: $INFO[ListItem.Property(WatchedEpisodes)]  Unwatched: $INFO[ListItem.Property(UnWatchedEpisodes)] Total: $INFO[ListItem.Property(TotalEpisodes)]</label>
          <textcolor>grey</textcolor>
          <shadowcolor>black</shadowcolor>
          <font>netflix_heading</font>
          <width min="200" max="600">auto</width>
          <height min="50" max="200">auto</height>
          <align>left</align>
          <wrapmultiline>true</wrapmultiline>
          <autoscroll>true</autoscroll>
          <scroll>true</scroll>
        </control>
-->
<!--
        <control type="label">
          <visible>String.IsEmpty(ListItem.Art(clearlogo)) + String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.ClearLogo))</visible>
          <top>-210</top>
          <label>$VAR[video_heading]</label>
          <textcolor>grey</textcolor>
          <shadowcolor>black</shadowcolor>
          <font>netflix_heading</font>
          <width min="200" max="600">auto</width>
          <height min="50" max="200">auto</height>
          <align>left</align>
          <wrapmultiline>true</wrapmultiline>
          <autoscroll>true</autoscroll>
          <scroll>true</scroll>
        </control>
-->
          <control type="label">
            <visible>[String.IsEqual(ListItem.DBType,episode) | String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,season) | !String.IsEmpty(ListItem.ChannelName)] + String.IsEmpty(ListItem.Art(clearlogo)) + String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.ClearLogo))</visible>
            <top>-210</top>
            <label>$VAR[video_heading]</label>
            <textcolor>grey</textcolor>
            <shadowcolor>black</shadowcolor>
            <font>netflix_heading</font>
            <width min="200" max="600">auto</width>
            <height min="50" max="120">auto</height>
            <align>left</align>
            <wrapmultiline>true</wrapmultiline>
            <autoscroll>true</autoscroll>
            <scroll>true</scroll>
          </control>
          <control type="label">
            <visible>![String.IsEqual(ListItem.DBType,movie) | String.IsEqual(ListItem.DBType,episode) |  String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,season) | !String.IsEmpty(ListItem.ChannelName)]</visible>
            <top>-210</top>
            <label>$VAR[video_heading]</label>
            <textcolor>grey</textcolor>
            <shadowcolor>black</shadowcolor>
            <font>spotlight_heading_small</font>
            <width min="200" max="600">auto</width>
            <height min="50" max="150">auto</height>
            <align>left</align>
            <wrapmultiline>true</wrapmultiline>
            <autoscroll>true</autoscroll>
            <scroll>true</scroll>
          </control>



        <control type="grouplist">
          <top>0</top>
          <height>60</height>
          <orientation>horizontal</orientation>
          <usecontrolcoords>true</usecontrolcoords>
          <itemgap>0</itemgap>
          <left>0</left>
          <right>$PARAM[titleright]</right>
          <include>netflix_infoline</include>
        </control>
        <control type="textbox">
          <visible>!Skin.HasSetting(DisableNetflixView)</visible>
          <label fallback="19055">$VAR[Label_OverlayPlot]</label>
          <width>680</width>
          <height min="20" max="175">auto</height>
          <aligny>top</aligny>
          <autoscroll>0</autoscroll>
          <textcolor>dimgrey</textcolor>
          <font>font_small</font>
        </control>
        <control type="grouplist">
          <top>30</top>
          <height>62</height>
          <width>800</width>
          <itemgap>25</itemgap>
          <orientation>horizontal</orientation>
          <usecontrolcoords>true</usecontrolcoords>
          <control type="group">
            <top>5</top>
            <height>46</height>
            <width>46</width>
            <control type="image">
              <animation effect="fade" time="150">Visible</animation>
              <animation effect="fade" time="0" end="60" condition="true">Conditional</animation>
              <align>left</align>
              <aligny>center</aligny>
              <texture>$VAR[DetailsSpinImage,netflix/spinner/,.png]</texture>
              <colordiffuse>red</colordiffuse>
            </control>
          </control>
          <control type="textbox" id="841">
            <animation effect="fade" time="150">Visible</animation>
            <height>75</height>
            <width>550</width>
            <label>$VAR[NetflixDetailsSpin]</label>
            <textcolor>dimgrey</textcolor>
            <align>left</align>
            <aligny>center</aligny>
            <font>font_tiny</font>
            <autoscroll>false</autoscroll>
          </control>
        </control>
      </control>
      <control type="grouplist">
        <visible>![Container.Content(movies) | Container.Content(sets) | Container.Content(episodes) | Container.Content(tvshows) | Container.Content(videos) | Container.Content(seasons) | Window.IsVisible(script-script.extendedinfo-VideoList.xml) | $EXP[Exp_IsPluginAdvancedLauncher]]</visible>
        <visible>!Container($PARAM[id]).ListItem.IsParentFolder</visible>
        <bottom>$PARAM[bottom]</bottom>
        <top>-10</top>
        <orientation>vertical</orientation>
        <usecontrolcoords>true</usecontrolcoords>
        <itemgap>0</itemgap>
        <control type="label">
          <left>0</left>
          <right>0</right>
          <label>$VAR[Label_MainTitle]</label>
          <height>80</height>
          <aligny>top</aligny>
          <textcolor>main_fg_100</textcolor>
          <font>font_showcase_title</font>
        </control>
        <control type="label">
          <left>0</left>
          <right>0</right>
          <label>$VAR[Label_SubTitle]</label>
          <height>40</height>
          <aligny>top</aligny>
          <textcolor>$VAR[ColorHighlight]</textcolor>
          <font>font_small</font>
        </control>
        <control type="group">
          <height>80</height>
          <visible>!Skin.HasSetting(DisableStarRating)</visible>
          <control type="group">
            <top>-17</top>
            <left>-16</left>
            <include content="Object_StarRating_Music">
              <param name="align" value="left" />
              <param name="visible" value="String.IsEmpty(ListItem.UserRating)" />
            </include>
            <include content="Object_StarRating">
              <param name="align" value="left" />
              <param name="visible" value="!String.IsEmpty(ListItem.UserRating)" />
              <param name="rating_prop" value="ListItem.UserRating" />
            </include>
          </control>
        </control>
      </control>
    </definition>
  </include>
  <include name="Object_VideoInfo_InfoSection">
    <param name="haspath" default="false" />
    <param name="label3" default="" />
    <definition>
      <control type="group">
        <height>32</height>
        <visible>!String.IsEmpty($PARAM[label2])</visible>
        <control type="label">
          <width>150</width>
          <align>left</align>
          <font>font_tiny</font>
          <textcolor>main_fg_30</textcolor>
          <label>$PARAM[label]</label>
          <scroll>true</scroll>
        </control>
        <control type="label">
          <left>150</left>
          <align>left</align>
          <font>font_tiny</font>
          <textcolor>main_fg_70</textcolor>
          <label>$INFO[$PARAM[label2],, ]$PARAM[label3]</label>
          <haspath>$PARAM[haspath]</haspath>
          <scroll>true</scroll>
        </control>
      </control>
    </definition>
  </include>

  <include name="submenu_widget_fixed">
    <control type="list" id="30222">
      <left>80</left>
      <top>660</top>
      <orientation>horizontal</orientation>
      <animation effect="fade" start="0" end="100" time="350" delay="300" tween="sine">Focus</animation>
      <animation effect="fade" start="100" end="0" time="150" delay="0" tween="sine">Hidden</animation>
      <animation effect="slide" end="0,40" time="350" delay="100" tween="sine" condition="Skin.HasSetting(DisableAuraHomeLayout) + !Skin.HasSetting(DisableNetflixLargeWidget)">Conditonal</animation>
      <animation effect="slide" end="-40,30" time="10" condition="Skin.HasSetting(DisableNetflixSmallWidget) + [Skin.HasSetting(DisableMenuHor) | Skin.HasSetting(DisableNetflixHomeSidemenuHide)]">Conditional</animation>
      <animation effect="slide" end="-30,-10" time="10" condition="!Skin.HasSetting(DisableNetflixLargeWidget) + [Skin.HasSetting(DisableMenuHor) | Skin.HasSetting(DisableNetflixHomeSidemenuHide)]">Conditional</animation>
      <onup condition="Window.IsVisible(Home) + !Integer.IsGreater(Container($PARAM[id]).NumItems,0) + Integer.IsGreater(Container(1505).NumItems,0) + String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true) + String.IsEqual(Container(300).ListItem.Property(widgetSpotlighttype),TVShows)">SetFocus(1505)</onup>
      <onup condition="Window.IsVisible(Home) + !Integer.IsGreater(Container($PARAM[id]).NumItems,0) + Integer.IsGreater(Container(1506).NumItems,0) + String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true) + String.IsEqual(Container(300).ListItem.Property(widgetSpotlighttype),Movies)">SetFocus(1506)</onup>
      <onup condition="!String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true)">300</onup>
      <ondown>330</ondown>
      <onleft>300</onleft>
      <onback>300</onback>
      <visible allowhiddenfocus="true">Control.HasFocus(30222) + Skin.HasSetting(DisableAuraHomeLayout)</visible>
      <!--      <visible>Window.IsVisible(Home)</visible> -->
      <include>Home_Widget_SubMenu_Items</include>
      <include>Home_Widget_SubMenu_Layout_icon_fixed</include>
    </control>
  </include>


  <include name="submenu_widget_thumb">
    <control type="list" id="30222">
      <left>80</left>
      <top>660</top>
      <visible allowhiddenfocus="true">Control.HasFocus(30222) + Skin.HasSetting(DisableAuraHomeLayout)</visible>
      <orientation>horizontal</orientation>
      <animation effect="fade" start="0" end="100" time="350" delay="100" tween="sine">Focus</animation>
      <animation effect="fade" start="100" end="0" time="150" delay="0" tween="sine">Hidden</animation>
      <animation effect="slide" start="0,100" end="0,40" time="350" delay="100" tween="sine" condition="!Skin.HasSetting(DisableNetflixLargeWidget)">Focus</animation>
      <animation effect="slide" end="-40,30" time="10" condition="Skin.HasSetting(DisableNetflixSmallWidget) + [Skin.HasSetting(DisableMenuHor) | Skin.HasSetting(DisableNetflixHomeSidemenuHide)]">Conditional</animation>
      <animation effect="slide" end="-30,-10" time="10" condition="!Skin.HasSetting(DisableNetflixLargeWidget) + [Skin.HasSetting(DisableMenuHor) | Skin.HasSetting(DisableNetflixHomeSidemenuHide)]">Conditional</animation>
      <visible>Window.IsVisible(Home)</visible>
      <ondown>330</ondown>
      <onup condition="Window.IsVisible(Home) + !Integer.IsGreater(Container($PARAM[id]).NumItems,0) + Integer.IsGreater(Container(1505).NumItems,0) + String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true) + String.IsEqual(Container(300).ListItem.Property(widgetSpotlighttype),TVShows)">SetFocus(1505)</onup>
      <onup condition="Window.IsVisible(Home) + !Integer.IsGreater(Container($PARAM[id]).NumItems,0) + Integer.IsGreater(Container(1506).NumItems,0) + String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true) + String.IsEqual(Container(300).ListItem.Property(widgetSpotlighttype),Movies)">SetFocus(1506)</onup>
      <onup condition="!String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true)">300</onup>
      <onup>300</onup>
      <onleft>300</onleft>
      <onback>300</onback>
      <include>Home_Widget_SubMenu_Layout_thumb_fixed</include>
    </control>
  </include>
  <include name="submenu_widget_fixed">
    <control type="list" id="30222">
      <left>30</left>
      <top>630</top>
      <orientation>horizontal</orientation>
      <animation effect="fade" start="0" end="100" time="350" delay="300" tween="sine">Focus</animation>
      <animation effect="fade" start="100" end="0" time="150" delay="0" tween="sine">Hidden</animation>
      <animation effect="slide" end="0,40" time="350" delay="100" tween="sine" condition="Skin.HasSetting(DisableAuraHomeLayout) + !Skin.HasSetting(DisableNetflixLargeWidget)">Conditonal</animation>
      <animation effect="slide" end="-40,30" time="10" condition="Skin.HasSetting(DisableNetflixSmallWidget) + [Skin.HasSetting(DisableMenuHor) | Skin.HasSetting(DisableNetflixHomeSidemenuHide)]">Conditional</animation>
      <animation effect="slide" end="-30,-10" time="10" condition="!Skin.HasSetting(DisableNetflixLargeWidget) + [Skin.HasSetting(DisableMenuHor) | Skin.HasSetting(DisableNetflixHomeSidemenuHide)]">Conditional</animation>
      <onup condition="Window.IsVisible(Home) + !Integer.IsGreater(Container($PARAM[id]).NumItems,0) + Integer.IsGreater(Container(1505).NumItems,0) + String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true) + String.IsEqual(Container(300).ListItem.Property(widgetSpotlighttype),TVShows)">SetFocus(1505)</onup>
      <onup condition="Window.IsVisible(Home) + !Integer.IsGreater(Container($PARAM[id]).NumItems,0) + Integer.IsGreater(Container(1506).NumItems,0) + String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true) + String.IsEqual(Container(300).ListItem.Property(widgetSpotlighttype),Movies)">SetFocus(1506)</onup>
      <onup condition="!String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true)">300</onup>
      <ondown>330</ondown>
      <onleft>300</onleft>
      <onback>300</onback>
      <visible allowhiddenfocus="true">Control.HasFocus(30222) + Skin.HasSetting(DisableAuraHomeLayout)</visible>
      <!--      <visible>Window.IsVisible(Home)</visible> -->
      <include>Home_Widget_SubMenu_Items</include>
      <include>Home_Widget_SubMenu_Layout_icon_fixed</include>
    </control>
  </include>
  <include name="hubmenu_tv_fixed">
    <control type="fixedlist" id="30221">
      <scrolltime tween="sine" easing="out">500</scrolltime>
      <movement>4</movement>
      <left>80</left>
      <top>660</top>
      <orientation>horizontal</orientation>
      <animation effect="slide" end="0,-730" time="0" condition="!Skin.HasSetting(DisableAuraHomeLayout) + [[!Integer.IsGreater(Container(1505).NumItems,0) + !Integer.IsGreater(Container(1506).NumItems,0)] | !String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true)] + !Skin.HasSetting(DisableMenuHor)">Conditional</animation>
      <animation effect="slide" end="0,-100" time="0" condition="!Skin.HasSetting(DisableAuraHomeLayout) + Integer.IsGreater(Container(1505).NumItems,0)">Conditional</animation>
      <onup condition="Window.IsVisible(Home) + !Integer.IsGreater(Container($PARAM[id]).NumItems,0) + Integer.IsGreater(Container(1505).NumItems,0) + String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true) + String.IsEqual(Container(300).ListItem.Property(widgetSpotlighttype),TVShows)">SetFocus(1505)</onup>
      <onup condition="Window.IsVisible(Home) + !Integer.IsGreater(Container($PARAM[id]).NumItems,0) + Integer.IsGreater(Container(1506).NumItems,0) + String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true) + String.IsEqual(Container(300).ListItem.Property(widgetSpotlighttype),Movies)">SetFocus(1506)</onup>
      <onup condition="!String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true)">300</onup>
      <animation effect="fade" start="0" end="100" time="250" delay="100" tween="sine">Focus</animation>
      <animation effect="fade" start="100" end="0" time="150" delay="0" tween="sine">Hidden</animation>
      <animation type="WindowClose">
        <effect type="fade" start="100" end="0" time="350" tween="cubic" easing="inout" />
      </animation>
      <animation effect="slide" end="-40,30" time="10" condition="Skin.HasSetting(DisableAuraHomeLayout) + Skin.HasSetting(DisableNetflixSmallWidget) + [Skin.HasSetting(DisableMenuHor) | Skin.HasSetting(DisableNetflixHomeSidemenuHide)]">Conditional</animation>
      <animation effect="slide" end="-30,-10" time="10" condition="Skin.HasSetting(DisableAuraHomeLayout) + !Skin.HasSetting(DisableNetflixLargeWidget) + [Skin.HasSetting(DisableMenuHor) | Skin.HasSetting(DisableNetflixHomeSidemenuHide)]">Conditional</animation>
      <animation effect="slide" end="0,30" time="10" condition="!Skin.HasSetting(DisableAuraHomeLayout) + !Skin.HasSetting(DisableNetflixHomeSidemenuHide)">Conditional</animation>
      <animation effect="slide" end="-40,30" time="10" condition="!Skin.HasSetting(DisableAuraHomeLayout) + Skin.HasSetting(DisableNetflixHomeSidemenuHide)">Conditional</animation>
      <animation effect="slide" end="10,40" time="0" condition="!Skin.HasSetting(DisableAuraHomeLayout)">Conditional</animation>
      <ondown>330</ondown>
      <onleft>300</onleft>
      <onback>300</onback>
      <visible>Window.IsVisible(Home)</visible>
      <include>Home_Widget_HubMenu_TVItems</include>
      <include content="Home_Widget_HubMenu_Layout_icon_fixed">
        <param name="id" value="30221" />
      </include>
      <visible>Control.HasFocus(30221)</visible>
    </control>
  </include>

  <include name="hubmenu_movie_fixed">
    <control type="fixedlist" id="3022">
      <orientation>horizontal</orientation>
      <left>80</left>
      <top>580</top>
      <movement>2</movement>
      <onup condition="Window.IsVisible(Home) + !Integer.IsGreater(Container($PARAM[id]).NumItems,0) + Integer.IsGreater(Container(1505).NumItems,0) + String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true) + String.IsEqual(Container(300).ListItem.Property(widgetSpotlighttype),TVShows)">SetFocus(1505)</onup>
      <onup condition="Window.IsVisible(Home) + !Integer.IsGreater(Container($PARAM[id]).NumItems,0) + Integer.IsGreater(Container(1506).NumItems,0) + String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true) + String.IsEqual(Container(300).ListItem.Property(widgetSpotlighttype),Movies)">SetFocus(1506)</onup>
      <onup condition="!String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true)">300</onup>
      <onup>30222</onup>
      <ondown>330</ondown>
      <onleft>300</onleft>
      <onback>300</onback>
      <scrolltime tween="sine" easing="out">500</scrolltime>
      <animation effect="slide" end="0,-600" time="0" condition="!Skin.HasSetting(DisableAuraHomeLayout) + [[!Integer.IsGreater(Container(1505).NumItems,0) + !Integer.IsGreater(Container(1506).NumItems,0)] | !String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true)] + !Skin.HasSetting(DisableMenuHor)">Conditional</animation>
      <animation effect="slide" end="0,-100" time="0" condition="!Skin.HasSetting(DisableAuraHomeLayout) + Integer.IsGreater(Container(1506).NumItems,0)">Conditional</animation>
      <animation effect="slide" end="0,40" time="350" delay="100" tween="sine" condition="Skin.HasSetting(DisableAuraHomeLayout) + !Skin.HasSetting(DisableNetflixLargeWidget)">Conditonal</animation>
      <animation effect="fade" start="0" end="100" time="250" delay="100" tween="sine">Focus</animation>
      <animation effect="fade" start="100" end="0" time="150" delay="0" tween="sine">Hidden</animation>
      <animation type="WindowClose">
        <effect type="fade" start="100" end="0" time="350" tween="cubic" easing="inout" />
      </animation>
      <animation effect="slide" end="-40,30" time="10" condition="Skin.HasSetting(DisableAuraHomeLayout) + Skin.HasSetting(DisableNetflixSmallWidget) + [Skin.HasSetting(DisableMenuHor) | Skin.HasSetting(DisableNetflixHomeSidemenuHide)]">Conditional</animation>
      <animation effect="slide" end="-30,-10" time="10" condition="Skin.HasSetting(DisableAuraHomeLayout) + !Skin.HasSetting(DisableNetflixLargeWidget) + [Skin.HasSetting(DisableMenuHor) | Skin.HasSetting(DisableNetflixHomeSidemenuHide)]">Conditional</animation>
      <animation effect="slide" end="0,30" time="10" condition="!Skin.HasSetting(DisableAuraHomeLayout) + !Skin.HasSetting(DisableNetflixHomeSidemenuHide)">Conditional</animation>
      <animation effect="slide" end="-40,30" time="10" condition="!Skin.HasSetting(DisableAuraHomeLayout) + Skin.HasSetting(DisableNetflixHomeSidemenuHide)">Conditional</animation>
      <visible>Window.IsVisible(Home)</visible>
      <include>Home_Widget_HubMenu_MovieItems</include>
      <include content="Home_Widget_HubMenu_Layout_icon_fixed">
        <param name="id" value="3022" />
      </include>
      <visible>Control.HasFocus(3022)</visible>
    </control>
  </include>
  <include name="Home_Widget_HubMenu_TVItems">
    <content>
      <include>skinshortcuts-group-x1103</include>
    </content>
  </include>
  <include name="Home_Widget_HubMenu_MovieItems">
    <content>
      <include>skinshortcuts-group-x1101</include>
    </content>
  </include>
  <include name="Home_Widget_SubMenu_Items">
    <content>
      <include>skinshortcuts-submenu</include>
    </content>
  </include>

  <include name="Home_Widget_HubMenu_Layout_icon_fixed">
    <param name="id" default="$PARAM[id]" />
    <definition>
      <top>630</top>
      <height>500</height>
      <width>1950</width>
      <left>0</left>
      <preloaditems>2</preloaditems>
      <orientation>horizontal</orientation>
      <itemgap>15</itemgap>
      <focusposition>0</focusposition>
      <visible allowhiddenfocus="true">Control.HasFocus($PARAM[id])</visible>
      <itemlayout width="182" height="130" condition="!Skin.HasSetting(SubmenuLabel)">
        <include>Widget_Submenu_ItemLayout</include>
      </itemlayout>
      <focusedlayout width="182" height="130" condition="!Skin.HasSetting(SubmenuLabel)">
        <include content="Widget_Submenu_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
        </include>
      </focusedlayout>
      <itemlayout width="373.33" height="200" condition="Skin.HasSetting(SubmenuLabel)">
        <include content="Widget_Hub_ItemLayout">
          <param name="category" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </itemlayout>
      <focusedlayout width="373.33" height="200" condition="Skin.HasSetting(SubmenuLabel)">
        <include content="Widget_Hub_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="category" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
    </definition>
  </include>


  <include name="Widget_Hub_ItemLayout">
            <control type="group">
                <top>0</top>
                <bottom>-0</bottom>
                <control type="group">
                    <include>Defs_PosterBack</include>
                    <control type="image">
                        <bordersize>10</bordersize>
                        <texture background="true" diffuse="diffuse/submenu.png">$INFO[ListItem.Property(background)]</texture>
                        <visible>!String.IsEmpty(ListItem.Property(background))</visible>
                    </control>
                    <control type="image">
                        <bordersize>10</bordersize>
                        <texture colordiffuse="69000000" background="true">diffuse/landscape.png</texture>
                        <visible>!String.IsEmpty(ListItem.Property(background))</visible>
                    </control>
                    <control type="image">
                        <bordersize>10</bordersize>
                        <texture colordiffuse="79000000" background="true">diffuse/landscape.png</texture>
                        <visible>!String.IsEmpty(ListItem.Property(background))</visible>
                    </control>
                    <control type="label">
                        <bottom>20</bottom>
                        <height>30</height>
                        <align>center</align>
                        <font>font_tiny</font>
                        <textcolor>PosterFront_70</textcolor>
                        <right>30</right>
                        <left>30</left>
                        <label>$INFO[ListItem.Label]</label>
                        <scroll>false</scroll>
                        <visible>Skin.HasSetting(SubmenuLabel)</visible>
                        <visible>!Skin.HasSetting(DisableBigCat)</visible>
                        <visible>!String.Contains(ListItem.Icon,none.png)</visible>
                    </control>
                    <control type="label">
                        <centertop>50%</centertop>
                        <height>30</height>
                        <align>center</align>
                        <font>font_medium_bold</font>
                        <textcolor>PosterFront</textcolor>
                        <right>30</right>
                        <left>30</left>
                        <label>$INFO[ListItem.Label]</label>
                        <visible>String.Contains(ListItem.Icon,none.png)</visible>
                        <visible>Skin.HasSetting(SubmenuLabel)</visible>
                    </control>
                    <control type="image">
                        <bordersize>10</bordersize>
                        <aspectratio scalediffuse="false">keep</aspectratio>
                        <texture background="true" diffuse="diffuse/submenu.png">$INFO[ListItem.Icon]</texture>
                        <visible>!Skin.HasSetting(SubmenuLabel)</visible>
                    </control>
                    <control type="image">
                        <animation effect="slide" end="0,20" time="0" condition="Skin.HasSetting(SubmenuLabel) + Skin.HasSetting(LargeSubmenuLabel)">Conditional</animation>
                        <bordersize>10</bordersize>
                        <height>125</height>
                        <aspectratio scalediffuse="false">keep</aspectratio>
                        <texture background="true" diffuse="diffuse/submenubig.png">$INFO[ListItem.Icon]</texture>
                        <visible>Skin.HasSetting(SubmenuLabel)</visible>
                        <visible>!Skin.HasSetting(DisableBigCat)</visible>
                        <visible>!String.Contains(ListItem.Icon,none.png)</visible>
                    </control>
                    <control type="image">
                        <bordersize>10</bordersize>
                        <aspectratio scalediffuse="false">keep</aspectratio>
                        <texture background="true" diffuse="diffuse/submenubig.png">$INFO[ListItem.Icon]</texture>
                        <visible>Skin.HasSetting(SubmenuLabel)</visible>
                        <visible>Skin.HasSetting(DisableBigCat)</visible>
                        <visible>!String.Contains(ListItem.Icon,none.png)</visible>
                    </control>
                    <control type="image">
                        <bordersize>10</bordersize>
                        <texture colordiffuse="PixelLines" border="20">common/outline.png</texture>
                    </control>
                </control>
            </control>
	</include>



  <include name="Widget_Hub_ItemLayout1">
    <include>Defs_PosterBack</include>
    <control type="image">
      <bordersize>10</bordersize>
      <texture colordiffuse="PixelLines" border="20">common/outline.png</texture>
    </control>
    <control type="group">
      <left>10</left>
      <right>0</right>
      <bottom>10</bottom>
      <top>10</top>
      <control type="image">
        <width>99%</width>
        <height>100%</height>
        <aspectratio aligny="center">scale</aspectratio>
        <texture colordiffuse="PosterFront_70" background="true">$INFO[ListItem.Property(background)]</texture>
      </control>
      <control type="image">
        <width>100%</width>
        <height>100%</height>
        <aspectratio aligny="center">scale</aspectratio>
        <texture colordiffuse="69000000" background="true">diffuse/landscape.png</texture>
      </control>
      <control type="image">
        <top>10</top>
        <bottom>100</bottom>
        <width>250</width>
        <centerleft>50%</centerleft>
        <aspectratio aligny="center">keep</aspectratio>
        <texture colordiffuse="PosterFront_70" background="true">$INFO[ListItem.Icon]</texture>
      </control>
      <control type="group">
        <left>10</left>
        <right>10</right>
        <control type="textbox">
          <centerleft>50%</centerleft>
          <font>font_small_bold</font>
          <align>center</align>
          <scroll>true</scroll>
          <textcolor>PosterFront_70</textcolor>
          <height>70</height>
          <top>50%</top>
          <label>$INFO[ListItem.Label]</label>
          <width min="200" max="300">auto</width>
          <align>left</align>
          <wrapmultiline>true</wrapmultiline>
        </control>
      </control>
    </control>
  </include>

  <include name="Widget_Hub_FocusedLayout">
            <control type="group">
                <top>0</top>
                <bottom>-0</bottom>
                <visible>Control.HasFocus($PARAM[id])</visible>
                <include>Animation_FocusBounce_Large</include>
                <control type="group">
                    <include>Defs_PosterBack</include>
                    <control type="image">
                        <bordersize>10</bordersize>
                        <texture background="true" diffuse="diffuse/submenu.png">$INFO[ListItem.Property(background)]</texture>
                        <visible>!String.IsEmpty(ListItem.Property(background))</visible>
                    </control>
                    <control type="image">
                        <bordersize>10</bordersize>
                        <texture colordiffuse="69000000" background="true">diffuse/landscape.png</texture>
                        <visible>!String.IsEmpty(ListItem.Property(background))</visible>
                    </control>
                    <control type="image">
                        <bordersize>10</bordersize>
                        <texture colordiffuse="79000000" background="true">diffuse/landscape.png</texture>
                        <visible>!String.IsEmpty(ListItem.Property(background))</visible>
                    </control>
                    <control type="label">
                        <bottom>20</bottom>
                        <height>30</height>
                        <align>center</align>
                        <font>font_tiny</font>
                        <textcolor>PosterFront</textcolor>
                        <right>30</right>
                        <left>30</left>
                        <label>$INFO[ListItem.Label]</label>
                        <scroll>true</scroll>
                        <visible>Skin.HasSetting(SubmenuLabel)</visible>
                        <visible>!Skin.HasSetting(DisableBigCat)</visible>
                        <visible>!String.Contains(ListItem.Icon,none.png)</visible>
                    </control>
                    <control type="label">
                        <centertop>50%</centertop>
                        <height>30</height>
                        <align>center</align>
                        <font>font_medium_bold</font>
                        <textcolor>PosterFront</textcolor>
                        <right>30</right>
                        <left>30</left>
                        <label>$INFO[ListItem.Label]</label>
                        <visible>String.Contains(ListItem.Icon,none.png)</visible>
                        <visible>Skin.HasSetting(SubmenuLabel)</visible>
                    </control>
                    <control type="image">
                        <bordersize>10</bordersize>
                        <aspectratio scalediffuse="false">keep</aspectratio>
                        <texture background="true" diffuse="diffuse/submenu.png">$INFO[ListItem.Icon]</texture>
                        <visible>!Skin.HasSetting(SubmenuLabel)</visible>
                    </control>
                     <control type="image">
			<animation effect="slide" end="0,20" time="0" condition="Skin.HasSetting(SubmenuLabel) + Skin.HasSetting(LargeSubmenuLabel)">Conditional</animation>
                        <bordersize>10</bordersize>
                        <height>125</height>
                        <aspectratio scalediffuse="false">keep</aspectratio>
                        <texture background="true" diffuse="diffuse/submenubig.png">$INFO[ListItem.Icon]</texture>
                        <visible>Skin.HasSetting(SubmenuLabel)</visible>
                        <visible>!Skin.HasSetting(DisableBigCat)</visible>
                        <visible>!String.Contains(ListItem.Icon,none.png)</visible>
                    </control>
                    <control type="image">
                        <bordersize>10</bordersize>
                        <aspectratio scalediffuse="false">keep</aspectratio>
                        <texture background="true" diffuse="diffuse/submenubig.png">$INFO[ListItem.Icon]</texture>
                        <visible>Skin.HasSetting(SubmenuLabel)</visible>
                         <visible>Skin.HasSetting(DisableBigCat)</visible>
                        <visible>!String.Contains(ListItem.Icon,none.png)</visible>
                    </control>
                    <control type="image">
                        <bordersize>10</bordersize>
                        <texture colordiffuse="PixelLines" border="20">common/outline.png</texture>
                    </control>
                </control>
                <control type="group">
                    <include>View_Selectbox</include>
                </control>
            </control>
            <control type="group">
                <visible>!Control.HasFocus($PARAM[id])</visible>
                <include content="Widget_Hub_ItemLayout">
                    <param name="genres" value="$PARAM[genres]" />
                    <param name="studios" value="$PARAM[studios]" />
                    <param name="text" value="$PARAM[text]" />
                    <param name="square" value="$PARAM[square]" />
                    <param name="poster" value="$PARAM[poster]" />
                    <param name="landscape" value="$PARAM[landscape]" />
                    <param name="landscapewide" value="$PARAM[landscapwide]" />
                    <param name="landscapewideposter" value="$PARAM[landscapewideposter]" />
                    <param name="posterdetails" value="$PARAM[posterdetails]" />
                    <param name="widgetlive" value="$PARAM[widgetlive]" />
                    <param name="landscapenetflix" value="$PARAM[landscapenetflix]" />
                </include>
            </control>
    </include>




  <include name="Widget_Hub_FocusedLayout1">
    <control type="group">
      <include>Defs_PosterBack</include>
      <control type="image">
        <bordersize>10</bordersize>
        <texture colordiffuse="PixelLines" border="20">common/outline.png</texture>
      </control>
      <include>Animation_FocusBounce_Small</include>
      <control type="group">
        <left>10</left>
        <right>0</right>
        <bottom>10</bottom>
        <top>10</top>
        <control type="image">
          <width>99%</width>
          <height>100%</height>
          <aspectratio aligny="center">scale</aspectratio>
          <texture colordiffuse="PosterFront_70" background="true">$INFO[Container(9967).ListItem.Property(background)]</texture>
        </control>
        <control type="image">
          <width>100%</width>
          <height>100%</height>
          <aspectratio aligny="center">scale</aspectratio>
          <texture colordiffuse="69000000" background="true">diffuse/landscape.png</texture>
        </control>
        <control type="image">
          <top>10</top>
          <bottom>100</bottom>
          <width>250</width>
          <centerleft>50%</centerleft>
          <aspectratio aligny="center">keep</aspectratio>
          <texture colordiffuse="PosterFront" background="true">$INFO[ListItem.Icon]</texture>
        </control>
        <control type="group">
          <left>10</left>
          <right>10</right>
          <control type="textbox">
            <centerleft>50%</centerleft>
            <font>font_small_bold</font>
            <align>center</align>
            <scroll>true</scroll>
            <textcolor>PosterFront_70</textcolor>
            <height>70</height>
            <top>50%</top>
            <label>$INFO[ListItem.Label]</label>
            <width min="200" max="300">auto</width>
            <align>left</align>
            <wrapmultiline>true</wrapmultiline>
          </control>
        </control>
      </control>
      <control type="group">
        <include>View_Selectbox</include>
      </control>
    </control>
  </include>

 <include name="Home_Widget_SubMenu_Layout_thumb_fixed">
    <orientation>horizontal</orientation>
    <scrolltime tween="sine" easing="out">500</scrolltime>
    <movement>2</movement>
    <left>90</left>
    <top>600</top>
    <orientation>horizontal</orientation>
    <visible allowhiddenfocus="true">Control.HasFocus(30222)</visible>
    <include>Home_Widget_SubMenu_Items</include>
    <include content="Home_Widget_HubMenu_Layout_icon_fixed">
        <param name="id" value="30222" />
      </include>
  </include>


  <include name="Home_Widget_SubMenu_Layout_icon_fixed">
    <top>630</top>
    <height>500</height>
    <width>1950</width>
    <left>0</left>
    <preloaditems>2</preloaditems>
    <orientation>horizontal</orientation>
    <itemgap>15</itemgap>
    <focusposition>1</focusposition>
    <visible allowhiddenfocus="true">Control.HasFocus(30222)</visible>
    <itemlayout width="182" height="130" condition="!Skin.HasSetting(SubmenuLabel)">
      <include>Widget_Hub_ItemLayout</include>
    </itemlayout>
    <focusedlayout width="182" height="130" condition="!Skin.HasSetting(SubmenuLabel)">
      <include content="Widget_Hub_FocusedLayout">
        <param name="id" value="30222" />
      </include>
    </focusedlayout>
    <itemlayout width="284.44" height="160" condition="Skin.HasSetting(SubmenuLabel)">
      <include>Widget_Hub_ItemLayout</include>
    </itemlayout>
    <focusedlayout width="284.44" height="160" condition="Skin.HasSetting(SubmenuLabel)">
      <include content="Widget_Hub_FocusedLayout">
        <param name="id" value="30222" />
      </include>
    </focusedlayout>
  </include>

  <include name="Object_VideoInfo_CastList">
    <param name="height" default="455" />
    <param name="include_content" default="true" />
    <param name="include_content_nextup" default="false" />
    <param name="label2" default="$INFO[ListItem.Label2]" />
    <param name="itemwidth" default="widget_poster_width" />
    <param name="itemheight" default="widget_poster_height" />
    <param name="content2" default="" />
    <param name="content3" default="" />
    <param name="textonly" default="false" />
    <param name="include_onclick" default="false" />
    <param name="onclick" default="Close" />
    <param name="onclick2" default="" />
    <param name="onclick3" default="" />
    <param name="busyspinner" default="true" />
    <param name="pad" default="view_pad" />
    <param name="top" default="-15" />
    <param name="episodelayout" default="false" />
    <param name="aspect" default="scale" />
    <param name="fallbackimage" default="DefaultAddonImages.png" />
    <param name="showfocuslabel" default="true" />
    <param name="visible" default="true" />
    <definition>
      <control type="group">
        <visible>Integer.IsGreater(Container($PARAM[id]).NumItems,0) | Container($PARAM[id]).IsUpdating</visible>
        <left>$PARAM[pad]</left>
        <right>$PARAM[pad]</right>
        <height>$PARAM[height]</height>
        <top>$PARAM[top]</top>
        <visible>!Container.Content(musicvideos)</visible>
        <visible>$PARAM[visible]</visible>
        <control type="grouplist">
          <top>20</top>
          <height>42</height>
          <left>0</left>
          <align>left</align>
          <itemgap>12</itemgap>
          <usecontrolcoords>true</usecontrolcoords>
          <orientation>horizontal</orientation>
          <include>Object_DownArrows</include>
          <control type="label">
            <font>font_small</font>
            <textcolor>main_fg_100</textcolor>
            <aligny>center</aligny>
            <width>auto</width>
            <height>100%</height>
            <label>$PARAM[label]</label>
          </control>
          <control type="label">
            <font>font_small</font>
            <textcolor>$VAR[ColorHighlight]</textcolor>
            <aligny>center</aligny>
            <width>auto</width>
            <height>100%</height>
            <label>|</label>
            <visible>Control.HasFocus($PARAM[id])</visible>
            <visible>!String.IsEmpty(Container($PARAM[id]).ListItem.Label)</visible>
            <visible>$PARAM[showfocuslabel]</visible>
          </control>
          <control type="label">
            <font>font_small</font>
            <textcolor>main_fg_100</textcolor>
            <aligny>center</aligny>
            <width>auto</width>
            <height>100%</height>
            <label>$INFO[Container($PARAM[id]).ListItem.Label]$PARAM[focuslabel]</label>
            <visible>Control.HasFocus($PARAM[id])</visible>
            <visible>$PARAM[showfocuslabel]</visible>
          </control>
        </control>
        <!-- Similar Movies -->
        <control type="list" id="$PARAM[id]">
          <orientation>horizontal</orientation>
          <include content="Object_VideoInfo_CastList_OnClick" condition="$PARAM[include_onclick]">
            <param name="onclick" value="$PARAM[onclick]" />
            <param name="onclick2" value="$PARAM[onclick2]" />
            <param name="onclick3" value="$PARAM[onclick3]" />
          </include>
          <onup>$PARAM[onup]</onup>
          <ondown>$PARAM[ondown]</ondown>
          <include>Animation_FadeInOut</include>
          <animation effect="fade" start="100" end="0" time="0" condition="Container($PARAM[id]).IsUpdating">Conditional</animation>
          <include content="View_Actor_Layout">
            <param name="id" value="$PARAM[id]" />
            <param name="infolabel" value="$PARAM[infolabel]" />
            <param name="label2" value="$PARAM[label2]" />
            <param name="itemwidth" value="$PARAM[itemwidth]" />
            <param name="itemheight" value="$PARAM[itemheight]" />
            <param name="textonly" value="$PARAM[textonly]" />
            <param name="episodelayout" value="$PARAM[episodelayout]" />
            <param name="aspect" value="$PARAM[aspect]" />
            <param name="fallbackimage" value="$PARAM[fallbackimage]" />
          </include>
          <include condition="$PARAM[include_content_nextup]">Object_VideoInfo_CastList_Content_NextUp</include>
          <include content="Object_VideoInfo_CastList_Content" condition="$PARAM[include_content]">
            <param name="content" value="$PARAM[content]" />
          </include>
          <include content="Object_VideoInfo_CastList_Content" condition="$PARAM[include_content]">
            <param name="content" value="$PARAM[content2]" />
          </include>
          <include content="Object_VideoInfo_CastList_Content" condition="$PARAM[include_content]">
            <param name="content" value="$PARAM[content3]" />
          </include>
        </control>
        <include content="Dialog_VideoInfo_BusyIndicator" condition="$PARAM[busyspinner]">
          <param name="id" value="$PARAM[id]" />
        </include>
      </control>
    </definition>
  </include>
  <include name="Object_VideoInfo_CastList_Content_NextUp">
    <content limit="3" sortby="playcount" sortorder="ascending">videodb://inprogresstvshows/$INFO[ListItem.DBID]/-2/?tvshowid=$INFO[ListItem.DBID]</content>
  </include>
  <include name="Object_VideoInfo_CastList_Content">
    <content limit="15">$PARAM[content]</content>
  </include>
  <include name="Object_VideoInfo_CastList_OnClick">
    <onclick>$PARAM[onclick]</onclick>
    <onclick>$PARAM[onclick2]</onclick>
    <onclick>$PARAM[onclick3]</onclick>
  </include>
  <include name="Object_StarRating">
    <param name="align" default="left" />
    <param name="rating_prop" default="ListItem.Rating" />
    <param name="visible" default="true" />
    <param name="height" default="64" />
    <param name="width" default="64" />
    <definition>
      <control type="group">
        <height>$PARAM[height]</height>
        <visible>$PARAM[visible]</visible>
        <control type="grouplist">
          <top>24</top>
          <orientation>horizontal</orientation>
          <align>$PARAM[align]</align>
          <height>$PARAM[height]</height>
          <itemgap>-16</itemgap>
          <control type="image">
            <height>$PARAM[height]</height>
            <width>$PARAM[height]</width>
            <texture colordiffuse="main_fg_30">flags/star10.png</texture>
          </control>
          <control type="image">
            <height>$PARAM[height]</height>
            <width>$PARAM[height]</width>
            <texture colordiffuse="main_fg_30">flags/star10.png</texture>
          </control>
          <control type="image">
            <height>$PARAM[height]</height>
            <width>$PARAM[height]</width>
            <texture colordiffuse="main_fg_30">flags/star10.png</texture>
          </control>
          <control type="image">
            <height>$PARAM[height]</height>
            <width>$PARAM[height]</width>
            <texture colordiffuse="main_fg_30">flags/star10.png</texture>
          </control>
          <control type="image">
            <height>$PARAM[height]</height>
            <width>$PARAM[height]</width>
            <texture colordiffuse="main_fg_30">flags/star10.png</texture>
          </control>
        </control>
        <control type="grouplist">
          <top>24</top>
          <orientation>horizontal</orientation>
          <align>$PARAM[align]</align>
          <height>$PARAM[height]</height>
          <itemgap>-16</itemgap>
          <control type="image">
            <height>$PARAM[height]</height>
            <width>$PARAM[height]</width>
            <texture colordiffuse="$VAR[Object_StarRating_ColorVar]">flags/star5.png</texture>
            <animation effect="fade" start="100" end="0" condition="!Integer.IsGreater($PARAM[rating_prop],0)">Conditional</animation>
          </control>
          <control type="image">
            <height>$PARAM[height]</height>
            <width>$PARAM[height]</width>
            <texture colordiffuse="$VAR[Object_StarRating_ColorVar]">flags/star5.png</texture>
            <animation effect="fade" start="100" end="0" condition="!Integer.IsGreater($PARAM[rating_prop],2)">Conditional</animation>
          </control>
          <control type="image">
            <height>$PARAM[height]</height>
            <width>$PARAM[height]</width>
            <texture colordiffuse="$VAR[Object_StarRating_ColorVar]">flags/star5.png</texture>
            <animation effect="fade" start="100" end="0" condition="!Integer.IsGreater($PARAM[rating_prop],4)">Conditional</animation>
          </control>
          <control type="image">
            <height>$PARAM[height]</height>
            <width>$PARAM[height]</width>
            <texture colordiffuse="$VAR[Object_StarRating_ColorVar]">flags/star5.png</texture>
            <animation effect="fade" start="100" end="0" condition="!Integer.IsGreater($PARAM[rating_prop],6)">Conditional</animation>
          </control>
          <control type="image">
            <height>$PARAM[height]</height>
            <width>$PARAM[height]</width>
            <texture colordiffuse="$VAR[Object_StarRating_ColorVar]">flags/star5.png</texture>
            <animation effect="fade" start="100" end="0" condition="!Integer.IsGreater($PARAM[rating_prop],8)">Conditional</animation>
          </control>
        </control>
        <control type="grouplist">
          <top>24</top>
          <orientation>horizontal</orientation>
          <align>$PARAM[align]</align>
          <height>$PARAM[height]</height>
          <itemgap>-16</itemgap>
          <control type="image">
            <height>$PARAM[height]</height>
            <width>$PARAM[height]</width>
            <texture colordiffuse="$VAR[Object_StarRating_ColorVar]">flags/star10.png</texture>
            <animation effect="fade" start="100" end="0" condition="!Integer.IsGreater($PARAM[rating_prop],1)">Conditional</animation>
          </control>
          <control type="image">
            <height>$PARAM[height]</height>
            <width>$PARAM[height]</width>
            <texture colordiffuse="$VAR[Object_StarRating_ColorVar]">flags/star10.png</texture>
            <animation effect="fade" start="100" end="0" condition="!Integer.IsGreater($PARAM[rating_prop],3)">Conditional</animation>
          </control>
          <control type="image">
            <height>$PARAM[height]</height>
            <width>$PARAM[height]</width>
            <texture colordiffuse="$VAR[Object_StarRating_ColorVar]">flags/star10.png</texture>
            <animation effect="fade" start="100" end="0" condition="!Integer.IsGreater($PARAM[rating_prop],5)">Conditional</animation>
          </control>
          <control type="image">
            <height>$PARAM[height]</height>
            <width>$PARAM[height]</width>
            <texture colordiffuse="$VAR[Object_StarRating_ColorVar]">flags/star10.png</texture>
            <animation effect="fade" start="100" end="0" condition="!Integer.IsGreater($PARAM[rating_prop],7)">Conditional</animation>
          </control>
          <control type="image">
            <height>$PARAM[height]</height>
            <width>$PARAM[height]</width>
            <texture colordiffuse="$VAR[Object_StarRating_ColorVar]">flags/star10.png</texture>
            <animation effect="fade" start="100" end="0" condition="!Integer.IsGreater($PARAM[rating_prop],9)">Conditional</animation>
          </control>
        </control>
      </control>
    </definition>
  </include>
  <include name="Object_StarRating_Music">
    <param name="align" default="center" />
    <param name="rating_prop" default="ListItem.Rating" />
    <param name="visible" default="Window.IsVisible(DialogMusicInfo.xml) | Window.IsVisible(MyMusicNav.xml) | Window.IsVisible(musicplaylist) | Container.Content(musicvideos) | Window.IsVisible(script-globalsearch.xml)" />
    <definition>
      <control type="group">
        <height>64</height>
        <visible>$PARAM[visible]</visible>
        <control type="grouplist">
          <top>24</top>
          <orientation>horizontal</orientation>
          <align>$PARAM[align]</align>
          <height>64</height>
          <itemgap>-16</itemgap>
          <control type="image">
            <height>64</height>
            <width>64</width>
            <texture colordiffuse="main_fg_30">flags/star10.png</texture>
          </control>
          <control type="image">
            <height>64</height>
            <width>64</width>
            <texture colordiffuse="main_fg_30">flags/star10.png</texture>
          </control>
          <control type="image">
            <height>64</height>
            <width>64</width>
            <texture colordiffuse="main_fg_30">flags/star10.png</texture>
          </control>
          <control type="image">
            <height>64</height>
            <width>64</width>
            <texture colordiffuse="main_fg_30">flags/star10.png</texture>
          </control>
          <control type="image">
            <height>64</height>
            <width>64</width>
            <texture colordiffuse="main_fg_30">flags/star10.png</texture>
          </control>
        </control>
        <control type="grouplist">
          <top>24</top>
          <orientation>horizontal</orientation>
          <align>$PARAM[align]</align>
          <height>64</height>
          <itemgap>-16</itemgap>
          <control type="image">
            <height>64</height>
            <width>64</width>
            <texture colordiffuse="$VAR[Object_StarRating_ColorVar]">flags/star10.png</texture>
            <animation effect="fade" start="100" end="0" condition="!Integer.IsGreater($PARAM[rating_prop],0)">Conditional</animation>
          </control>
          <control type="image">
            <height>64</height>
            <width>64</width>
            <texture colordiffuse="$VAR[Object_StarRating_ColorVar]">flags/star10.png</texture>
            <animation effect="fade" start="100" end="0" condition="!Integer.IsGreater($PARAM[rating_prop],1)">Conditional</animation>
          </control>
          <control type="image">
            <height>64</height>
            <width>64</width>
            <texture colordiffuse="$VAR[Object_StarRating_ColorVar]">flags/star10.png</texture>
            <animation effect="fade" start="100" end="0" condition="!Integer.IsGreater($PARAM[rating_prop],2)">Conditional</animation>
          </control>
          <control type="image">
            <height>64</height>
            <width>64</width>
            <texture colordiffuse="$VAR[Object_StarRating_ColorVar]">flags/star10.png</texture>
            <animation effect="fade" start="100" end="0" condition="!Integer.IsGreater($PARAM[rating_prop],3)">Conditional</animation>
          </control>
          <control type="image">
            <height>64</height>
            <width>64</width>
            <texture colordiffuse="$VAR[Object_StarRating_ColorVar]">flags/star10.png</texture>
            <animation effect="fade" start="100" end="0" condition="!Integer.IsGreater($PARAM[rating_prop],4)">Conditional</animation>
          </control>
        </control>
      </control>
    </definition>
  </include>
  <variable name="Object_StarRating_ColorVar">
    <value condition="Skin.HasSetting(DisableNetflixView) + Skin.HasSetting(MonochromeFlags)">main_fg_100</value>
    <value condition="Skin.HasSetting(DisableNetflixView) + !Skin.HasSetting(MonochromeFlags)">Highlight2</value>
    <value condition="!Skin.HasSetting(DisableNetflixView) + Skin.HasSetting(MonochromeFlags)">main_fg_100</value>
    <value condition="!Skin.HasSetting(DisableNetflixView) + !Skin.HasSetting(MonochromeFlags)">red</value>
  </variable>
  <include name="Object_PVR_Info">
    <param name="artwork" default="Window(Home).Property(SkinHelper.ListItem.Art.Fanart)" />
    <param name="fallback" default="ListItem.Icon" />
    <definition>
      <control type="group">
        <left>10</left>
        <control type="group">
          <visible>Player.HasVideo</visible>
          <top>-15</top>
          <right>-90</right>
          <width>1180</width>
          <height>550</height>
          <animation effect="slide" start="0" end="0,-80" time="0" condition="Integer.IsEqual(VideoPlayer.VideoAspect,2.4) | Integer.IsEqual(VideoPlayer.VideoAspect,2.35) | Integer.IsEqual(VideoPlayer.VideoAspect,2.55) | Integer.IsEqual(VideoPlayer.VideoAspect,2.76)" reversible="true">Conditional</animation>
          <control type="videowindow"></control>
          <control type="image">
            <texture colordiffuse="ff000000" border="20">overlay/netflix_corner.png</texture>
          </control>
        </control>
        <control type="group">
          <visible>!Player.HasVideo</visible>
          <animation effect="fade" time="250">VisibleChange</animation>
          <control type="image">
            <top>100</top>
            <right>150</right>
            <width>600</width>
            <height>400</height>
            <aspectratio scalediffuse="false" aligny="center">keep</aspectratio>
            <texture background="true">$INFO[$PARAM[fallback]]</texture>
            <visible>String.IsEmpty(Control.GetLabel(33000))</visible>
          </control>
        </control>
        <control type="group">
          <visible>!Player.HasVideo</visible>
          <top>10</top>
          <right>-70</right>
          <width>1280</width>
          <height>720</height>
          <animation effect="fade" time="250">VisibleChange</animation>
          <control type="image" id="33000">
            <top>-35</top>
            <right>20</right>
            <width>1180</width>
            <height>720</height>
            <aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
            <texture background="true" diffuse="Right Corner.png">$INFO[$PARAM[artwork]]</texture>
          </control>
        </control>
        <control type="grouplist">
          <visible>[[!String.IsEmpty($PARAM[fallback]) + [String.IsEmpty(Control.GetLabel(9123)) | String.StartsWith(Control.GetLabel(9123),Default)]] | [!String.IsEmpty(Control.GetLabel(9123)) + !String.StartsWith(Control.GetLabel(9123),Default)]]</visible>
          <height>550</height>
          <top>40</top>
          <left>40</left>
          <right>865</right>
          <orientation>vertical</orientation>
          <usecontrolcoords>true</usecontrolcoords>
          <itemgap>0</itemgap>
          <include>Object_PVR_Info_Content</include>
        </control>
        <control type="grouplist">
          <visible>![[!String.IsEmpty($PARAM[fallback]) + [String.IsEmpty(Control.GetLabel(9123)) | String.StartsWith(Control.GetLabel(9123),Default)]] | [!String.IsEmpty(Control.GetLabel(9123)) + !String.StartsWith(Control.GetLabel(9123),Default)]]</visible>
          <height>550</height>
          <top>40</top>
          <left>40</left>
          <right>view_pad</right>
          <orientation>vertical</orientation>
          <usecontrolcoords>true</usecontrolcoords>
          <itemgap>0</itemgap>
          <include>Object_PVR_Info_Content</include>
        </control>
      </control>
    </definition>
  </include>
  <include name="Object_PVR_Info_Content">
    <control type="group">
      <height>80</height>
      <control type="image" id="55444">
        <top>5</top>
        <bottom>20</bottom>
        <height>140</height>
        <width>450</width>
        <texture>$VAR[PVRInfoThumb]</texture>
      </control>
      <control type="label">
        <visible>String.IsEmpty(Control.GetLabel(55444))</visible>
        <label>$INFO[ListItem.EpgEventTitle]$INFO[ListItem.EpisodeName, - ,]</label>
        <height>80</height>
        <top>20</top>
        <aligny>top</aligny>
        <textcolor>$VAR[ColorHighlight]</textcolor>
        <font>netflix_heading</font>
        <width min="200" max="900">auto</width>
        <scroll>true</scroll>
        <visible>!String.IsEmpty(ListItem.EpgEventTitle)</visible>
      </control>
      <control type="label">
        <label>$INFO[ListItem.Label]</label>
        <height>80</height>
        <top>20</top>
        <aligny>top</aligny>
        <textcolor>main_fg_100</textcolor>
        <font>font_showcase_title</font>
        <visible>String.IsEmpty(ListItem.EpgEventTitle) + String.IsEmpty(Control.GetLabel(55444))</visible>
        <bottom>40</bottom>
      </control>
    </control>
    <control type="label">
      <top>70</top>
      <label>[B]$INFO[ListItem.ChannelName][/B] | [COLOR=$VAR[ColorHighlight2]]$LOCALIZE[19126]: [/COLOR]$INFO[ListItem.StartTime] | [COLOR=$VAR[ColorHighlight2]]$LOCALIZE[19127]: [/COLOR] $INFO[ListItem.EndTime]</label>
      <height>40</height>
      <aligny>top</aligny>
      <textcolor>main_fg_100</textcolor>
      <font>font_small</font>
      <visible>!String.IsEmpty(ListItem.Title) | !String.IsEmpty(ListItem.ChannelNumber)</visible>
    </control>
    <control type="textbox">
      <top>15</top>
      <width>900</width>
      <height min="100" max="220">auto</height>
      <label fallback="19055">[COLOR=$VAR[ColorHighlight2]]Plot: [/COLOR]$VAR[Label_Plot]</label>
      <aligny>bottom</aligny>
      <textcolor>main_fg_70</textcolor>
      <font>font_plotbox</font>
    </control>
    <control type="grouplist">
      <top>15</top>
      <height>40</height>
      <include content="Object_Ratings_Content">
        <param name="directory" value="color" />
        <param name="align" value="left" />
        <param name="width" value="1200" />
        <param name="rottentomatoes" value="true" />
        <param name="imdbvotes" value="false" />
        <param name="usermeter" value="false" />
        <param name="imdb" value="true" />
        <param name="tmdb" value="true" />
        <param name="metacritic" value="true" />
        <param name="oscars" value="$PARAM[oscars]" />
        <param name="top250" value="$PARAM[top250]" />
        <param name="plot" value="false" />
      </include>
    </control>
  </include>
  <include name="Object_UpDownInfoArrows">
    <param name="id" default="9000" />
    <param name="hasprevious" default="true" />
    <param name="hasnext" default="true" />
    <definition>
      <control type="grouplist">
        <left>20</left>
        <right>20</right>
        <height>view_pad</height>
        <align>center</align>
        <orientation>horizontal</orientation>
        <itemgap>10</itemgap>
        <visible>$PARAM[hasprevious]</visible>
        <visible>Container($PARAM[id]).HasPrevious</visible>
        <include>Animation_FadeIn</include>
        <include>Animation_FadeOut</include>
        <usecontrolcoords>true</usecontrolcoords>
        <control type="group">
          <width>22</width>
          <bottom>10</bottom>
          <control type="image">
            <bottom>17</bottom>
            <width>16</width>
            <height>16</height>
            <texture colordiffuse="panel_fg_30" flipy="true">common/arrow-small.png</texture>
          </control>
          <control type="image">
            <bottom>7</bottom>
            <width>16</width>
            <height>16</height>
            <texture colordiffuse="panel_fg_30" flipy="true">common/arrow-small.png</texture>
          </control>
        </control>
      </control>
      <control type="grouplist">
        <left>20</left>
        <right>20</right>
        <bottom>0</bottom>
        <height>view_pad</height>
        <align>center</align>
        <orientation>horizontal</orientation>
        <itemgap>10</itemgap>
        <visible>$PARAM[hasnext]</visible>
        <visible>Container($PARAM[id]).HasNext</visible>
        <include>Animation_FadeIn</include>
        <include>Animation_FadeOut</include>
        <usecontrolcoords>true</usecontrolcoords>
        <control type="group">
          <width>22</width>
          <bottom>10</bottom>
          <control type="image">
            <bottom>17</bottom>
            <width>16</width>
            <height>16</height>
            <texture colordiffuse="panel_fg_30" flipy="false">common/arrow-small.png</texture>
          </control>
          <control type="image">
            <bottom>7</bottom>
            <width>16</width>
            <height>16</height>
            <texture colordiffuse="panel_fg_30" flipy="false">common/arrow-small.png</texture>
          </control>
        </control>
      </control>
    </definition>
  </include>
  <include name="Object_DownArrows">
    <control type="group">
      <width>22</width>
      <control type="image">
        <bottom>17</bottom>
        <width>16</width>
        <height>16</height>
        <texture colordiffuse="$VAR[ColorHighlight]">common/arrow-small.png</texture>
      </control>
      <control type="image">
        <bottom>7</bottom>
        <width>16</width>
        <height>16</height>
        <texture colordiffuse="$VAR[ColorHighlight]">common/arrow-small.png</texture>
      </control>
    </control>
  </include>
  <include name="Object_BigPoster">
    <param name="container" default="" />
    <param name="visible" default="!Container.IsUpdating" />
    <param name="variable" default="$VAR[Image_Poster]" />
    <param name="height" default="poster_height" />
    <param name="width" default="poster_width" />
    <param name="discart" default="false" />
    <param name="aspect" default="keep" />
    <definition>
      <control type="group">
        <left>0</left>
        <top>0</top>
        <width>$PARAM[width]</width>
        <height>$PARAM[height]</height>
        <visible>$PARAM[visible]</visible>
        <control type="group">
          <visible>!Window.IsVisible(MyPics.xml)</visible>
          <control type="group">
            <control type="image">
              <aspectratio aligny="center" scalediffuse="false">scale</aspectratio>
              <texture background="true" fallback="DefaultAddonImages.png" diffuse="diffuse/bigposter.png">$PARAM[variable]</texture>
              <visible>[!$PARAM[container]ListItem.IsParentFolder + !String.StartsWith($PARAM[container]ListItem.Icon,Default) + [!String.IsEmpty($PARAM[container]ListItem.Art(tvshow.poster)) | !String.IsEmpty($PARAM[container]ListItem.Art(poster)) | !String.IsEmpty($PARAM[container]ListItem.Art(season.poster))]]</visible>
            </control>
            <control type="group">
              <visible>[[!$PARAM[container]ListItem.IsParentFolder + !String.StartsWith($PARAM[container]ListItem.Icon,Default)] + ![!String.IsEmpty($PARAM[container]ListItem.Art(tvshow.poster)) | !String.IsEmpty($PARAM[container]ListItem.Art(poster)) | !String.IsEmpty($PARAM[container]ListItem.Art(season.poster))]]</visible>
              <control type="image">
                <aspectratio aligny="center" scalediffuse="false">$PARAM[aspect]</aspectratio>
                <texture background="true" fallback="DefaultAddonImages.png" diffuse="diffuse/bigposter.png">$PARAM[variable]</texture>
              </control>
            </control>
          </control>
          <control type="group">
            <visible>$PARAM[container]ListItem.IsParentFolder | String.StartsWith($PARAM[container]ListItem.Icon,Default)</visible>
            <control type="image">
              <aspectratio aligny="center" scalediffuse="false">center</aspectratio>
              <texture background="true" colordiffuse="PosterFront" fallback="DefaultAddonNone.png" diffuse="diffuse/bigposter.png">$INFO[$PARAM[container]ListItem.Icon]</texture>
              <visible>[!Container.Content(genres) + !Container.Content(studios) + !Container.Content(countries) + !Container.Content(years) + !Container.Content(directors)] | ListItem.IsParentFolder</visible>
            </control>
            <control type="image">
              <bordersize>80</bordersize>
              <aspectratio aligny="center" scalediffuse="false">$PARAM[aspect]</aspectratio>
              <animation effect="fade" condition="true" end="35">Conditional</animation>
              <texture background="true" colordiffuse="PosterFront" fallback="DefaultFolder.png" diffuse="diffuse/bigposter.png">$INFO[$PARAM[container]ListItem.Label,resource://resource.images.moviecountryicons.maps/,.png]</texture>
              <visible>Container.Content(countries) + !ListItem.IsParentFolder</visible>
            </control>
            <control type="textbox">
              <left>30</left>
              <right>30</right>
              <top>30</top>
              <bottom>30</bottom>
              <align>center</align>
              <aligny>center</aligny>
              <label>$INFO[$PARAM[container]ListItem.Label]</label>
              <textcolor>PosterFront</textcolor>
              <font>font_bigposter_text</font>
              <visible>[Container.Content(years) | Container.Content(directors) | Container.Content(countries)] + !ListItem.IsParentFolder</visible>
            </control>
            <control type="image">
              <bordersize>80</bordersize>
              <aspectratio aligny="center" scalediffuse="false">$PARAM[aspect]</aspectratio>
              <texture background="true" colordiffuse="PosterFront" fallback="DefaultFolder.png" diffuse="diffuse/bigposter.png">$VAR[Image_GenreIcons_Path]$INFO[$PARAM[container]ListItem.Label,,.png]</texture>
              <visible>Container.Content(genres) + !ListItem.IsParentFolder</visible>
            </control>
            <control type="image">
              <bordersize>80</bordersize>
              <aspectratio aligny="center" scalediffuse="false">$PARAM[aspect]</aspectratio>
              <texture background="true" colordiffuse="PosterFront" fallback="DefaultFolder.png" diffuse="diffuse/bigposter.png">$INFO[$PARAM[container]ListItem.Label,resource://resource.images.studios.white/,.png]</texture>
              <visible>Container.Content(studios) + !ListItem.IsParentFolder</visible>
            </control>
          </control>
        </control>
        <control type="group">
          <visible>Window.IsVisible(MyPics.xml)</visible>
          <control type="group">
            <control type="image">
              <aspectratio aligny="center" scalediffuse="false">$PARAM[aspect]</aspectratio>
              <texture background="true" fallback="DefaultAddonImages.png" diffuse="diffuse/bigposter.png">$INFO[ListItem.FileNameAndPath]</texture>
            </control>
          </control>
        </control>
      </control>
    </definition>
  </include>

  <!-- mid sized poster for season-->
  <include name="Object_MidPoster">
    <param name="container" default="" />
    <param name="visible" default="!Container.IsUpdating" />
    <param name="variable" default="$VAR[Image_Poster]" />
    <param name="height" default="poster_height" />
    <param name="width" default="poster_width" />
    <param name="discart" default="false" />
    <param name="aspect" default="keep" />
    <definition>
      <control type="group">
        <left>0</left>
        <top>0</top>
        <width>375</width>
        <height>551</height>
        <visible>$PARAM[visible]</visible>
        <control type="group">
          <visible>!Window.IsVisible(MyPics.xml)</visible>
          <control type="group">
            <control type="image">
              <aspectratio aligny="center" scalediffuse="false">scale</aspectratio>
              <texture background="true" fallback="DefaultAddonImages.png" diffuse="diffuse/bigposter.png">$PARAM[variable]</texture>
              <visible>[!$PARAM[container]ListItem.IsParentFolder + !String.StartsWith($PARAM[container]ListItem.Icon,Default) + [!String.IsEmpty($PARAM[container]ListItem.Art(tvshow.poster)) | !String.IsEmpty($PARAM[container]ListItem.Art(poster)) | !String.IsEmpty($PARAM[container]ListItem.Art(season.poster))]]</visible>
            </control>
            <control type="group">
              <visible>[[!$PARAM[container]ListItem.IsParentFolder + !String.StartsWith($PARAM[container]ListItem.Icon,Default)] + ![!String.IsEmpty($PARAM[container]ListItem.Art(tvshow.poster)) | !String.IsEmpty($PARAM[container]ListItem.Art(poster)) | !String.IsEmpty($PARAM[container]ListItem.Art(season.poster))]]</visible>
              <control type="image">
                <aspectratio aligny="center" scalediffuse="false">$PARAM[aspect]</aspectratio>
                <texture background="true" fallback="DefaultAddonImages.png" diffuse="diffuse/bigposter.png">$PARAM[variable]</texture>
              </control>
            </control>
          </control>
          <control type="group">
            <visible>$PARAM[container]ListItem.IsParentFolder | String.StartsWith($PARAM[container]ListItem.Icon,Default)</visible>
            <control type="image">
              <aspectratio aligny="center" scalediffuse="false">center</aspectratio>
              <texture background="true" colordiffuse="PosterFront" fallback="DefaultAddonNone.png" diffuse="diffuse/bigposter.png">$INFO[$PARAM[container]ListItem.Icon]</texture>
              <visible>[!Container.Content(genres) + !Container.Content(studios) + !Container.Content(countries) + !Container.Content(years) + !Container.Content(directors)] | ListItem.IsParentFolder</visible>
            </control>
            <control type="image">
              <bordersize>80</bordersize>
              <aspectratio aligny="center" scalediffuse="false">$PARAM[aspect]</aspectratio>
              <animation effect="fade" condition="true" end="35">Conditional</animation>
              <texture background="true" colordiffuse="PosterFront" fallback="DefaultFolder.png" diffuse="diffuse/bigposter.png">$INFO[$PARAM[container]ListItem.Label,resource://resource.images.moviecountryicons.maps/,.png]</texture>
              <visible>Container.Content(countries) + !ListItem.IsParentFolder</visible>
            </control>
            <control type="textbox">
              <left>30</left>
              <right>30</right>
              <top>30</top>
              <bottom>30</bottom>
              <align>center</align>
              <aligny>center</aligny>
              <label>$INFO[$PARAM[container]ListItem.Label]</label>
              <textcolor>PosterFront</textcolor>
              <font>font_bigposter_text</font>
              <visible>[Container.Content(years) | Container.Content(directors) | Container.Content(countries)] + !ListItem.IsParentFolder</visible>
            </control>
            <control type="image">
              <bordersize>80</bordersize>
              <aspectratio aligny="center" scalediffuse="false">$PARAM[aspect]</aspectratio>
              <texture background="true" colordiffuse="PosterFront" fallback="DefaultFolder.png" diffuse="diffuse/bigposter.png">$VAR[Image_GenreIcons_Path]$INFO[$PARAM[container]ListItem.Label,,.png]</texture>
              <visible>Container.Content(genres) + !ListItem.IsParentFolder</visible>
            </control>
            <control type="image">
              <bordersize>80</bordersize>
              <aspectratio aligny="center" scalediffuse="false">$PARAM[aspect]</aspectratio>
              <texture background="true" colordiffuse="PosterFront" fallback="DefaultFolder.png" diffuse="diffuse/bigposter.png">$INFO[$PARAM[container]ListItem.Label,resource://resource.images.studios.white/,.png]</texture>
              <visible>Container.Content(studios) + !ListItem.IsParentFolder</visible>
            </control>
          </control>
        </control>
        <control type="group">
          <visible>Window.IsVisible(MyPics.xml)</visible>
          <control type="group">
            <control type="image">
              <aspectratio aligny="center" scalediffuse="false">$PARAM[aspect]</aspectratio>
              <texture background="true" fallback="DefaultAddonImages.png" diffuse="diffuse/bigposter.png">$INFO[ListItem.FileNameAndPath]</texture>
            </control>
          </control>
        </control>
      </control>
    </definition>
  </include>

  <include name="Object_Flags">
    <param name="container" default="" />
    <param name="source" default="ListItem." />
    <param name="directory" default="color" />
    <param name="align" default="right" />
    <param name="colordiffuse" default="panel_fg_100" />
    <param name="ratings" default="false" />
    <param name="fps" default="false" />
    <definition>
      <include content="Object_Flags_Content" condition="Skin.HasSetting(MonochromeFlags)">
        <param name="container" value="$PARAM[container]" />
        <param name="source" value="$PARAM[source]" />
        <param name="directory" value="monochrome" />
        <param name="align" value="$PARAM[align]" />
        <param name="colordiffuse" value="main_fg_100" />
        <param name="ratings" value="$PARAM[ratings]" />
        <param name="fps" value="$PARAM[fps]" />
      </include>
      <include content="Object_Flags_Content" condition="!Skin.HasSetting(MonochromeFlags)">
        <param name="container" value="$PARAM[container]" />
        <param name="source" value="$PARAM[source]" />
        <param name="directory" value="color" />
        <param name="align" value="$PARAM[align]" />
        <param name="colordiffuse" value="panel_fg_100" />
        <param name="ratings" value="$PARAM[ratings]" />
        <param name="fps" value="$PARAM[fps]" />
      </include>
    </definition>
  </include>
  <include name="Object_Flags_Content">
    <param name="container" default="" />
    <param name="source" default="ListItem." />
    <param name="directory" default="color" />
    <param name="align" default="right" />
    <param name="colordiffuse" default="panel_fg_100" />
    <param name="ratings" default="false" />
    <param name="fps" default="false" />
    <definition>
      <control type="grouplist">
        <visible>!Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml)</visible>
        <visible>!Window.IsVisible(script-script.extendedinfo-DialogInfo.xml)</visible>
        <visible>!$PARAM[container]ListItem.IsParentFolder</visible>
        <animation effect="fade" start="0" end="100" delay="30" time="1" reversible="false">Visible</animation>
        <right>30</right>
        <left>-30</left>
        <height>120</height>
        <orientation>horizontal</orientation>
        <align>$PARAM[align]</align>
        <itemgap>0</itemgap>
        <centertop>50%</centertop>
        <usecontrolcoords>true</usecontrolcoords>
        <control type="image">
          <width>88</width>
          <height>48</height>
          <centertop>50%</centertop>
          <texture colordiffuse="$PARAM[colordiffuse]" fallback="flags/fallback.png">$INFO[$PARAM[container]$PARAM[source]VideoResolution,flags/$PARAM[directory]/resolution/,.png]</texture>
          <aspectratio align="right">keep</aspectratio>
          <visible>!String.IsEmpty($PARAM[container]$PARAM[source]VideoResolution) + !String.StartsWith($PARAM[container]$PARAM[source]Path,videodb://movies/sets)</visible>
        </control>
        <control type="group">
          <width>88</width>
          <height>48</height>
          <centertop>50%</centertop>
          <visible>!String.IsEmpty(Player.Process(VideoFPS)) + Integer.IsGreater(Player.Process(VideoFPS),0)</visible>
          <visible>$PARAM[fps]</visible>
          <control type="image">
            <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/other/fps.png</texture>
            <aspectratio align="right">keep</aspectratio>
          </control>
          <control type="label">
            <left>21</left>
            <width>64</width>
            <height>24</height>
            <bottom>2</bottom>
            <textcolor>ff8f9799</textcolor>
            <font>font_fps</font>
            <label>$INFO[Player.Process(VideoFPS)]</label>
            <align>center</align>
            <aligny>center</aligny>
          </control>
        </control>
        <control type="image">
          <width>88</width>
          <height>48</height>
          <centertop>50%</centertop>
          <texture colordiffuse="$PARAM[colordiffuse]" fallback="flags/fallback.png">$INFO[$PARAM[container]$PARAM[source]VideoCodec,flags/$PARAM[directory]/source/,.png]</texture>
          <aspectratio align="right">keep</aspectratio>
          <visible>!String.IsEmpty($PARAM[container]$PARAM[source]VideoCodec)</visible>
        </control>
        <control type="image">
          <width>88</width>
          <height>48</height>
          <centertop>50%</centertop>
          <texture colordiffuse="$PARAM[colordiffuse]" fallback="flags/fallback.png">$INFO[$PARAM[container]$PARAM[source]VideoAspect,flags/$PARAM[directory]/aspectratio/,.png]</texture>
          <aspectratio align="right">keep</aspectratio>
          <visible>!String.IsEmpty($PARAM[container]$PARAM[source]VideoAspect)</visible>
        </control>
        <control type="image">
          <width>88</width>
          <height>48</height>
          <centertop>50%</centertop>
          <texture colordiffuse="$PARAM[colordiffuse]" fallback="flags/fallback.png">$INFO[$PARAM[container]$PARAM[source]AudioCodec,flags/$PARAM[directory]/audio/,.png]</texture>
          <aspectratio align="right">keep</aspectratio>
          <visible>!String.IsEmpty($PARAM[container]$PARAM[source]AudioCodec)</visible>
        </control>
        <control type="image">
          <width>88</width>
          <height>48</height>
          <centertop>50%</centertop>
          <texture colordiffuse="$PARAM[colordiffuse]" fallback="flags/fallback.png">$INFO[$PARAM[container]$PARAM[source]AudioChannels,flags/$PARAM[directory]/channels/,.png]</texture>
          <aspectratio align="right">keep</aspectratio>
          <visible>!String.IsEmpty($PARAM[container]$PARAM[source]AudioChannels)</visible>
        </control>
        <control type="image">
          <width>88</width>
          <height>48</height>
          <centertop>50%</centertop>
          <texture colordiffuse="$PARAM[colordiffuse]">$INFO[$PARAM[container]$PARAM[source]FileExtension,flags/$PARAM[directory]/audio/,.png]</texture>
          <aspectratio align="right">keep</aspectratio>
          <visible>Container.Content(songs)</visible>
        </control>
        <control type="image">
          <width>88</width>
          <aspectratio align="right">keep</aspectratio>
          <centertop>50%</centertop>
          <height>64</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/other/4K.png</texture>
          <visible>[String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,2160p) | String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,UHD) | String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,UltraHD) | String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,Ultra-HD) | String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,4K)]</visible>
        </control>
        <control type="image">
          <width>88</width>
          <aspectratio align="right">keep</aspectratio>
          <centertop>50%</centertop>
          <height>64</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/other/HDR.png</texture>
          <visible>String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,HDR)</visible>
        </control>
        <control type="image">
          <width>88</width>
          <aspectratio align="right">keep</aspectratio>
          <centertop>50%</centertop>
          <height>48</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/audio/atmos.png</texture>
          <visible>String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,atmos)</visible>
        </control>
        <control type="image">
          <width>88</width>
          <aspectratio align="right">keep</aspectratio>
          <centertop>50%</centertop>
          <height>48</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/audio/dtsx.png</texture>
          <visible>String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,dtsx) | String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,dts-x) | String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,dts:x)</visible>
        </control>
        <control type="image">
          <width>88</width>
          <aspectratio align="right">keep</aspectratio>
          <centertop>50%</centertop>
          <height>64</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/other/bluray.png</texture>
          <visible>[String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,blu-ray) | String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,bluray) | String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,bdrip) | String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,bd25) | String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,bd50)]</visible>
          <visible>![String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,2160p) | String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,UHD) | String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,UltraHD) | String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,Ultra-HD) | String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,4K)]</visible>
        </control>
        <control type="image">
          <width>88</width>
          <aspectratio align="right">keep</aspectratio>
          <centertop>50%</centertop>
          <height>64</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/other/dvd.png</texture>
          <visible>String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,dvd)</visible>
        </control>
        <control type="image">
          <width>88</width>
          <aspectratio align="right">keep</aspectratio>
          <centertop>50%</centertop>
          <height>64</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/other/hdtv.png</texture>
          <visible>String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,hdtv) | String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,pdtv) | String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,dsr)</visible>
        </control>
        <control type="image">
          <width>88</width>
          <aspectratio align="right">keep</aspectratio>
          <centertop>50%</centertop>
          <height>64</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/other/web-dl.png</texture>
          <visible>String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,web-dl) | String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,webdl) | String.Contains($PARAM[container]$PARAM[source]FileNameAndPath,WEBRip)</visible>
        </control>
        <control type="image">
          <width>88</width>
          <aspectratio align="right">keep</aspectratio>
          <centertop>50%</centertop>
          <height>64</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/other/3D.png</texture>
          <visible>$PARAM[container]$PARAM[source]IsStereoscopic</visible>
        </control>
        <control type="group">
          <width>1000</width>
          <left>28</left>
          <height>32</height>
          <centertop>50%</centertop>
          <visible>$PARAM[ratings]</visible>
          <control type="group">
            <include content="Object_Ratings" condition="Window.IsVisible(MyVideoNav.xml) | Window.IsVisible(Home.xml)">
              <param name="directory" value="color" />
              <param name="align" value="left" />
              <param name="width" value="1000" />
              <param name="rottentomatoes" value="false" />
              <param name="imdbvotes" value="false" />
              <param name="usermeter" value="false" />
              <param name="imdb" value="true" />
              <param name="tmdb" value="false" />
              <param name="metacritic" value="false" />
              <param name="oscars" value="true" />
              <param name="top250" value="false" />
            </include>
          </control>
        </control>
      </control>
    </definition>
  </include>
  <include name="Object_Ratings">
    <param name="directory" default="color" />
    <param name="align" default="right" />
    <param name="width" default="900" />
    <param name="rottentomatoes" default="true" />
    <param name="imdbvotes" default="true" />
    <param name="usermeter" default="true" />
    <param name="imdb" default="true" />
    <param name="tmdb" default="true" />
    <param name="tvdb" default="true" />
    <param name="metacritic" default="true" />
    <param name="oscars" default="true" />
    <param name="top250" default="true" />
    <param name="studio" default="false" />
    <definition>
      <include content="Object_Ratings_Content">
        <param name="directory" value="$PARAM[directory]" />
        <param name="colordiffuse" value="main_fg_100" />
        <param name="align" value="$PARAM[align]" />
        <param name="width" value="$PARAM[width]" />
        <param name="rottentomatoes" value="$PARAM[rottentomatoes]" />
        <param name="imdbvotes" value="$PARAM[imdbvotes]" />
        <param name="usermeter" value="$PARAM[usermeter]" />
        <param name="imdb" value="$PARAM[imdb]" />
        <param name="tmdb" value="$PARAM[tmdb]" />
        <param name="tvdb" value="$PARAM[tvdb]" />
        <param name="metacritic" value="$PARAM[metacritic]" />
        <param name="oscars" value="$PARAM[oscars]" />
        <param name="top250" value="$PARAM[top250]" />
        <param name="studio" value="$PARAM[studio]" />
      </include>
      <!--
      <include content="Object_Ratings_Content">
        <param name="directory" value="$PARAM[directory]" />
        <param name="colordiffuse" value="panel_fg_100" />
        <param name="align" value="$PARAM[align]" />
        <param name="width" value="$PARAM[width]" />
        <param name="rottentomatoes" value="$PARAM[rottentomatoes]" />
        <param name="imdbvotes" value="$PARAM[imdbvotes]" />
        <param name="usermeter" value="$PARAM[usermeter]" />
        <param name="imdb" value="$PARAM[imdb]" />
        <param name="tmdb" value="$PARAM[tmdb]" />
        <param name="tvdb" value="$PARAM[tvdb]" />
        <param name="metacritic" value="$PARAM[metacritic]" />
        <param name="oscars" value="$PARAM[oscars]" />
        <param name="top250" value="$PARAM[top250]" />
      </include>
-->
    </definition>
  </include>
  <include name="Object_Ratings_Content">
    <param name="directory" default="monochrome" />
    <param name="align" default="right" />
    <param name="width" default="900" />
    <param name="rottentomatoes" default="true" />
    <param name="imdbvotes" default="true" />
    <param name="usermeter" default="true" />
    <param name="imdb" default="true" />
    <param name="tmdb" default="true" />
    <param name="tvdb" default="true" />
    <param name="metacritic" default="true" />
    <param name="oscars" default="true" />
    <param name="top250" default="true" />
    <param name="plot" default="false" />
    <param name="studio" default="false" />
    <definition>
      <control type="grouplist">
        <width>$PARAM[width]</width>
        <right>0</right>
        <align>$PARAM[align]</align>
        <orientation>horizontal</orientation>
        <itemgap>8</itemgap>
        <usecontrolcoords>true</usecontrolcoords>
        <height>184</height>
        <control type="image">
          <top>10</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/oscar.png</texture>
          <visible>String.Contains(Window(Home).Property(SkinHelper.ListItem.Awards),Oscar) + String.Contains(Window(Home).Property(SkinHelper.ListItem.Awards),Won)</visible>
          <visible>$PARAM[oscars]</visible>
          <visible>!Skin.HasSetting(Ratings.Oscars)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$VAR[Label_Oscars,, ]</label>
          <visible>String.Contains(Window(Home).Property(SkinHelper.ListItem.Awards),Oscar) + String.Contains(Window(Home).Property(SkinHelper.ListItem.Awards),Won)</visible>
          <visible>$PARAM[oscars]</visible>
          <visible>!Skin.HasSetting(Ratings.Oscars)</visible>
        </control>
        <control type="image">
          <top>10</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/metacritic.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.MetaCritic.Rating))</visible>
          <visible>$PARAM[metacritic]</visible>
          <visible>!Skin.HasSetting(Ratings.Metacritic)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Window(Home).Property(SkinHelper.ListItem.MetaCritic.Rating), ,% ]</label>
          <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.MetaCritic.Rating))</visible>
          <visible>$PARAM[metacritic]</visible>
          <visible>!Skin.HasSetting(Ratings.Metacritic)</visible>
        </control>
        <control type="image">
          <top>10</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/tmdb.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Rating.TMDB))</visible>
          <visible>$PARAM[tmdb]</visible>
          <visible>!Skin.HasSetting(Ratings.TheMovieDB)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Window(Home).Property(SkinHelper.ListItem.Rating.TMDB), , ]</label>
          <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Rating.TMDB))</visible>
          <visible>$PARAM[tmdb]</visible>
          <visible>!Skin.HasSetting(Ratings.TheMovieDB)</visible>
        </control>
        <control type="image">
          <top>10</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/tvdb.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Rating.TVDB))</visible>
          <visible>!String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating.TVDB),0.0)</visible>
          <visible>$PARAM[tvdb]</visible>
          <visible>!Skin.HasSetting(Ratings.TVDB)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Window(Home).Property(SkinHelper.ListItem.Rating.TVDB), , ]</label>
          <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Rating.TVDB))</visible>
          <visible>!String.IsEqual(Window(Home).Property(SkinHelper.ListItem.Rating.TVDB),0.0)</visible>
          <visible>$PARAM[tvdb]</visible>
          <visible>!Skin.HasSetting(Ratings.TVDB)</visible>
        </control>
        <control type="image">
          <top>10</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/popcorn.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.UserMeter))</visible>
          <visible>Integer.IsGreater(Window(home).Property(SkinHelper.ListItem.RottenTomatoes.UserMeter),59)</visible>
          <visible>$PARAM[usermeter]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="image">
          <top>10</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/spilt.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.UserMeter))</visible>
          <visible>!Integer.IsGreater(Window(home).Property(SkinHelper.ListItem.RottenTomatoes.UserMeter),59)</visible>
          <visible>$PARAM[usermeter]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.UserMeter), ,% ]</label>
          <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.UserMeter))</visible>
          <visible>$PARAM[usermeter]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="image">
          <top>10</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/rtrotten.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Rating))</visible>
          <visible>Integer.IsGreater(Window(home).Property(SkinHelper.ListItem.RottenTomatoes.Rating),0) + !Integer.IsGreater(Window(home).Property(SkinHelper.ListItem.RottenTomatoes.Rating),59)</visible>
          <visible>$PARAM[rottentomatoes]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="image">
          <top>10</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/rtfresh.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Rating))</visible>
          <visible>Integer.IsGreater(Window(home).Property(SkinHelper.ListItem.RottenTomatoes.Rating),59) + !Integer.IsGreater(Window(home).Property(SkinHelper.ListItem.RottenTomatoes.Rating),74)</visible>
          <visible>$PARAM[rottentomatoes]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="image" description="remove the rtfresh texture line for certified logo">
          <top>10</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/rtfresh.png</texture>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/certified.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Rating))</visible>
          <visible>Integer.IsGreater(Window(home).Property(SkinHelper.ListItem.RottenTomatoes.Rating),74)</visible>
          <visible>$PARAM[rottentomatoes]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Rating), ,% ]</label>
          <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.RottenTomatoes.Rating))</visible>
          <visible>$PARAM[rottentomatoes]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="image">
          <top>11</top>
          <width>40</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/imdbicon.png</texture>
          <visible>!String.IsEmpty(ListItem.RatingAndVotes) | !String.IsEmpty(Window(home).Property(SkinHelper.ListItem.Rating.IMDB))</visible>
          <visible>$PARAM[imdb]</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Window(home).Property(SkinHelper.ListItem.Rating.IMDB), ,]$INFO[Window(home).Property(SkinHelper.ListItem.Votes.IMDB), (, $LOCALIZE[205])]</label>
          <visible>!String.IsEmpty(Window(home).Property(SkinHelper.ListItem.Rating.IMDB))</visible>
          <visible>$PARAM[imdb]</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB)</visible>
          <visible>$PARAM[imdbvotes]</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[ListItem.RatingAndVotes, ,]</label>
          <visible>String.IsEmpty(Window(home).Property(SkinHelper.ListItem.Rating.IMDB)) + !String.IsEmpty(ListItem.RatingAndVotes)</visible>
          <visible>$PARAM[imdbvotes]</visible>
          <visible>$PARAM[imdb]</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Window(home).Property(SkinHelper.ListItem.Rating.IMDB), ,]</label>
          <visible>!String.IsEmpty(Window(home).Property(SkinHelper.ListItem.Rating.IMDB))</visible>
          <visible>$PARAM[imdb]</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB)</visible>
          <visible>!$PARAM[imdbvotes]</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[ListItem.Rating, ,]</label>
          <visible>String.IsEmpty(Window(home).Property(SkinHelper.ListItem.Rating.IMDB)) + !String.IsEmpty(ListItem.Rating)</visible>
          <visible>$PARAM[imdb]</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB)</visible>
          <visible>!$PARAM[imdbvotes]</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>12</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Window(Home).Property(SkinHelper.ListItem.IMDB.Top250),#,]</label>
          <visible>!Window.IsVisible(script-script.extendedinfo-DialogInfo.xml)</visible>
          <visible>!Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml)</visible>
          <visible>Integer.IsGreater(Window(home).Property(SkinHelper.ListItem.IMDB.Top250),0)</visible>
          <visible>$PARAM[imdb]</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB)</visible>
          <visible>$PARAM[top250]</visible>
        </control>
        <control type="label">
          <left>5</left>
          <visible>Skin.HasSetting(DisableWidgetPlot)</visible>
          <textcolor>main_fg_70</textcolor>
          <height>20</height>
          <top>15</top>
          <align>left</align>
          <width min="100" max="1500">auto</width>
          <label>$INFO[ListItem.Plot]</label>
          <scroll>true</scroll>
        </control>
        <control type="image">
          <animation effect="slide" end="0,-10" time="0" condition="!String.IsEmpty(ListItem.Studio)">Conditional</animation>
          <top>13</top>
          <aligny>bottom</aligny>
          <texture colordiffuse="main_fg_100">$INFO[ListItem.Studio,resource://resource.images.studios.white/,.png]</texture>
          <aspectratio>stretch</aspectratio>
          <height>44</height>
          <width>64</width>
	  <visible>!String.IsEmpty(ListItem.Studio)</visible>
        </control>
      </control>
    </definition>
  </include>
  <include name="Object_OSD_Ratings">
    <param name="directory" default="monochrome" />
    <param name="align" default="right" />
    <param name="width" default="900" />
    <param name="rottentomatoes" default="true" />
    <param name="imdbvotes" default="true" />
    <param name="usermeter" default="true" />
    <param name="imdb" default="true" />
    <param name="tmdb" default="true" />
    <param name="tvdb" default="true" />
    <param name="metacritic" default="true" />
    <param name="oscars" default="true" />
    <param name="top250" default="true" />
    <definition>
      <control type="grouplist">
        <width>$PARAM[width]</width>
        <right>0</right>
        <height>32</height>
        <orientation>horizontal</orientation>
        <align>$PARAM[align]</align>
        <itemgap>8</itemgap>
        <usecontrolcoords>true</usecontrolcoords>
        <control type="image">
          <top>0</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/oscar.png</texture>
          <visible>String.Contains(Window(Home).Property(SkinHelper.Player.Awards),Oscar) + String.Contains(Window(Home).Property(SkinHelper.Player.Awards),Won)</visible>
          <visible>$PARAM[oscars]</visible>
          <visible>!Skin.HasSetting(Ratings.Oscars)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>2</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$VAR[Label_OSD_Oscars,, ]</label>
          <visible>String.Contains(Window(Home).Property(SkinHelper.Player.Awards),Oscar) + String.Contains(Window(Home).Property(SkinHelper.Player.Awards),Won)</visible>
          <visible>$PARAM[oscars]</visible>
          <visible>!Skin.HasSetting(Ratings.Oscars)</visible>
        </control>
        <control type="image">
          <top>0</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/metacritic.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.Player.MetaCritic.Rating))</visible>
          <visible>$PARAM[metacritic]</visible>
          <visible>!Skin.HasSetting(Ratings.Metacritic)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>2</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Window(Home).Property(SkinHelper.Player.MetaCritic.Rating), ,% ]</label>
          <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.Player.MetaCritic.Rating))</visible>
          <visible>$PARAM[metacritic]</visible>
          <visible>!Skin.HasSetting(Ratings.Metacritic)</visible>
        </control>
        <control type="image">
          <top>0</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/tmdb.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.Player.Rating.TMDB))</visible>
          <visible>$PARAM[tmdb]</visible>
          <visible>!Skin.HasSetting(Ratings.TheMovieDB)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>2</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Window(Home).Property(SkinHelper.Player.Rating.TMDB), , ]</label>
          <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.Player.Rating.TMDB))</visible>
          <visible>$PARAM[tmdb]</visible>
          <visible>!Skin.HasSetting(Ratings.TheMovieDB)</visible>
        </control>
        <control type="image">
          <top>0</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/tvdb.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.Player.Rating.TVDB))</visible>
          <visible>$PARAM[tvdb]</visible>
          <visible>!Skin.HasSetting(Ratings.TVDB)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>2</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Window(Home).Property(SkinHelper.Player.Rating.TVDB), , ]</label>
          <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.Player.Rating.TVDB))</visible>
          <visible>$PARAM[tvdb]</visible>
          <visible>!Skin.HasSetting(Ratings.TVDB)</visible>
        </control>
        <control type="image">
          <top>0</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/popcorn.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.Player.RottenTomatoes.UserMeter))</visible>
          <visible>Integer.IsGreater(Window(home).Property(SkinHelper.Player.RottenTomatoes.Us&#226;&#8364;&#8249;erMeter),59)</visible>
          <visible>$PARAM[usermeter]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="image">
          <top>0</top>
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/spilt.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.Player.RottenTomatoes.UserMeter))</visible>
          <visible>!Integer.IsGreater(Window(home).Property(SkinHelper.Player.RottenTomatoes.Us&#226;&#8364;&#8249;erMeter),59)</visible>
          <visible>$PARAM[usermeter]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>2</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Window(Home).Property(SkinHelper.Player.RottenTomatoes.UserMeter), ,% ]</label>
          <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.Player.RottenTomatoes.UserMeter))</visible>
          <visible>$PARAM[usermeter]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="image">
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/rtrotten.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.Player.RottenTomatoes.Rating))</visible>
          <visible>Integer.IsGreater(Window(home).Property(SkinHelper.Player.RottenTomatoes.Rating),0) + !Integer.IsGreater(Window(home).Property(SkinHelper.Player.RottenTomatoes.Rating),59)</visible>
          <visible>$PARAM[rottentomatoes]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="image">
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/rtfresh.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.Player.RottenTomatoes.Rating))</visible>
          <visible>Integer.IsGreater(Window(home).Property(SkinHelper.Player.RottenTomatoes.Rating),59) + !Integer.IsGreater(Window(home).Property(SkinHelper.Player.RottenTomatoes.Rating),74)</visible>
          <visible>$PARAM[rottentomatoes]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="image" description="remove the rtfresh texture line for certified logo">
          <width>32</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/rtfresh.png</texture>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/certified.png</texture>
          <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.Player.RottenTomatoes.Rating))</visible>
          <visible>Integer.IsGreater(Window(home).Property(SkinHelper.Player.RottenTomatoes.Rating),74)</visible>
          <visible>$PARAM[rottentomatoes]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>2</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Window(Home).Property(SkinHelper.Player.RottenTomatoes.Rating), ,% ]</label>
          <visible>!String.IsEmpty(Window(Home).Property(SkinHelper.Player.RottenTomatoes.Rating))</visible>
          <visible>$PARAM[rottentomatoes]</visible>
          <visible>!Skin.HasSetting(Ratings.RottenTomatoes)</visible>
        </control>
        <control type="image">
          <top>1</top>
          <width>40</width>
          <height>32</height>
          <texture colordiffuse="$PARAM[colordiffuse]">flags/$PARAM[directory]/ratings/imdbicon.png</texture>
          <visible>!String.IsEmpty(Player.RatingAndVotes) | !String.IsEmpty(Window(home).Property(SkinHelper.Player.Rating.IMDB)) | [Window.IsVisible(DialogVideoInfo.xml) + !String.IsEmpty(Player.Rating)]</visible>
          <visible>$PARAM[imdb]</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>2</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Window(home).Property(SkinHelper.Player.Rating.IMDB), ,]$INFO[Window(home).Property(SkinHelper.Player.Votes.IMDB), (, $LOCALIZE[205])]</label>
          <visible>!Window.IsVisible(DialogVideoInfo.xml)</visible>
          <visible>!String.IsEmpty(Window(home).Property(SkinHelper.Player.Rating.IMDB))</visible>
          <visible>$PARAM[imdb]</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB)</visible>
          <visible>$PARAM[imdbvotes]</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>2</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Player.RatingAndVotes, ,]</label>
          <visible>!Window.IsVisible(DialogVideoInfo.xml)</visible>
          <visible>String.IsEmpty(Window(home).Property(SkinHelper.Player.Rating.IMDB)) + !String.IsEmpty(Player.RatingAndVotes)</visible>
          <visible>$PARAM[imdbvotes]</visible>
          <visible>$PARAM[imdb]</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>2</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Window(home).Property(SkinHelper.Player.Rating.IMDB), ,]</label>
          <visible>!Window.IsVisible(DialogVideoInfo.xml)</visible>
          <visible>!String.IsEmpty(Window(home).Property(SkinHelper.Player.Rating.IMDB))</visible>
          <visible>$PARAM[imdb]</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB)</visible>
          <visible>!$PARAM[imdbvotes]</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>2</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Player.Rating, ,]</label>
          <visible>!Window.IsVisible(DialogVideoInfo.xml)</visible>
          <visible>String.IsEmpty(Window(home).Property(SkinHelper.Player.Rating.IMDB)) + !String.IsEmpty(Player.Rating)</visible>
          <visible>$PARAM[imdb]</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB)</visible>
          <visible>!$PARAM[imdbvotes]</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>2</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Window(home).Property(SkinHelper.Player.Rating.IMDB), ,]</label>
          <visible>Window.IsVisible(DialogVideoInfo.xml)</visible>
          <visible>!String.IsEmpty(Window(home).Property(SkinHelper.Player.Rating.IMDB))</visible>
          <visible>$PARAM[imdb]</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>2</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Player.Rating, ,]</label>
          <visible>Window.IsVisible(DialogVideoInfo.xml)</visible>
          <visible>String.IsEmpty(Window(home).Property(SkinHelper.Player.Rating.IMDB)) + !String.IsEmpty(Player.Rating)</visible>
          <visible>$PARAM[imdb]</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB)</visible>
        </control>
        <control type="label">
          <textcolor>main_fg_70</textcolor>
          <top>2</top>
          <width>auto</width>
          <height>28</height>
          <align>right</align>
          <font>font_tiny</font>
          <label>$INFO[Window(Home).Property(SkinHelper.Player.IMDB.Top250),#,]</label>
          <visible>!Window.IsVisible(script-script.extendedinfo-DialogInfo.xml)</visible>
          <visible>!Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml)</visible>
          <visible>Integer.IsGreater(Window(home).Property(SkinHelper.Player.IMDB.Top250),0)</visible>
          <visible>$PARAM[imdb]</visible>
          <visible>!Skin.HasSetting(Ratings.IMDB)</visible>
          <visible>$PARAM[top250]</visible>
        </control>
        <control type="image">
          <top>-10</top>
          <texture colordiffuse="main_fg_100">$INFO[ListItem.Studio,resource://resource.images.studios.white/,.png]</texture>
          <height>84</height>
          <width>84</width>
        </control>
      </control>
    </definition>
  </include>
  <include name="Object_AlphabetStrip_Skipper">
    <control type="button">
      <visible>false</visible>
      <onfocus condition="!String.IsEmpty(Container(8001).ListItem.Property(NotAvailable)) + Container(8001).OnNext">Control.Move(8001,1)</onfocus>
      <onfocus condition="!String.IsEmpty(Container(8001).ListItem.Property(NotAvailable)) + Container(8001).OnPrevious">Control.Move(8001,-1)</onfocus>
    </control>
  </include>
  <include name="Object_AlphabetStrip">
    <control type="button" id="8000">
      <left>-10000</left>
      <width>10</width>
      <height>1</height>
      <onfocus>SetProperty(SortLetter,$INFO[ListItem.SortLetter],Home)</onfocus>
      <onfocus condition="!String.IsEqual(ListItem.SortLetter,A) + !String.IsEqual(ListItem.SortLetter,B) + !String.IsEqual(ListItem.SortLetter,C) + !String.IsEqual(ListItem.SortLetter,D) + !String.IsEqual(ListItem.SortLetter,E) + !String.IsEqual(ListItem.SortLetter,F) + !String.IsEqual(ListItem.SortLetter,G) + !String.IsEqual(ListItem.SortLetter,H) + !String.IsEqual(ListItem.SortLetter,I) + !String.IsEqual(ListItem.SortLetter,J) + !String.IsEqual(ListItem.SortLetter,K) + !String.IsEqual(ListItem.SortLetter,L) + !String.IsEqual(ListItem.SortLetter,M) + !String.IsEqual(ListItem.SortLetter,N) + !String.IsEqual(ListItem.SortLetter,O) + !String.IsEqual(ListItem.SortLetter,P) + !String.IsEqual(ListItem.SortLetter,Q) + !String.IsEqual(ListItem.SortLetter,R) + !String.IsEqual(ListItem.SortLetter,S) + !String.IsEqual(ListItem.SortLetter,T) + !String.IsEqual(ListItem.SortLetter,U) + !String.IsEqual(ListItem.SortLetter,V) + !String.IsEqual(ListItem.SortLetter,W) + !String.IsEqual(ListItem.SortLetter,X) + !String.IsEqual(ListItem.SortLetter,Y) + !String.IsEqual(ListItem.SortLetter,Z)">SetFocus(8001,0)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,A)">SetFocus(8001,1)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,B)">SetFocus(8001,2)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,C)">SetFocus(8001,3)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,D)">SetFocus(8001,4)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,E)">SetFocus(8001,5)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,F)">SetFocus(8001,6)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,G)">SetFocus(8001,7)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,H)">SetFocus(8001,8)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,I)">SetFocus(8001,9)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,J)">SetFocus(8001,10)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,K)">SetFocus(8001,11)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,L)">SetFocus(8001,12)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,M)">SetFocus(8001,13)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,N)">SetFocus(8001,14)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,O)">SetFocus(8001,15)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,P)">SetFocus(8001,16)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,Q)">SetFocus(8001,17)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,R)">SetFocus(8001,18)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,S)">SetFocus(8001,19)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,T)">SetFocus(8001,20)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,U)">SetFocus(8001,21)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,V)">SetFocus(8001,22)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,W)">SetFocus(8001,23)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,X)">SetFocus(8001,24)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,Y)">SetFocus(8001,25)</onfocus>
      <onfocus condition="String.IsEqual(ListItem.SortLetter,Z)">SetFocus(8001,26)</onfocus>
    </control>
    <control type="group">
      <top>-120</top>
      <animation effect="slide" end="0,120" condition="Control.HasFocus(8001)">Conditional</animation>
      <height>view_pad</height>
      <control type="panel" id="8001">
        <left>view_pad</left>
        <visible allowhiddenfocus="true">Control.HasFocus(8001)</visible>
        <include>Animation_FadeIn</include>
        <orientation>horizontal</orientation>
        <height>view_pad</height>
        <onup>50</onup>
        <ondown>50</ondown>
        <itemlayout height="view_pad" width="42">
          <control type="label">
            <aligny>center</aligny>
            <align>center</align>
            <height>view_pad</height>
            <label>$INFO[ListItem.Label]</label>
            <textcolor>main_fg_70</textcolor>
            <animation effect="fade" start="100" end="10" time="0" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
          </control>
          <control type="label">
            <aligny>center</aligny>
            <align>center</align>
            <height>view_pad</height>
            <label>$INFO[ListItem.Label]</label>
            <textcolor>main_fg_100</textcolor>
            <font>font_small_bold</font>
            <visible>String.IsEqual(ListItem.Label,Window(Home).Property(SortLetter)) | [String.IsEqual(ListItem.Label,#) + !String.IsEqual(Window(Home).Property(SortLetter),A) + !String.IsEqual(Window(Home).Property(SortLetter),B) + !String.IsEqual(Window(Home).Property(SortLetter),C) + !String.IsEqual(Window(Home).Property(SortLetter),D) + !String.IsEqual(Window(Home).Property(SortLetter),E) + !String.IsEqual(Window(Home).Property(SortLetter),F) + !String.IsEqual(Window(Home).Property(SortLetter),G) + !String.IsEqual(Window(Home).Property(SortLetter),H) + !String.IsEqual(Window(Home).Property(SortLetter),I) + !String.IsEqual(Window(Home).Property(SortLetter),J) + !String.IsEqual(Window(Home).Property(SortLetter),K) + !String.IsEqual(Window(Home).Property(SortLetter),L) + !String.IsEqual(Window(Home).Property(SortLetter),M) + !String.IsEqual(Window(Home).Property(SortLetter),N) + !String.IsEqual(Window(Home).Property(SortLetter),O) + !String.IsEqual(Window(Home).Property(SortLetter),P) + !String.IsEqual(Window(Home).Property(SortLetter),Q) + !String.IsEqual(Window(Home).Property(SortLetter),R) + !String.IsEqual(Window(Home).Property(SortLetter),S) + !String.IsEqual(Window(Home).Property(SortLetter),T) + !String.IsEqual(Window(Home).Property(SortLetter),U) + !String.IsEqual(Window(Home).Property(SortLetter),V) + !String.IsEqual(Window(Home).Property(SortLetter),W) + !String.IsEqual(Window(Home).Property(SortLetter),X) + !String.IsEqual(Window(Home).Property(SortLetter),Y) + !String.IsEqual(Window(Home).Property(SortLetter),Z)]</visible>
          </control>
        </itemlayout>
        <focusedlayout height="view_pad" width="42">
          <control type="image">
            <height>4</height>
            <bottom>0</bottom>
            <texture colordiffuse="$VAR[ColorHighlight]">common/white.png</texture>
          </control>
          <control type="label">
            <aligny>center</aligny>
            <align>center</align>
            <height>view_pad</height>
            <label>$INFO[ListItem.Label]</label>
            <textcolor>Selected</textcolor>
            <animation effect="fade" start="100" end="10" time="0" condition="!String.IsEmpty(ListItem.Property(NotAvailable))">Conditional</animation>
          </control>
          <control type="label">
            <aligny>center</aligny>
            <align>center</align>
            <height>view_pad</height>
            <label>$INFO[ListItem.Label]</label>
            <textcolor>Selected</textcolor>
            <font>font_small_bold</font>
            <visible>String.IsEqual(ListItem.Label,Window(Home).Property(SortLetter)) | [String.IsEqual(ListItem.Label,#) + !String.IsEqual(Window(Home).Property(SortLetter),A) + !String.IsEqual(Window(Home).Property(SortLetter),B) + !String.IsEqual(Window(Home).Property(SortLetter),C) + !String.IsEqual(Window(Home).Property(SortLetter),D) + !String.IsEqual(Window(Home).Property(SortLetter),E) + !String.IsEqual(Window(Home).Property(SortLetter),F) + !String.IsEqual(Window(Home).Property(SortLetter),G) + !String.IsEqual(Window(Home).Property(SortLetter),H) + !String.IsEqual(Window(Home).Property(SortLetter),I) + !String.IsEqual(Window(Home).Property(SortLetter),J) + !String.IsEqual(Window(Home).Property(SortLetter),K) + !String.IsEqual(Window(Home).Property(SortLetter),L) + !String.IsEqual(Window(Home).Property(SortLetter),M) + !String.IsEqual(Window(Home).Property(SortLetter),N) + !String.IsEqual(Window(Home).Property(SortLetter),O) + !String.IsEqual(Window(Home).Property(SortLetter),P) + !String.IsEqual(Window(Home).Property(SortLetter),Q) + !String.IsEqual(Window(Home).Property(SortLetter),R) + !String.IsEqual(Window(Home).Property(SortLetter),S) + !String.IsEqual(Window(Home).Property(SortLetter),T) + !String.IsEqual(Window(Home).Property(SortLetter),U) + !String.IsEqual(Window(Home).Property(SortLetter),V) + !String.IsEqual(Window(Home).Property(SortLetter),W) + !String.IsEqual(Window(Home).Property(SortLetter),X) + !String.IsEqual(Window(Home).Property(SortLetter),Y) + !String.IsEqual(Window(Home).Property(SortLetter),Z)]</visible>
          </control>
          <include>Object_AlphabetStrip_Skipper</include>
        </focusedlayout>
        <content>plugin://script.skin.helper.service/?action=alphabet&amp;reload=$INFO[Container.NumItems]</content>
      </control>
    </control>
  </include>
  <include name="Object_Scrollbar_Vert">
    <control type="scrollbar" id="60">
      <onback>50</onback>
      <right>0</right>
      <width>8</width>
      <top>-60</top>
      <bottom>0</bottom>
      <visible>$PARAM[visible]</visible>
      <showonepage>false</showonepage>
      <orientation>vertical</orientation>
      <onright condition="[String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558])] + !Container.Content(seasons) + [Control.IsEnabled(3) | Control.IsEnabled(4)] + Skin.HasSetting(AlphabetStrip) + System.HasAddon(script.skin.helper.service)">SetFocus(8000)</onright>
      <onright condition="![[String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558])] + !Container.Content(seasons) + [Control.IsEnabled(3) | Control.IsEnabled(4)]] + Skin.HasSetting(AlphabetStrip) + System.HasAddon(script.skin.helper.service)">Notification($LOCALIZE[161],$LOCALIZE[31334])</onright>
      <onright condition="!Skin.HasSetting(AlphabetStrip) | !System.HasAddon(script.skin.helper.service)">50</onright>
      <onleft>50</onleft>
      <texturesliderbackground colordiffuse="main_fg_12" border="4">common/white.png</texturesliderbackground>
      <texturesliderbar colordiffuse="main_fg_30" border="4">scrollbar/scrollv.png</texturesliderbar>
      <texturesliderbarfocus colordiffuse="$VAR[ColorHighlight]" border="4">scrollbar/scrollv.png</texturesliderbarfocus>
      <animation effect="fade" start="100" end="33" time="400" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
      <visible>!Window.IsVisible(home)</visible>
      <include>Animation_FadeIn</include>
      <include>Animation_FadeOut</include>
    </control>
  </include>
  <include name="Object_Scrollbar_Horz">
    <control type="scrollbar" id="60">
      <visible>Skin.HasSetting(DisableNetflixView)</visible>
      <onback>50</onback>
      <height>8</height>
      <left>0</left>
      <right>0</right>
      <width>100%</width>
      <bottom>0</bottom>
      <showonepage>false</showonepage>
      <orientation>horizontal</orientation>
      <onup>50</onup>
      <visible>$PARAM[visible]</visible>
      <ondown condition="[String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558])] + !Container.Content(seasons) + [Control.IsEnabled(3) | Control.IsEnabled(4)] + Skin.HasSetting(AlphabetStrip) + System.HasAddon(script.skin.helper.service)">SetFocus(8000)</ondown>
      <ondown condition="![[String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558])] + !Container.Content(seasons) + [Control.IsEnabled(3) | Control.IsEnabled(4)]] + Skin.HasSetting(AlphabetStrip) + System.HasAddon(script.skin.helper.service)">Notification($LOCALIZE[161],$LOCALIZE[31334])</ondown>
      <ondown condition="!Skin.HasSetting(AlphabetStrip) | !System.HasAddon(script.skin.helper.service)">50</ondown>
      <texturesliderbackground colordiffuse="main_fg_12" border="4">common/white.png</texturesliderbackground>
      <texturesliderbar colordiffuse="main_fg_30" border="4">scrollbar/scrollv.png</texturesliderbar>
      <texturesliderbarfocus colordiffuse="$VAR[ColorHighlight]" border="4">scrollbar/scrollv.png</texturesliderbarfocus>
      <animation effect="fade" start="100" end="33" time="400" condition="!Control.HasFocus(60) + !Container.Scrolling">Conditional</animation>
      <visible>!Window.IsVisible(home)</visible>
      <include>Animation_FadeIn</include>
      <include>Animation_FadeOut</include>
    </control>
  </include>
  <include name="Object_PlotOverlay">
    <param name="visible" default="true" />
    <definition>
      <control type="group">
        <control type="scrollbar" id="9601">
          <visible>$PARAM[visible]</visible>
          <top>100</top>
          <left>-1000</left>
          <bottom>100</bottom>
          <onback condition="Skin.HasSetting(DisableNetflixVideoInfo) + [Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(DialogMusicInfo.xml) | Window.IsVisible(DialogAddonInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogInfo.xml)]">300</onback>
          <onback condition="!Skin.HasSetting(DisableNetflixVideoInfo) + [Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(DialogMusicInfo.xml) | Window.IsVisible(DialogAddonInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogInfo.xml)]">8000</onback>
          <onup condition="[Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(DialogMusicInfo.xml) | Window.IsVisible(DialogAddonInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogInfo.xml)]">300</onup>
          <ondown condition="[Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(DialogMusicInfo.xml) | Window.IsVisible(DialogAddonInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogInfo.xml)]">300</ondown>
          <onright condition="[Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(DialogMusicInfo.xml) | Window.IsVisible(DialogAddonInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogInfo.xml)]">300</onright>
          <onleft condition="[Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(DialogMusicInfo.xml) | Window.IsVisible(DialogAddonInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogVideoInfo.xml) | Window.IsVisible(script-script.extendedinfo-DialogInfo.xml)]">300</onleft>
          <onup condition="Control.IsVisible(9000)">9000</onup>
          <onleft condition="Control.IsVisible(9000)">9000</onleft>
          <onright condition="Control.IsVisible(9000)">9000</onright>
          <ondown condition="Control.IsVisible(9000)">9000</ondown>
          <onback condition="Control.IsVisible(3000)">3000</onback>
          <onup condition="Control.IsVisible(3000)">3000</onup>
          <onleft condition="Control.IsVisible(3000)">3000</onleft>
          <onright condition="Control.IsVisible(3000)">3000</onright>
          <ondown condition="Control.IsVisible(3000)">3000</ondown>
          <onback condition="!Control.IsVisible(3000) + !Control.IsVisible(9000)">50</onback>
          <onup condition="!Control.IsVisible(3000) + !Control.IsVisible(9000)">50</onup>
          <onleft condition="!Control.IsVisible(3000) + !Control.IsVisible(9000)">50</onleft>
          <onright condition="!Control.IsVisible(3000) + !Control.IsVisible(9000)">50</onright>
          <ondown condition="!Control.IsVisible(3000) + !Control.IsVisible(9000)">50</ondown>
          <onup condition="Window.IsVisible(DialogVideoInfo.xml)">SetFocus(9570)</onup>
          <ondown condition="Window.IsVisible(DialogVideoInfo.xml)">SetFocus(9570)</ondown>
          <onleft condition="Window.IsVisible(DialogVideoInfo.xml)">SetFocus(9570)</onleft>
          <onright condition="Window.IsVisible(DialogVideoInfo.xml)">SetFocus(9570)</onright>
          <showonepage>true</showonepage>
          <width>8</width>
          <orientation>vertical</orientation>
          <animation effect="fade" condition="true" time="0" start="100" end="0">Conditional</animation>
        </control>
        <!-- Netflix Plot Info -->
        <control type="group">
          <include>Animation_FadeIn</include>
          <visible>Control.HasFocus(9601) + $PARAM[visible] + !Skin.HasSetting(DisableNetflixVideoInfo)</visible>
          <control type="image">
            <width>100%</width>
            <height>100%</height>
            <texture background="true" colordiffuse="FF000000" flipy="true">common/white.png</texture>
            <aspectratio scalediffuse="true" aligny="top">scale</aspectratio>
          </control>
          <control type="image">
            <width>100%</width>
            <height>100%</height>
            <texture background="true" diffuse="overlay/gradient_overlay_info.png">$VAR[Spotlight_Fanart]</texture>
            <aspectratio scalediffuse="true" aligny="top">scale</aspectratio>
          </control>
          <control type="image">
            <width>100%</width>
            <height>100%</height>
            <texture background="true" colordiffuse="FF000000" flipy="true">common/background_diffuse.png</texture>
          </control>
          <control type="group">
            <height min="155" max="251">auto</height>
            <control type="image" id="55447">
              <left>60</left>
              <right>$PARAM[titleright]</right>
              <height>251</height>
              <width>650</width>
              <aligny>top</aligny>
              <texture background="true">$VAR[NetflixHome_ClearLogo]</texture>
            </control>
            <control type="label">
              <visible>String.IsEmpty(Window(Home).Property(SkinHelper.ListItem.Art.ClearLogo)) + String.IsEmpty(Control.GetLabel(55447))</visible>
              <top>60</top>
              <left>60</left>
              <right>$PARAM[titleright]</right>
              <label>$INFO[ListItem.Label]</label>
              <textcolor>grey</textcolor>
              <shadowcolor>black</shadowcolor>
              <font>netflix_heading</font>
              <width min="200" max="700">auto</width>
              <align>left</align>
              <wrapmultiline>true</wrapmultiline>
            </control>
          </control>
          <control type="grouplist">
            <orientation>vertical</orientation>
            <usecontrolcoords>true</usecontrolcoords>
            <itemgap>0</itemgap>
            <top>300</top>
            <control type="textbox" id="9609">
              <left>60</left>
              <description>textarea</description>
              <height min="100" max="600">auto</height>
              <width>90%</width>
              <align>left</align>
              <textcolor>main_fg_70</textcolor>
              <font>font_overlay_plotbox</font>
              <label fallback="19055">$VAR[Label_OverlayPlot]</label>
              <autoscroll delay="8000" time="4000" repeat="12000">false</autoscroll>
            </control>
            <control type="label">
              <height>90</height>
            </control>
            <control type="group">
              <height>80</height>
              <right>950</right>
              <include content="Object_Ratings" condition="Window.IsVisible(DialogVideoInfo.xml) | Window.IsVisible(MyVideoNav.xml) | Window.IsVisible(Home.xml) | Window.IsVisible(script-globalsearch.xml)">
                <param name="directory" value="color" />
                <param name="align" value="left" />
                <param name="width" value="$PARAM[width]" />
                <param name="rottentomatoes" value="true" />
                <param name="imdbvotes" value="true" />
                <param name="usermeter" value="true" />
                <param name="imdb" value="true" />
                <param name="tmdb" value="true" />
                <param name="metacritic" value="true" />
                <param name="oscars" value="true" />
                <param name="top250" value="true" />
                <param name="plot" value="false" />
              </include>
            </control>
          </control>
        </control>
        <!-- Standard Plot Info -->
        <control type="group">
          <visible>$PARAM[visible] + Skin.HasSetting(DisableNetflixVideoInfo)</visible>
          <left>view_pad</left>
          <right>view_pad</right>
          <top>view_top</top>
          <bottom>view_pad</bottom>
          <visible>$EXP[Exp_PlotOverlay]</visible>
          <include>Animation_FadeIn</include>
          <control type="group">
            <top>12</top>
            <control type="group">
              <top>90</top>
              <visible>Container(9609).HasPrevious</visible>
              <include>Animation_FadeIn</include>
              <include>Animation_FadeOut</include>
              <control type="image">
                <width>16</width>
                <height>16</height>
                <texture colordiffuse="main_fg_100" flipy="true">common/arrow-small.png</texture>
                <centerleft>50%</centerleft>
                <top>10</top>
              </control>
              <control type="image">
                <width>16</width>
                <height>16</height>
                <texture colordiffuse="main_fg_100" flipy="true">common/arrow-small.png</texture>
                <centerleft>50%</centerleft>
                <top>0</top>
              </control>
            </control>
            <control type="group">
              <bottom>30</bottom>
              <visible>Container(9609).HasNext</visible>
              <include>Animation_FadeIn</include>
              <include>Animation_FadeOut</include>
              <control type="image">
                <width>16</width>
                <height>16</height>
                <texture colordiffuse="main_fg_100" flipy="false">common/arrow-small.png</texture>
                <centerleft>50%</centerleft>
                <bottom>0</bottom>
              </control>
              <control type="image">
                <width>16</width>
                <height>16</height>
                <texture colordiffuse="main_fg_100" flipy="false">common/arrow-small.png</texture>
                <centerleft>50%</centerleft>
                <bottom>10</bottom>
              </control>
            </control>
            <control type="label">
              <description>header label</description>
              <left>0</left>
              <right>0</right>
              <height>45</height>
              <font>font_overlay_title</font>
              <textcolor>main_fg_100</textcolor>
              <label>$VAR[Label_OverlayTitle]</label>
            </control>
            <control type="textbox" id="9609">
              <description>textarea</description>
              <left>0</left>
              <right>0</right>
              <top>120</top>
              <bottom>50</bottom>
              <align>left</align>
              <textcolor>main_fg_70</textcolor>
              <font>font_overlay_plotbox</font>
              <label fallback="19055">$VAR[Label_OverlayPlot]</label>
              <pagecontrol>9601</pagecontrol>
              <autoscroll delay="8000" time="4000" repeat="12000">false</autoscroll>
            </control>
          </control>
        </control>
      </control>
      <control type="button" id="9602">
        <onleft>300</onleft>
        <onup>300</onup>
        <ondown>300</ondown>
        <onright>300</onright>
        <onclick>SetFocus(300)</onclick>
        <onback>300</onback>
        <include>Defs_Hidden_Button</include>
      </control>
    </definition>
  </include>

  <include name="Widget_Items_Large">
    <param name="submenu" default="false" />
    <param name="aspect" default="" />
    <param name="sortby" default="" />
    <param name="sortorder" default="" />
    <param name="top" default="0" />
    <param name="height" default="320" />
    <param name="genres" default="false" />
    <param name="studios" default="false" />
    <param name="text" default="false" />
    <param name="square" default="false" />
    <param name="poster" default="false" />
    <param name="landscape" default="false" />
    <param name="landscapewide" default="false" />
    <param name="landscapewideposter" default="false" />
    <param name="posterdetails" default="false" />
    <param name="widgetlive" default="false" />
    <param name="landscapenetflix" default="false" />
    <param name="category" default="false" />
    <param name="postercondition" default="false" />
    <param name="landscapecondition" default="false" />
    <param name="landscapewidecondition" default="false" />
    <param name="landscapewidepostercondition" default="false" />
    <param name="landscapenetflixcondition" default="false" />
    <param name="posterdetailscondition" default="false" />
    <param name="widgetlivecondition" default="false" />
    <param name="categorycondition" default="false" />
    <param name="squarecondition" default="false" />
    <param name="genrecondition" default="false" />
    <param name="landscapepanelcondition" default="false" />
    <definition>
      <itemlayout width="widget_poster_width_netflix" height="widget_poster_height_netflix" condition="$PARAM[postercondition]">
        <include content="Widget_Items_ItemLayout">
          <param name="poster" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </itemlayout>
      <itemlayout width="widget_square_width_netflix" height="widget_poster_height_netflix" condition="$PARAM[squarecondition]">
        <include content="Widget_Items_ItemLayout">
          <param name="square" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </itemlayout>
      <itemlayout width="widget_poster_width_netflix" height="widget_poster_height_netflix" condition="$PARAM[genrecondition]">
        <include content="Widget_Items_ItemLayout">
          <param name="genres" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </itemlayout>
      <itemlayout width="366" height="210" condition="$PARAM[landscapepanelcondition]">
        <include content="Widget_Items_ItemLayout">
          <param name="landscapepanel" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </itemlayout>
      <itemlayout width="558.22" height="314.6" condition="$PARAM[landscapenetflixcondition]">
        <include content="Widget_Items_ItemLayout">
          <param name="landscapenetflix" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </itemlayout>
      <itemlayout width="366" height="210" condition="$PARAM[categorycondition]">
        <include content="Widget_Items_ItemLayout">
          <param name="category" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </itemlayout>
      <itemlayout width="630" height="widget_poster_height_netflix" condition="$PARAM[landscapewidecondition]">
        <include content="Widget_Items_ItemLayout">
          <param name="landscapewide" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </itemlayout>
      <itemlayout width="widget_poster_width_netflix" height="widget_poster_height_netflix" condition="$PARAM[landscapewidepostercondition]">
        <include content="Widget_Items_ItemLayout">
          <param name="poster" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </itemlayout>
<!--
      <itemlayout width="widget_poster_width_netflix" height="widget_poster_height_netflix" condition="$PARAM[posterdetailscondition]">
        <include content="Widget_Items_ItemLayout">
          <param name="poster" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </itemlayout>
-->
      <itemlayout width="380" height="widget_poster_height_netflix" condition="$PARAM[widgetlivecondition]">
        <include content="Widget_Items_ItemLayout">
          <param name="widgetlive" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </itemlayout>
      <itemlayout width="606.67" height="widget_poster_height_netflix" condition="$PARAM[landscapecondition]">
        <include content="Widget_Items_ItemLayout">
          <param name="landscape" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </itemlayout>
      <focusedlayout width="366" height="210" condition="$PARAM[landscapepanelcondition]">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="landscapepanel" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
      <focusedlayout width="558.22" height="314.6" condition="$PARAM[landscapenetflixcondition]">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="landscapenetflix" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
      <focusedlayout width="366" height="210" condition="$PARAM[categorycondition]">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="category" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
      <focusedlayout width="630" height="widget_poster_height_netflix" condition="$PARAM[landscapewidecondition]">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="landscapewide" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
      <focusedlayout width="640" height="widget_poster_height_netflix" condition="$PARAM[landscapewidepostercondition] + Control.HasFocus($PARAM[id])">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="landscapewide" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
      <focusedlayout width="widget_poster_width_netflix" height="widget_poster_height_netflix" condition="$PARAM[landscapewidepostercondition] + !Control.HasFocus($PARAM[id])">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="poster" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
<!--
      <focusedlayout width="800" height="widget_poster_height_netflix" condition="$PARAM[posterdetailscondition] + Control.HasFocus($PARAM[id])">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="posterdetails" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
      <focusedlayout width="widget_poster_width_netflix" height="widget_poster_height_netflix" condition="$PARAM[posterdetailscondition] + !Control.HasFocus($PARAM[id])">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="poster" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
-->
      <focusedlayout width="380" height="widget_poster_height_netflix" condition="$PARAM[widgetlivecondition]">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="widgetlive" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
      <focusedlayout width="widget_poster_width_netflix" height="widget_poster_height_netflix" condition="$PARAM[genrecondition]">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="genres" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
      <focusedlayout width="widget_poster_width_netflix" height="widget_poster_height_netflix" condition="$PARAM[postercondition]">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="poster" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
      <focusedlayout width="606.67" height="widget_poster_height_netflix" condition="$PARAM[landscapecondition]">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="landscape" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
      <focusedlayout width="widget_square_width_netflix" height="widget_poster_height_netflix" condition="$PARAM[squarecondition]">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="square" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
    </definition>
  </include>
  <include name="Widget_Items_Small">
    <param name="submenu" default="false" />
    <param name="aspect" default="" />
    <param name="sortby" default="" />
    <param name="sortorder" default="" />
    <param name="top" default="0" />
    <param name="height" default="320" />
    <param name="genres" default="false" />
    <param name="studios" default="false" />
    <param name="text" default="false" />
    <param name="square" default="false" />
    <param name="poster" default="false" />
    <param name="landscape" default="false" />
    <param name="landscapewide" default="false" />
    <param name="landscapewideposter" default="false" />
    <param name="posterdetails" default="false" />
    <param name="widgetlive" default="false" />
    <param name="landscapenetflix" default="false" />
    <param name="category" default="false" />
    <param name="postercondition" default="false" />
    <param name="landscapecondition" default="false" />
    <param name="landscapewidecondition" default="false" />
    <param name="landscapewidepostercondition" default="false" />
    <param name="landscapenetflixcondition" default="false" />
    <param name="posterdetailscondition" default="false" />
    <param name="widgetlivecondition" default="false" />
    <param name="categorycondition" default="false" />
    <param name="squarecondition" default="false" />
    <param name="genrecondition" default="false" />
    <definition>
      <itemlayout width="widget_poster_width_netflix_small" height="widget_poster_height_netflix_small" condition="$PARAM[postercondition]">
        <include content="Widget_Items_ItemLayout">
          <param name="poster" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </itemlayout>
      <itemlayout width="widget_square_width_netflix_small" height="widget_poster_height_netflix_small" condition="$PARAM[squarecondition]">
        <include content="Widget_Items_ItemLayout">
          <param name="square" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </itemlayout>
      <itemlayout width="widget_poster_width_netflix_small" height="widget_poster_height_netflix_small" condition="$PARAM[genrecondition]">
        <include content="Widget_Items_ItemLayout">
          <param name="genres" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </itemlayout>
      <itemlayout width="widget_landscapenetflix_width_netflix_small" height="widget_poster_height_netflix_small" condition="$PARAM[landscapenetflixcondition]">
        <include content="Widget_Items_ItemLayout">
          <param name="landscapenetflix" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </itemlayout>
      <itemlayout width="366" height="210" condition="$PARAM[categorycondition]">
        <include content="Widget_Items_ItemLayout">
          <param name="category" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </itemlayout>
      <itemlayout width="widget_landscapewide_width_netflix_small" height="widget_poster_height_netflix_small" condition="$PARAM[landscapewidecondition]">
        <include content="Widget_Items_ItemLayout">
          <param name="landscapewide" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </itemlayout>
      <itemlayout width="widget_poster_width_netflix_small" height="widget_poster_height_netflix_small" condition="$PARAM[landscapewidepostercondition]">
        <include content="Widget_Items_ItemLayout">
          <param name="poster" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </itemlayout>
<!--
      <itemlayout width="widget_poster_width_netflix_small" height="widget_poster_height_netflix_small" condition="$PARAM[posterdetailscondition]">
        <include content="Widget_Items_ItemLayout">
          <param name="poster" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </itemlayout>
-->
      <itemlayout width="380" height="widget_poster_height_netflix_small" condition="$PARAM[widgetlivecondition]">
        <include content="Widget_Items_ItemLayout">
          <param name="widgetlive" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </itemlayout>
      <itemlayout width="widget_landscape_width_netflix_small" height="widget_poster_height_netflix_small" condition="$PARAM[landscapecondition]">
        <include content="Widget_Items_ItemLayout">
          <param name="landscape" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </itemlayout>
      <focusedlayout width="widget_landscapenetflix_width_netflix_small" height="widget_poster_height_netflix_small" condition="$PARAM[landscapenetflixcondition]">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="landscapenetflix" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
      <focusedlayout width="366" height="210" condition="$PARAM[categorycondition]">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="category" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
      <focusedlayout width="widget_landscapewide_width_netflix_small" height="widget_poster_height_netflix_small" condition="$PARAM[landscapewidecondition]">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="landscapewide" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
      <focusedlayout width="widget_landscapewide_width_netflix_small" height="widget_poster_height_netflix_small" condition="$PARAM[landscapewidepostercondition] + Control.HasFocus($PARAM[id])">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="landscapewide" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
      <focusedlayout width="widget_poster_width_netflix_small" height="widget_poster_height_netflix_small" condition="$PARAM[landscapewidepostercondition] + !Control.HasFocus($PARAM[id])">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="poster" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
<!--
      <focusedlayout width="800" height="widget_poster_height_netflix_small" condition="$PARAM[posterdetailscondition] + Control.HasFocus($PARAM[id])">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="posterdetails" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
      <focusedlayout width="widget_poster_width_netflix_small" height="widget_poster_height_netflix_small" condition="$PARAM[posterdetailscondition] + !Control.HasFocus($PARAM[id])">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="poster" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
-->
      <focusedlayout width="380" height="widget_poster_height_netflix_small" condition="$PARAM[widgetlivecondition]">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="widgetlive" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
      <focusedlayout width="widget_poster_width_netflix_small" height="widget_poster_height_netflix_small" condition="$PARAM[genrecondition]">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="genres" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
      <focusedlayout width="widget_poster_width_netflix_small" height="widget_poster_height_netflix_small" condition="$PARAM[postercondition]">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="poster" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
      <focusedlayout width="widget_landscape_width_netflix_small" height="widget_poster_height_netflix_small" condition="$PARAM[landscapecondition]">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="landscape" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
      <focusedlayout width="widget_square_width_netflix_small" height="widget_poster_height_netflix_small" condition="$PARAM[squarecondition]">
        <include content="Widget_Items_FocusedLayout">
          <param name="id" value="$PARAM[id]" />
          <param name="square" value="true" />
          <param name="genres" value="$PARAM[genres]" />
          <param name="studios" value="$PARAM[studios]" />
          <param name="text" value="$PARAM[text]" />
        </include>
      </focusedlayout>
    </definition>
  </include>

  <include name="Widgets_Grouplist_Large">
    <param name="submenu" default="false" />
    <param name="aspect" default="" />
    <param name="sortby" default="" />
    <param name="sortorder" default="" />
    <param name="top" default="0" />
    <param name="height" default="320" />
    <param name="genres" default="false" />
    <param name="studios" default="false" />
    <param name="text" default="false" />
    <param name="square" default="false" />
    <param name="poster" default="false" />
    <param name="landscape" default="false" />
    <param name="landscapewide" default="false" />
    <param name="landscapewideposter" default="false" />
    <param name="posterdetails" default="false" />
    <param name="widgetlive" default="false" />
    <param name="landscapenetflix" default="false" />
    <param name="category" default="false" />
    <param name="landscapepanel" default="false" />
    <definition>
      <control type="grouplist" id="330">
        <animation effect="slide" end="-30,0" delay="0" time="150" condition="[Skin.HasSetting(DisableMenuHor) |!Control.HasFocus(300) + Skin.HasSetting(DisableNetflixHomeSidemenuHide)]">Conditional</animation>
        <animation effect="slide" end="0,240" time="300" delay="150" condition="[!Skin.HasSetting(DisableMenuHor) + [Control.HasFocus(300) + [Integer.IsGreater(Container(1505).NumItems,0) | Integer.IsGreater(Container(1506).NumItems,0)] + String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true)] | [!Skin.HasSetting(SubmenuWidgetPanel) + Control.HasFocus(30222) | Control.HasFocus(3022) | Control.HasFocus(30221)] | [ControlGroup(505).HasFocus | ControlGroup(506).HasFocus | Control.HasFocus(1505) | Control.HasFocus(1506)]]">Conditional</animation>
        <onup condition="Integer.IsGreater(Container(3022).NumItems,0) + String.IsEqual(Container(300).ListItem.Property(widgethub),true) + String.IsEqual(Container(300).ListItem.Property(widgethubselect),MoviesLists1)">3022</onup>
        <onup condition="Integer.IsGreater(Container(30221).NumItems,0) + String.IsEqual(Container(300).ListItem.Property(widgethub),true) + String.IsEqual(Container(300).ListItem.Property(widgethubselect),TVLists1)">30221</onup>
        <onup condition="[!Skin.HasSetting(DisableNetflixCatWidget) + Integer.IsGreater(Container(30222).NumItems,0)] + !String.IsEqual(Container(300).ListItem.Property(widgethub),true) | [String.IsEqual(Container(300).ListItem.Property(widgethub),true) + !Integer.IsGreater(Container(3022).NumItems,0)]">SetFocus(30222)</onup>
        <onup condition="[!Skin.HasSetting(DisableNetflixCatWidget) + Integer.IsGreater(Container(30222).NumItems,0)] + !String.IsEqual(Container(300).ListItem.Property(widgethub),true) | [String.IsEqual(Container(300).ListItem.Property(widgethub),true) + !Integer.IsGreater(Container(30221).NumItems,0)]">SetFocus(30222)</onup>
        <onup condition="Skin.HasSetting(DisableNetflixCatWidget) | !Integer.IsGreater(Container(30222).NumItems,0)">SetFocus(300)</onup>
        <left>30</left>
        <posy>580</posy>
        <onleft>300</onleft>
        <ondown>3337</ondown>
        <orientation>vertical</orientation>
        <visible>!String.IsEqual(Container(300).ListItem.Property(widget),Weather) + !String.IsEqual(Container(300).ListItem.Property(widget),Settings)</visible>
        <itemgap>0</itemgap>
        <usecontrolcoords>true</usecontrolcoords>
        <scrolltime tween="linear">400</scrolltime>
        <include content="WidgetSubmenu" condition="!Skin.HasSetting(HideSubmenuWidget)">
          <param name="id" value="3001" />
          <param name="submenu" value="true" />
          <param name="aspect" value="$LOCALIZE[31263]" />
          <param name="label" value="$VAR[catlabel]" />
          <param name="visible" value="String.IsEqual(Container(300).ListItem.Property(hasSubmenu),true)" />
        </include>
        <include>skinshortcuts-template-vertical-submenu</include>
      </control>
    </definition>
  </include>

  <include name="Widgets_Grouplist_small">
    <param name="submenu" default="false" />
    <param name="aspect" default="" />
    <param name="sortby" default="" />
    <param name="sortorder" default="" />
    <param name="top" default="0" />
    <param name="height" default="320" />
    <param name="genres" default="false" />
    <param name="studios" default="false" />
    <param name="text" default="false" />
    <param name="square" default="false" />
    <param name="poster" default="false" />
    <param name="landscape" default="false" />
    <param name="landscapewide" default="false" />
    <param name="landscapewideposter" default="false" />
    <param name="posterdetails" default="false" />
    <param name="widgetlive" default="false" />
    <param name="landscapenetflix" default="false" />
    <param name="category" default="false" />
    <definition>
      <control type="grouplist" id="330">
        <posy>630</posy>
        <animation effect="slide" end="-40,0" delay="0" time="150" condition="[Skin.HasSetting(DisableMenuHor) | !Control.HasFocus(300) + Skin.HasSetting(DisableNetflixHomeSidemenuHide)]">Conditional</animation>
        <animation effect="slide" end="0,240" time="300" delay="150" condition="[!Skin.HasSetting(DisableMenuHor) + [Control.HasFocus(30222) | Control.HasFocus(3022) | Control.HasFocus(30221)] | [ControlGroup(505).HasFocus | ControlGroup(506).HasFocus | Control.HasFocus(1505) | Control.HasFocus(1506)]]">Conditional</animation>
        <animation effect="slide" end="0,20" time="300" delay="150" condition="Skin.HasSetting(LargeSubmenuLabel) + [!Skin.HasSetting(DisableMenuHor) + [Control.HasFocus(30222) | Control.HasFocus(3022) | Control.HasFocus(30221)] | [ControlGroup(505).HasFocus | ControlGroup(506).HasFocus | Control.HasFocus(1505) | Control.HasFocus(1506)]]">Conditional</animation>
        <onup condition="Integer.IsGreater(Container(3022).NumItems,0) + String.IsEqual(Container(300).ListItem.Property(widgethub),true) + String.IsEqual(Container(300).ListItem.Property(widgethubselect),MoviesLists1)">3022</onup>
        <onup condition="Integer.IsGreater(Container(30221).NumItems,0) + String.IsEqual(Container(300).ListItem.Property(widgethub),true) + String.IsEqual(Container(300).ListItem.Property(widgethubselect),TVLists1)">30221</onup>
        <onup condition="[!Skin.HasSetting(DisableNetflixCatWidget) + Integer.IsGreater(Container(30222).NumItems,0)] + !String.IsEqual(Container(300).ListItem.Property(widgethub),true) | [String.IsEqual(Container(300).ListItem.Property(widgethub),true) + !Integer.IsGreater(Container(3022).NumItems,0)]">SetFocus(30222)</onup>
        <onup condition="[!Skin.HasSetting(DisableNetflixCatWidget) + Integer.IsGreater(Container(30222).NumItems,0)] + !String.IsEqual(Container(300).ListItem.Property(widgethub),true) | [String.IsEqual(Container(300).ListItem.Property(widgethub),true) + !Integer.IsGreater(Container(30221).NumItems,0)]">SetFocus(30222)</onup>
        <onup condition="Skin.HasSetting(DisableNetflixCatWidget) | !Integer.IsGreater(Container(30222).NumItems,0)">SetFocus(300)</onup>
        <onleft>300</onleft>
        <left>30</left>
        <ondown>3337</ondown>
        <orientation>vertical</orientation>
        <visible>!String.IsEqual(Container(300).ListItem.Property(widget),Weather) + !String.IsEqual(Container(300).ListItem.Property(widget),Settings)</visible>
        <itemgap>0</itemgap>
        <usecontrolcoords>true</usecontrolcoords>
        <scrolltime tween="linear">400</scrolltime>
        <include content="WidgetSubmenu" condition="!Skin.HasSetting(HideSubmenuWidget)">
          <param name="id" value="3001" />
          <param name="submenu" value="true" />
          <param name="aspect" value="$LOCALIZE[31263]" />
          <param name="label" value="$VAR[catlabel]" />
          <param name="visible" value="String.IsEqual(Container(300).ListItem.Property(hasSubmenu),true)" />
        </include>
        <include>skinshortcuts-template-vertical-submenu</include>
      </control>
    </definition>
  </include>

  <include name="WidgetHubScroll">
        <control type="button" id="3337">
          <visible allowhiddenfocus="true">false</visible>
<!--
          <onfocus condition="!Skin.HasSetting(DisableAuraHomeLayout)">SetFocus(30222)</onfocus>
          <onfocus condition="!String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true) + !Integer.IsGreater(Container(30222).NumItems,0)">SetFocus(3000)</onfocus>
          <onfocus condition="!String.IsEqual(Container(300).ListItem.Property(widgetspotlight),true) + Integer.IsGreater(Container(30222).NumItems,0)">SetFocus(30222)</onfocus>
-->
          <onfocus condition="!String.IsEqual(Container(300).ListItem.Property(widgethubscroll),true)">SetFocus(330,0)</onfocus>
          <onfocus condition="String.IsEqual(Container(300).ListItem.Property(widgethubscroll),true)">SetFocus(330,0)</onfocus>
          <onfocus condition="String.IsEqual(Container(300).ListItem.Property(widgethubscroll),true) + String.IsEqual(Container(300).ListItem.Property(widgethubscrollselect),TVNetflixHub)">ActivateWindow(3810)</onfocus>
          <onfocus condition="String.IsEqual(Container(300).ListItem.Property(widgethubscroll),true) + String.IsEqual(Container(300).ListItem.Property(widgethubscrollselect),TVAuraHub)">ActivateWindow(3910)</onfocus>
          <onfocus condition="String.IsEqual(Container(300).ListItem.Property(widgethubscroll),true) + String.IsEqual(Container(300).ListItem.Property(widgethubscrollselect),MovieNetflixHub)">ActivateWindow(3820)</onfocus>
          <onfocus condition="String.IsEqual(Container(300).ListItem.Property(widgethubscroll),true) + String.IsEqual(Container(300).ListItem.Property(widgethubscrollselect),MovieAuraHub)">ActivateWindow(3920)</onfocus>
        </control>
  </include>

  <!-- @PXCL dev -->
  <include name="Logo">
    <control type="group">
      <top>35</top>
      <animation type="Conditional" condition="Window.Previous(fullscreenvideo)">
        <effect type="slide" start="0,0" end="320,0" center="auto" tween="sine" easing="inout" time="200" />
        <effect type="fade" start="100" end="0" time="300" />
      </animation>
      <control type="group">
        <control type="image">
          <right>80</right>
          <width>70</width>
          <height>70</height>
          <aspectratio>keep</aspectratio>
          <texture colordiffuse="main_fg_100">$INFO[Weather.FanartCode,resource://resource.images.weathericons.white/,.png]</texture>
        </control>
        <visible>Weather.IsFetched</visible>
      </control>
      <control type="button">
        <right>80</right>
        <width>70</width>
        <height>70</height>
        <label></label>
        <height>60</height>
        <onclick>Dialog.Close(contextmenu)</onclick>
        <onclick>Dialog.Close(all,true)</onclick>
        <onclick>ActivateWindow(PlayerControls)</onclick>
        <texturefocus colordiffuse="white">logo.png</texturefocus>
        <texturenofocus colordiffuse="white">logo.png</texturenofocus>
        <visible>!Weather.IsFetched</visible>
      </control>
      <control type="label">
        <top>-5</top>
        <right>170</right>
        <width>1000</width>
        <height>60</height>
        <font>Reg25</font>
        <align>right</align>
        <textcolor>white</textcolor>
        <label>$INFO[System.Time(hh:mm)]</label>
        <animation effect="fade" start="100" end="0" time="200" condition="Window.IsActive(extendedprogressdialog)">Conditional</animation>
      </control>
      <control type="label">
        <right>170</right>
        <top>20</top>
        <width>1000</width>
        <height>60</height>
        <font>Reg20</font>
        <align>right</align>
        <alignx>right</alignx>
        <textcolor>white</textcolor>
        <label>$INFO[System.Date]</label>
        <animation effect="fade" start="100" end="0" time="200" condition="Window.IsActive(extendedprogressdialog)">Conditional</animation>
      </control>
    </control>
  </include>
  <include name="netflix_infoline">
    <control type="group">
     <visible>!Control.HasFocus(300) + !Control.HasFocus(302) + !Control.HasFocus(30222) + !Control.HasFocus(660)</visible>
      <height>60</height>
      <control type="grouplist">
        <orientation>horizontal</orientation>
        <usecontrolcoords>true</usecontrolcoords>
        <itemgap>0</itemgap>
        <left>0</left>
        <right>$PARAM[titleright]</right>
        <control type="group">
          <width>200</width>
          <left>-5</left>
          <top>-20</top>
          <visible>!Control.HasFocus(3001) + !Control.HasFocus(302) + !Control.HasFocus(30222) + !Control.HasFocus(300)</visible>
          <visible>!String.IsEmpty(ListItem.Rating)</visible>
          <include content="Object_StarRating" condition="![Skin.HasSetting(DisableInfoRatings)]">
            <param name="height" value="50" />
            <param name="width" value="50" />
          </include>
        </control>
        <control type="group">
          <width>500</width>
          <control type="grouplist">
            <orientation>horizontal</orientation>
            <itemgap>10</itemgap>
            <!-- Year -->
            <control type="label">
              <width>60</width>
              <label>$INFO[ListItem.Year]</label>
              <textcolor>white</textcolor>
              <align>center</align>
              <font>font_tiny_bold</font>
              <visible>!String.IsEmpty(ListItem.Year) + !String.IsEqual(ListItem.DBType,episode)</visible>
            </control>
            <!-- MPAA -->
            <control type="group">
              <width>100</width>
              <height>30</height>
              <visible>!String.IsEmpty(ListItem.MPAA)</visible>
              <control type="image">
                <bottom>-18</bottom>
                <animation effect="fade" time="0" end="75" condition="true">Conditional</animation>
                <align>bottom</align>
                <height>100%</height>
                <width>100%</width>
                <texture colordiffuse="dimgrey">flags/flag_box_rating_classic.png</texture>
              </control>
              <control type="label" id="6115">
                <top>15</top>
                <left>30</left>
                <height>100%</height>
                <width>90%</width>
                <font>widget_trakt_title2</font>
                <textcolor>grey</textcolor>
                <scroll>false</scroll>
                <label>$INFO[ListItem.MPAA]</label>
              </control>
            </control>
            <!-- Duration -->
            <control type="group">
              <width>90</width>
              <height>30</height>
              <visible>!String.IsEmpty(ListItem.Duration) + ![String.IsEqual(ListItem.DBType,tvshow) | String.IsEqual(ListItem.DBType,season)]</visible>
              <control type="image">
                <bottom>-18</bottom>
                <animation effect="fade" time="0" end="75" condition="true">Conditional</animation>
                <align>bottom</align>
                <height>100%</height>
                <width>100%</width>
                <texture colordiffuse="dimgrey">flags/flag_box.png</texture>
              </control>
              <control type="label" id="6115">
                <top>15</top>
                <left>10</left>
                <height>100%</height>
                <width>90%</width>
                <font>widget_trakt_title2</font>
                <textcolor>grey</textcolor>
                <scroll>false</scroll>
                <label>$INFO[ListItem.Duration(h),,h] $INFO[ListItem.Duration(mm),,m]</label>
              </control>
            </control>
            <!-- Season Count -->
            <control type="label">
              <width>115</width>
              <textcolor>white</textcolor>
              <align>center</align>
              <font>widget_trakt_title2</font>
              <textcolor>grey</textcolor>
              <label>$VAR[total_seasons]</label>
              <visible>String.IsEqual(ListItem.DBType,tvshow) + !String.IsEmpty(ListItem.Property(TotalSeasons))</visible>
            </control>
            <!-- Aired -->
            <control type="label">
              <width>195</width>
              <label>Aired: $INFO[ListItem.Premiered(dd MMM yyyy)]</label>
              <textcolor>$VAR[ColorHighlight2]</textcolor>
              <font>font_tiny_bold</font>
              <visible>String.IsEqual(ListItem.DBType,episode)</visible>
              <visible>![String.IsEqual(ListItem.DBType,episode) + !Skin.HasSetting(EnableFullEpInfo)] + !Control.HasFocus(300) + !Control.HasFocus(302) + !Control.HasFocus(30222)</visible>
            </control>
            <control type="label">
              <width>auto</width>
              <label>$VAR[Label_Info_NextAired_Status]</label>
              <font>font_tiny</font>
              <textcolor>$VAR[ColorHighlight2]</textcolor>
              <visible>!Control.HasFocus(300) + !Control.HasFocus(302) + !Control.HasFocus(30222) + !String.IsEqual(ListItem.DBType,movie)</visible>
            </control>
          </control>
        </control>
      </control>
    </control>
  </include>
  <!-- Info Details Spinner @cartmandos -->
  <include name="Details_Spinner">
    <control type="grouplist">
      <height>62</height>
      <width>800</width>
      <itemgap>25</itemgap>
      <orientation>horizontal</orientation>
      <usecontrolcoords>true</usecontrolcoords>
      <control type="group">
        <visible>!String.IsEmpty(Control.GetLabel(84))</visible>
        <top>5</top>
        <height>46</height>
        <width>46</width>
        <control type="image">
          <animation effect="fade" time="150">Visible</animation>
          <animation effect="fade" time="0" end="60" condition="true">Conditional</animation>
          <align>left</align>
          <aligny>center</aligny>
          <texture>$VAR[DetailsSpinImage,netflix/spinner/,.png]</texture>
          <colordiffuse>red</colordiffuse>
        </control>
      </control>
      <control type="textbox" id="84">
        <top>-5</top>
        <animation effect="fade" time="150">Visible</animation>
        <height>75</height>
        <width>550</width>
        <label>$VAR[NetflixDetailsSpin]</label>
        <textcolor>dimgrey</textcolor>
        <align>left</align>
        <aligny>center</aligny>
        <font>font_tiny</font>
        <autoscroll>false</autoscroll>
      </control>
    </control>
  </include>
  <include name="main_menu_title">
    <control type="group">
      <width>800</width>
      <control type="label">
        <visible>[![Control.HasFocus(3901) | Control.HasFocus(3902) | Control.HasFocus(3903) | Control.HasFocus(3904) |Control.HasFocus(300)] + [Window.IsVisible(Home) | [!Window.IsVisible(Home) + String.IsEqual(ListItem.Property(path),Window(Home).Property(MenuIconFocus))]] + Skin.HasSetting(IconOnlyMode)] | [[Control.HasFocus(300) | Control.HasFocus(302)] + !Skin.HasSetting(IconOnlyMode)]</visible>
        <visible>Control.HasFocus(300) + !Skin.HasSetting(DisableNetflixVertLabel)</visible>
        <visible>!String.IsEqual(Container(300).ListItem.Property(widget),Weather) + !String.IsEqual(Container(300).ListItem.Property(widget),Settings)</visible>
        <left>100</left>
        <top>10</top>
        <height>40</height>
        <label>$INFO[ListItem.Label]</label>
        <textcolor>dimgrey</textcolor>
        <shadowcolor>black</shadowcolor>
        <font>netflix_heading_small</font>
        <width>700</width>
      </control>
    </control>
  </include>

  <include name="NextAiredUpcomingWidget">
    <param name="id" default="" />
    <param name="day" default="" />
    <param name="dayshort" default="" />
    <definition>
      <control type="group" id="2$PARAM[id]">
        <control type="label">
          <align>center</align>
          <height>50</height>
          <width>310</width>
          <font>font_small_bold</font>
          <textcolor>grey</textcolor>
	  <shadowcolor>dimgrey</shadowcolor>
          <label>$PARAM[day]</label>
	  <visible>Integer.IsGreater(Container($PARAM[id]).NumItems,0)</visible>
        </control>
      </control>
      <control type="list" id="$PARAM[id]">
	  <visible>Integer.IsGreater(Container($PARAM[id]).NumItems,0)</visible>
        <movement>4</movement>
        <orientation>vertical</orientation>
        <width>310</width>
        <height>340</height>
        <scrolltime>200</scrolltime>
        <onup condition="Window.IsVisible(Custom_Hub_Media.xml)">54</onup>
        <ondown condition="Window.Isvisible(Custom_Hub_Media.xml)">5412</ondown>
        <ondown condition="Window.Isvisible(Home)">330</ondown>
        <onleft condition="Window.Isvisible(Home)">300</onleft>
        <itemgap>5</itemgap>
        <itemlayout height="145">
          <control type="image">
            <top>50</top>
            <left>15</left>
            <height>60</height>
            <width>300</width>
            <texture background="true">$INFO[ListItem.Icon]</texture>
          </control>
          <control type="label">
            <top>120</top>
            <left>15</left>
            <width>345</width>
            <height>24</height>
            <font>font_tiny</font>
            <textcolor>red</textcolor>
            <aligny>center</aligny>
            <label>$INFO[ListItem.Label]</label>
          </control>
          <control type="label">
            <top>145</top>
            <left>15</left>
            <width>345</width>
            <height>24</height>
            <font>font_tiny</font>
            <textcolor>white</textcolor>
            <aligny>center</aligny>
            <label>$INFO[ListItem.Label2]</label>
          </control>
        </itemlayout>
        <focusedlayout height="145">
          <control type="image">
            <top>50</top>
            <left>15</left>
            <height>60</height>
            <width>300</width>
            <texture background="true">$INFO[ListItem.Icon]</texture>
          </control>
          <control type="image">
            <top>50</top>
            <width>310</width>
            <texture colordiffuse="white" border="20">common/outline.png</texture>
            <aspectratio>stretch</aspectratio>
            <visible>Control.Hasfocus($PARAM[id])</visible>
          </control>
          <control type="label">
            <top>120</top>
            <left>15</left>
            <width>345</width>
            <height>24</height>
            <font>font_tiny</font>
            <textcolor>red</textcolor>
            <aligny>center</aligny>
            <label>$INFO[ListItem.Label]</label>
          </control>
          <control type="label">
            <top>145</top>
            <left>15</left>
            <width>345</width>
            <height>24</height>
            <font>font_tiny</font>
            <textcolor>white</textcolor>
            <aligny>center</aligny>
            <label>$INFO[ListItem.Label2]</label>
          </control>
        </focusedlayout>
        <content>
          <item id="1">
            <label>$INFO[Window(Home).Property(NextAired.1.Label)]$INFO[Window(Home).Property(NextAired.1.NextSeasonNumber), (S,]$INFO[Window(Home).Property(NextAired.1.NextEpisodeNumber),E,)]</label>
            <label2>$INFO[Window(Home).Property(NextAired.1.NextDay)] at $INFO[Window(Home).Property(NextAired.1.ShortTime)]</label2>
            <icon>$INFO[Window(Home).Property(NextAired.1.Art(banner))]</icon>
            <onclick></onclick>
            <visible>String.Contains(Window(Home).Property(NextAired.1.NextDate),$PARAM[dayshort])</visible>
          </item>
          <item id="2">
            <label>$INFO[Window(Home).Property(NextAired.2.Label)]$INFO[Window(Home).Property(NextAired.2.NextSeasonNumber), (S,]$INFO[Window(Home).Property(NextAired.2.NextEpisodeNumber),E,)]</label>
            <label2>$INFO[Window(Home).Property(NextAired.2.NextDay)] at $INFO[Window(Home).Property(NextAired.2.ShortTime)]</label2>
            <icon>$INFO[Window(Home).Property(NextAired.2.Art(banner))]</icon>
            <onclick>ActivateWindow(Videos,$INFO[Window(Home).Property(NextAired.2.Library)],Return)</onclick>
            <visible>String.Contains(Window(Home).Property(NextAired.2.NextDate),$PARAM[dayshort])</visible>
          </item>
          <item id="3">
            <label>$INFO[Window(Home).Property(NextAired.3.Label)]$INFO[Window(Home).Property(NextAired.3.NextSeasonNumber), (S,]$INFO[Window(Home).Property(NextAired.3.NextEpisodeNumber),E,)]</label>
            <label2>$INFO[Window(Home).Property(NextAired.3.NextDay)] at $INFO[Window(Home).Property(NextAired.3.ShortTime)]</label2>
            <icon>$INFO[Window(Home).Property(NextAired.3.Art(banner))]</icon>
            <onclick>ActivateWindow(Videos,$INFO[Window(Home).Property(NextAired.3.Library)],Return)</onclick>
            <visible>String.Contains(Window(Home).Property(NextAired.3.NextDate),$PARAM[dayshort])</visible>
          </item>
          <item id="4">
            <label>$INFO[Window(Home).Property(NextAired.4.Label)]$INFO[Window(Home).Property(NextAired.4.NextSeasonNumber), (S,]$INFO[Window(Home).Property(NextAired.4.NextEpisodeNumber),E,)]</label>
            <label2>$INFO[Window(Home).Property(NextAired.4.NextDay)] at $INFO[Window(Home).Property(NextAired.4.ShortTime)]</label2>
            <icon>$INFO[Window(Home).Property(NextAired.4.Art(banner))]</icon>
            <onclick>ActivateWindow(Videos,$INFO[Window(Home).Property(NextAired.4.Library)],Return)</onclick>
            <visible>String.Contains(Window(Home).Property(NextAired.4.NextDate),$PARAM[dayshort])</visible>
          </item>
          <item id="5">
            <label>$INFO[Window(Home).Property(NextAired.5.Label)]$INFO[Window(Home).Property(NextAired.5.NextSeasonNumber), (S,]$INFO[Window(Home).Property(NextAired.5.NextEpisodeNumber),E,)]</label>
            <label2>$INFO[Window(Home).Property(NextAired.5.NextDay)] at $INFO[Window(Home).Property(NextAired.5.ShortTime)]</label2>
            <icon>$INFO[Window(Home).Property(NextAired.5.Art(banner))]</icon>
            <onclick>ActivateWindow(Videos,$INFO[Window(Home).Property(NextAired.5.Library)],Return)</onclick>
            <visible>String.Contains(Window(Home).Property(NextAired.5.NextDate),$PARAM[dayshort])</visible>
          </item>
          <item id="6">
            <label>$INFO[Window(Home).Property(NextAired.6.Label)]$INFO[Window(Home).Property(NextAired.6.NextSeasonNumber), (S,]$INFO[Window(Home).Property(NextAired.6.NextEpisodeNumber),E,)]</label>
            <label2>$INFO[Window(Home).Property(NextAired.6.NextDay)] at $INFO[Window(Home).Property(NextAired.6.ShortTime)]</label2>
            <icon>$INFO[Window(Home).Property(NextAired.6.Art(banner))]</icon>
            <onclick>ActivateWindow(Videos,$INFO[Window(Home).Property(NextAired.6.Library)],Return)</onclick>
            <visible>String.Contains(Window(Home).Property(NextAired.6.NextDate),$PARAM[dayshort])</visible>
          </item>
          <item id="7">
            <label>$INFO[Window(Home).Property(NextAired.7.Label)]$INFO[Window(Home).Property(NextAired.7.NextSeasonNumber), (S,]$INFO[Window(Home).Property(NextAired.7.NextEpisodeNumber),E,)]</label>
            <label2>$INFO[Window(Home).Property(NextAired.7.NextDay)] at $INFO[Window(Home).Property(NextAired.7.ShortTime)]</label2>
            <icon>$INFO[Window(Home).Property(NextAired.7.Art(banner))]</icon>
            <onclick>ActivateWindow(Videos,$INFO[Window(Home).Property(NextAired.7.Library)],Return)</onclick>
            <visible>String.Contains(Window(Home).Property(NextAired.7.NextDate),$PARAM[dayshort])</visible>
          </item>
          <item id="8">
            <label>$INFO[Window(Home).Property(NextAired.8.Label)]$INFO[Window(Home).Property(NextAired.8.NextSeasonNumber), (S,]$INFO[Window(Home).Property(NextAired.8.NextEpisodeNumber),E,)]</label>
            <label2>$INFO[Window(Home).Property(NextAired.8.NextDay)] at $INFO[Window(Home).Property(NextAired.8.ShortTime)]</label2>
            <icon>$INFO[Window(Home).Property(NextAired.8.Art(banner))]</icon>
            <onclick>ActivateWindow(Videos,$INFO[Window(Home).Property(NextAired.8.Library)],Return)</onclick>
            <visible>String.Contains(Window(Home).Property(NextAired.8.NextDate),$PARAM[dayshort])</visible>
          </item>
          <item id="9">
            <label>$INFO[Window(Home).Property(NextAired.9.Label)]$INFO[Window(Home).Property(NextAired.9.NextSeasonNumber), (S,]$INFO[Window(Home).Property(NextAired.9.NextEpisodeNumber),E,)]</label>
            <label2>$INFO[Window(Home).Property(NextAired.9.NextDay)] at $INFO[Window(Home).Property(NextAired.9.ShortTime)]</label2>
            <icon>$INFO[Window(Home).Property(NextAired.9.Art(banner))]</icon>
            <onclick>ActivateWindow(Videos,$INFO[Window(Home).Property(NextAired.9.Library)],Return)</onclick>
            <visible>String.Contains(Window(Home).Property(NextAired.9.NextDate),$PARAM[dayshort])</visible>
          </item>
          <item id="10">
            <label>$INFO[Window(Home).Property(NextAired.10.Label)]$INFO[Window(Home).Property(NextAired.10.NextSeasonNumber), (S,]$INFO[Window(Home).Property(NextAired.10.NextEpisodeNumber),E,)]</label>
            <label2>$INFO[Window(Home).Property(NextAired.10.NextDay)] at $INFO[Window(Home).Property(NextAired.10.ShortTime)]</label2>
            <icon>$INFO[Window(Home).Property(NextAired.10.Art(banner))]</icon>
            <onclick>ActivateWindow(Videos,$INFO[Window(Home).Property(NextAired.10.Library)],Return)</onclick>
            <visible>String.Contains(Window(Home).Property(NextAired.10.NextDate),$PARAM[dayshort])</visible>
          </item>
          <item id="11">
            <label>$INFO[Window(Home).Property(NextAired.11.Label)]$INFO[Window(Home).Property(NextAired.11.NextSeasonNumber), (S,]$INFO[Window(Home).Property(NextAired.11.NextEpisodeNumber),E,)]</label>
            <label2>$INFO[Window(Home).Property(NextAired.11.NextDay)] at $INFO[Window(Home).Property(NextAired.11.ShortTime)]</label2>
            <icon>$INFO[Window(Home).Property(NextAired.11.Art(banner))]</icon>
            <onclick>ActivateWindow(Videos,$INFO[Window(Home).Property(NextAired.11.Library)],Return)</onclick>
            <visible>String.Contains(Window(Home).Property(NextAired.11.NextDate),$PARAM[dayshort])</visible>
          </item>
          <item id="12">
            <label>$INFO[Window(Home).Property(NextAired.12.Label)]$INFO[Window(Home).Property(NextAired.12.NextSeasonNumber), (S,]$INFO[Window(Home).Property(NextAired.12.NextEpisodeNumber),E,)]</label>
            <label2>$INFO[Window(Home).Property(NextAired.12.NextDay)] at $INFO[Window(Home).Property(NextAired.12.ShortTime)]</label2>
            <icon>$INFO[Window(Home).Property(NextAired.12.Art(banner))]</icon>
            <onclick>ActivateWindow(Videos,$INFO[Window(Home).Property(NextAired.12.Library)],Return)</onclick>
            <visible>String.Contains(Window(Home).Property(NextAired.12.NextDate),$PARAM[dayshort])</visible>
          </item>
        </content>
      </control>
    </definition>
  </include>

<include name="object_search">
    <include>Global_Background</include>
    <!-- Onscreen keyboard by Cartmandos (Titan Bingie)  -->
    <control type="group">
        <top>90</top>
     <animation effect="slide" end="-450,0" time="500" condition="ControlGroup(5600).HasFocus">Conditional</animation>
     <control type="textbox">
	<left>70</left>
	<top>-10</top>
        <font>font_medium_bold</font>
	<textcolor>white</textcolor>
	<label>$INFO[Skin.String(CustomSearchTerm)]</label>
     </control>
      <control type="grouplist" id="9000">
        <top>65</top>
        <left>60</left>
        <height>500</height>
        <orientation>vertical</orientation>
        <itemgap>-10</itemgap>
        <defaultcontrol>101</defaultcontrol>
        <onright condition="!Integer.IsGreater(Container(5600).NumItems,0)">5600</onright>
        <onright>SetFocus(5600)</onright>
	<onback>ActivateWindow(1139)</onback>
        <!-- Space / Backspace Row -->
        <include content="SearchKeyboardRow">
          <param name="id" value="1000" />
          <param name="onleft" value="noop" />
          <param name="onright" value="5600" />
          <param name="row_include" value="SearchKeyboardRow_BackspaceAndSpace_Row" />
        </include>
        <!-- First Row -->
        <include content="SearchKeyboardRow">
          <param name="id" value="1001" />
          <param name="onleft" value="noop" />
          <param name="onright" value="5600" />
          <param name="row_include" value="SearchKeyboardRow_First_Row" />
        </include>
        <!-- Second Row -->
        <include content="SearchKeyboardRow">
          <param name="id" value="1002" />
          <param name="onleft" value="noop" />
          <param name="onright" value="5600" />
          <param name="row_include" value="SearchKeyboardRow_Second_Row" />
        </include>
        <!-- Third Row -->
        <include content="SearchKeyboardRow">
          <param name="id" value="1003" />
          <param name="onleft" value="noop" />
          <param name="onright" value="5600" />
          <param name="row_include" value="SearchKeyboardRow_Third_Row" />
        </include>
        <!-- Fourth Row -->
        <include content="SearchKeyboardRow">
          <param name="id" value="1004" />
          <param name="onleft" value="noop" />
          <param name="onright" value="5600" />
          <param name="row_include" value="SearchKeyboardRow_Fourth_Row" />
        </include>
        <!-- Fifth Row -->
        <include content="SearchKeyboardRow">
          <param name="id" value="1005" />
          <param name="onleft" value="noop" />
          <param name="onright" value="5600" />
          <param name="row_include" value="SearchKeyboardRow_Fifth_Row" />
        </include>
        <!-- Sixth Row -->
        <include content="SearchKeyboardRow">
          <param name="id" value="1006" />
          <param name="onleft" value="noop" />
          <param name="onright" value="5600" />
          <param name="row_include" value="SearchKeyboardRow_Sixth_Row" />
        </include>
      </control>
   </control>
   <control type="label">
    <left>600</left>
    <centertop>30%</centertop>
    <font>search_heading</font>
    <textcolor>dimgrey</textcolor>
    <label>Search for TV Shows and Movies</label>
    <visible>String.IsEmpty(Skin.String(CustomSearchTerm))</visible>
   </control>
   <control type="group">
     <top>70</top>
     <left>-40</left>
     <include content="Search_Suggestions_Container">
      <param name="id" value="1007" />
       <param name="onitemfocus" value="SetProperty(SuggestionPath,$INFO[ListItem.Property(path)])" />
       <param name="onitemfocus2" value="SetProperty(CustomSearch,1,home)" />
       <onclick condition="!String.IsEmpty(Skin.String(CustomSearchTerm))">Skin.SetString(CustomSearchTerm,$INFO[ListItem.Label])</onclick>
       <onclick condition="String.IsEmpty(Skin.String(CustomSearchTerm))">SetFocus(5600)</onclick>
       <visible>!$EXP[IsActualKeyboardActive] + !String.IsEmpty(Skin.String(CustomSearchTerm))</visible>
       <content>$VAR[SearchAutoCompleteContentProvider]</content>
     </include>
   </control>
   <include condition="!String.IsEmpty(Skin.String(CustomSearchTerm))">search_widgets</include>
   </include>

<include name="search_widgets">
    <control type="group">
      <visible>!String.IsEmpty(Skin.String(CustomSearchTerm))</visible>
      <left>200</left>
      <animation effect="slide" end="-450,0" time="500" condition="ControlGroup(5600).HasFocus">Conditional</animation>
	<width>1920</width>
      <control type="grouplist" id="5600">
	<width>1920</width>
	<height>1080</height>
        <left>270</left>
        <scrolltime tween="quadratic">400</scrolltime>
        <orientation>vertical</orientation>
        <usecontrolcoords>true</usecontrolcoords>
	<onback>9000</onback>
 	<onleft>9000</onleft>
            <control type="group" id="334" description="Spacer">
                <height>220</height>
		<visible>!Skin.HasSetting(DisableAuraHomeLayout)</visible>
            </control>
            <control type="group" id="335" description="Spacer">
                <height>50</height>
                <visible>Skin.HasSetting(DisableAuraHomeLayout)</visible>
            </control>
        <include condition="!String.IsEmpty(Skin.String(CustomSearchTerm))">skinshortcuts-template-search</include>

      </control>
    </control>
</include>

<include name="aurahub_tv_widgets">
      <control type="grouplist" id="5600">
        <width>1920</width>
        <height>1080</height>
        <left>10</left>
        <scrolltime tween="sine" easing="out">500</scrolltime>
        <orientation>vertical</orientation>
        <usecontrolcoords>true</usecontrolcoords>
        <onback>9000</onback>  
        <onleft>9000</onleft>
            <control type="group" id="334" description="Spacer">
                <height>220</height>
                <visible>!Skin.HasSetting(DisableAuraHomeLayout)</visible>
            </control>
            <control type="group" id="335" description="Spacer">
                <height>50</height>    
                <visible>Skin.HasSetting(DisableAuraHomeLayout)</visible>
            </control>
        <include>skinshortcuts-template-aurahubtv</include>

    </control>
</include>

<include name="aurahub_movies_widgets">
      <control type="grouplist" id="5700">
        <width>1920</width>
        <height>1080</height>
        <left>10</left>
        <scrolltime tween="quadratic">400</scrolltime>
        <orientation>vertical</orientation>
        <usecontrolcoords>true</usecontrolcoords>
        <onback>9000</onback>
        <onleft>9000</onleft>
            <control type="group" id="334" description="Spacer">
                <height>220</height>
                <visible>!Skin.HasSetting(DisableAuraHomeLayout)</visible>
            </control>
            <control type="group" id="335" description="Spacer">
                <height>50</height>
                <visible>Skin.HasSetting(DisableAuraHomeLayout)</visible>
            </control>
        <include>skinshortcuts-template-aurahubmovies</include>

    </control>
</include>

<include name="netflixhub_tv_widgets">
      <control type="grouplist" id="5700">
        <width>1920</width>
        <height>1080</height>
        <left>10</left>
        <scrolltime tween="quadratic">400</scrolltime>
        <orientation>vertical</orientation>
        <usecontrolcoords>true</usecontrolcoords>
        <onback>9000</onback>
        <onleft>9000</onleft>
            <control type="group" id="334" description="Spacer">
                <height>220</height>
                <visible>!Skin.HasSetting(DisableAuraHomeLayout)</visible>
            </control>
            <control type="group" id="335" description="Spacer">
                <height>50</height>
                <visible>Skin.HasSetting(DisableAuraHomeLayout)</visible>
            </control>
        <include>skinshortcuts-template-netflixhubtv</include>

    </control>
</include>

<include name="netflixhub_movies_widgets">
      <control type="grouplist" id="5700">
        <width>1920</width>
        <height>1080</height>
        <left>10</left>
        <scrolltime tween="quadratic">400</scrolltime>
        <orientation>vertical</orientation>
        <usecontrolcoords>true</usecontrolcoords>
        <onback>9000</onback>
        <onleft>9000</onleft>
            <control type="group" id="334" description="Spacer">
                <height>220</height>
                <visible>!Skin.HasSetting(DisableAuraHomeLayout)</visible>
            </control>
            <control type="group" id="335" description="Spacer">
                <height>50</height>
                <visible>Skin.HasSetting(DisableAuraHomeLayout)</visible>
            </control>
        <include>skinshortcuts-template-netflixhubmovies</include>

    </control>
</include>

</includes>
